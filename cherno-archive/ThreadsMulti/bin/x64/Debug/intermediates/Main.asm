; Listing generated by Microsoft (R) Optimizing Compiler Version 19.35.32215.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__7424102C_concurrencysal@h DB 01H
__7D4DA4FA_sal@h DB 01H
__0FC31696_vadefs@h DB 01H
__B56ADB44_vcruntime@h DB 01H
__51B79E59_xkeycheck@h DB 01H
__B5DFE31F_yvals_core@h DB 01H
__C9B856CF_limits@h DB 01H
__2674127B_climits DB 01H
__1B0272D9_corecrt@h DB 01H
__EBA563F3_vcruntime_new@h DB 01H
__D7109CAF_vcruntime_new_debug@h DB 01H
__935DC21B_crtdbg@h DB 01H
__00CBEA8D_crtdefs@h DB 01H
__8FC982FD_use_ansi@h DB 01H
__14DB8636_yvals@h DB 01H
__BB16330F_corecrt_math@h DB 01H
__3BF2A406_math@h DB 01H
__45DED006_corecrt_malloc@h DB 01H
__13F5961F_stddef@h DB 01H
__FD6DBD68_corecrt_search@h DB 01H
__E2E33A61_corecrt_wstdlib@h DB 01H
__6E5ACABA_stdlib@h DB 01H
__A29B3089_cstdlib DB 01H
__74C7B0B4_xtr1common DB 01H
__25BDFE26_intrin0@inl@h DB 01H
__19E65386_intrin0@h DB 01H
__1FF7AA4D_cmath DB 01H
__44420885_corecrt_stdio_config@h DB 01H
__AB601D8D_corecrt_wstdio@h DB 01H
__C1EC35D3_stdio@h DB 01H
__6855AA31_cstdio DB 01H
__61CC25A1_errno@h DB 01H
__E37A6634_vcruntime_string@h DB 01H
__E4C945B4_corecrt_memcpy_s@h DB 01H
__8EAFF484_corecrt_memory@h DB 01H
__6490AEC5_corecrt_wstring@h DB 01H
__E8295E1E_string@h DB 01H
__EE099869_cstring DB 01H
__EF1F6BBA_corecrt_wconio@h DB 01H
__74484FB3_corecrt_wctype@h DB 01H
__3D1D430C_corecrt_wdirect@h DB 01H
__8ECB7138_corecrt_share@h DB 01H
__DB7FEBA6_corecrt_wio@h DB 01H
__9A9F0068_corecrt_wprocess@h DB 01H
__369A9BC3_corecrt_wtime@h DB 01H
__CE789B9D_types@h DB 01H
__9901C817_stat@h DB 01H
__3FCAD62E_wchar@h DB 01H
__F2DE7C62_cwchar DB 01H
__0750EA24_cstddef DB 01H
__6EE2661F_initializer_list DB 01H
__62892210_xstddef DB 01H
__B11EF954_iosfwd DB 01H
__77CE78F0_stdint@h DB 01H
__1FC5D1F4_cstdint DB 01H
__1F1E5892_type_traits DB 01H
__9596B502_utility DB 01H
__9E977780___msvc_iter_core@hpp DB 01H
__1B16000D_xutility DB 01H
__0ABAB74D_iterator DB 01H
__F7972D0B_share@h DB 01H
__4E75CBD7___msvc_system_error_abi@hpp DB 01H
__F574DECA_cerrno DB 01H
__FA77ED4C_malloc@h DB 01H
__89766DA4_corecrt_terminate@h DB 01H
__6D69B109_eh@h DB 01H
__DFFE99FD_vcruntime_exception@h DB 01H
__C894841B_exception DB 01H
__B9985323_float@h DB 01H
__1B1161B6_cfloat DB 01H
__30F16C47_isa_availability@h DB 01H
__7DF72CD2_limits DB 01H
__1F199A81_new DB 01H
__C29808CD_xatomic@h DB 01H
__FF03D6C1_xmemory DB 01H
__8BD0505D_xstring DB 01H
__41DABE46_stdexcept DB 01H
__F6473D4F_xcall_once@h DB 01H
__BC4E9339_xerrc@h DB 01H
__0A9237D2_time@h DB 01H
__D9443645_ctime DB 01H
__ADD2E34C_xtimec@h DB 01H
__EE87B54E_xthreads@h DB 01H
__16C27010_atomic DB 01H
__491A2F6F_system_error DB 01H
__8A79911F_vcruntime_typeinfo@h DB 01H
__6BC9F314_typeinfo DB 01H
__C159205C_memory DB 01H
__ED1C7753_xfacet DB 01H
__393F9422___msvc_xlocinfo_types@hpp DB 01H
__1EC467ED_ctype@h DB 01H
__679E4D96_cctype DB 01H
__791C33B7_locale@h DB 01H
__3137EC58_clocale DB 01H
__744010DC_xlocinfo DB 01H
__54EE246C_xlocale DB 01H
__4DA567CF_xiosbase DB 01H
__437A06FA_streambuf DB 01H
__CA69427B_xlocnum DB 01H
__E7D4A097_ios DB 01H
__47FEFEA8_ostream DB 01H
__242ECB92_istream DB 01H
__796F7A12_iostream DB 01H
__734433E3_ratio DB 01H
__22992157___msvc_chrono@hpp DB 01H
__191A2A58_chrono DB 01H
__4D58E8BC_vcruntime_startup@h DB 01H
__005E73E1_corecrt_startup@h DB 01H
__8B12B2C4_process@h DB 01H
__B9D4B30C_tuple DB 01H
__1A1458EA_thread DB 01H
__B23DAEA1_Main@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
PUBLIC	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ	; std::_Narrow_char_traits<char,int>::eof
PUBLIC	?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ ; std::chrono::system_clock::now
PUBLIC	?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
PUBLIC	??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >
PUBLIC	?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch
PUBLIC	??$?0_J$0A@@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,0>
PUBLIC	?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1> >::count
PUBLIC	??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,0>
PUBLIC	?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ; std::chrono::steady_clock::now
PUBLIC	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
PUBLIC	??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=
PUBLIC	??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=
PUBLIC	?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::zero
PUBLIC	??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
PUBLIC	??Y?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAAAEAV012@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::operator+=
PUBLIC	??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>
PUBLIC	?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1> >::count
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,0>
PUBLIC	??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,0>
PUBLIC	??__Ks@chrono_literals@literals@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@chrono@3@_K@Z ; std::literals::chrono_literals::operator "" s
PUBLIC	??$?0_K$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_K@Z ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><unsigned __int64,0>
PUBLIC	?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1000000000> >::count
PUBLIC	??1thread@std@@QEAA@XZ				; std::thread::~thread
PUBLIC	?joinable@thread@std@@QEBA_NXZ			; std::thread::joinable
PUBLIC	?join@thread@std@@QEAAXXZ			; std::thread::join
PUBLIC	?zero@?$duration_values@_J@chrono@std@@SA_JXZ	; std::chrono::duration_values<__int64>::zero
PUBLIC	?get_id@this_thread@std@@YA?AVid@thread@2@XZ	; std::this_thread::get_id
PUBLIC	??0id@thread@std@@AEAA@I@Z			; std::thread::id::id
PUBLIC	?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEBAMXZ ; std::chrono::duration<float,std::ratio<1,1> >::count
PUBLIC	??0Timer@@QEAA@XZ				; Timer::Timer
PUBLIC	??1Timer@@QEAA@XZ				; Timer::~Timer
PUBLIC	??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><__int64,std::ratio<1,1000000000>,0>
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z ; std::operator<<<char,std::char_traits<char> >
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	?DoWork@@YAXXZ					; DoWork
PUBLIC	??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z ; std::this_thread::sleep_for<__int64,std::ratio<1,1> >
PUBLIC	?notmain@@YAHXZ					; notmain
PUBLIC	??$?0A6AXXZ$$V$0A@@thread@std@@QEAA@A6AXXZ@Z	; std::thread::thread<void (__cdecl&)(void),0>
PUBLIC	??$?0H$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBH@Z ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><int,0>
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
PUBLIC	??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<float,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,0>
PUBLIC	??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z ; std::_To_absolute_time<__int64,std::ratio<1,1> >
PUBLIC	??$?O_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z ; std::chrono::operator><__int64,std::ratio<1,1>,__int64,std::ratio<1,1> >
PUBLIC	??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$00@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1> >
PUBLIC	??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator<<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z	; std::thread::_Start<void (__cdecl&)(void)>
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1>,0>
PUBLIC	??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBM@Z ; std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><float,0>
PUBLIC	??$?M_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z ; std::chrono::operator<<__int64,std::ratio<1,1>,__int64,std::ratio<1,1> >
PUBLIC	??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$00@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1> >
PUBLIC	??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z ; std::chrono::operator<<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
PUBLIC	??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator<=<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
PUBLIC	??$make_unique@V?$tuple@P6AXXZ@std@@A6AXXZ$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@0@A6AXXZ@Z ; std::make_unique<std::tuple<void (__cdecl*)(void)>,void (__cdecl&)(void),0>
PUBLIC	??R?$default_delete@V?$tuple@P6AXXZ@std@@@std@@QEBAXPEAV?$tuple@P6AXXZ@1@@Z ; std::default_delete<std::tuple<void (__cdecl*)(void)> >::operator()
PUBLIC	??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::~unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >
PUBLIC	?get_deleter@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::get_deleter
PUBLIC	?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEBAPEAV?$tuple@P6AXXZ@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::get
PUBLIC	?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAPEAV?$tuple@P6AXXZ@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::release
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Get_first
PUBLIC	?__autoclassinit2@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAX_K@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::__autoclassinit2
PUBLIC	??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@$$QEAV01@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > ><std::default_delete<std::tuple<void (__cdecl*)(void)> >,0>
PUBLIC	??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void)>,0>
PUBLIC	??$exchange@PEAV?$tuple@P6AXXZ@std@@$$T@std@@YAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@$$QEA$$T@Z ; std::exchange<std::tuple<void (__cdecl*)(void)> *,std::nullptr_t>
PUBLIC	??$?0_JU?$ratio@$00$0JIJGIA@@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,0>
PUBLIC	??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::operator<<double,std::ratio<1,1>,__int64,std::ratio<1,1000000000> >
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,0>
PUBLIC	??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z ; std::tuple<void (__cdecl*)(void)>::tuple<void (__cdecl*)(void)><void (__cdecl*)(void),0>
PUBLIC	??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXXZ@1@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > ><std::default_delete<std::tuple<void (__cdecl*)(void)> >,0>
PUBLIC	??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V?$tuple@P6AXXZ@std@@@1@$$QEAPEAV?$tuple@P6AXXZ@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1><std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *>
PUBLIC	??$get@$0A@P6AXXZ@std@@YAAEAP6AXXZAEAV?$tuple@P6AXXZ@0@@Z ; std::get<0,void (__cdecl*)(void)>
PUBLIC	??$invoke@P6AXXZ@std@@YAX$$QEAP6AXXZ@Z		; std::invoke<void (__cdecl*)(void)>
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000>,0>
PUBLIC	??$?0NU?$ratio@$00$00@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,std::ratio<1,1>,0>
PUBLIC	??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000000000>,0>
PUBLIC	??$?0U_Exact_args_t@std@@AEBQ6AXXZ$$V$0A@@?$tuple@P6AXXZ@std@@QEAA@U_Exact_args_t@1@AEBQ6AXXZ@Z ; std::tuple<void (__cdecl*)(void)>::tuple<void (__cdecl*)(void)><std::_Exact_args_t,void (__cdecl*const &)(void),0>
PUBLIC	??$?0AEAPEAV?$tuple@P6AXXZ@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXXZ@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1><std::tuple<void (__cdecl*)(void)> * &>
PUBLIC	??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,double,std::ratio<1,1>,0>
PUBLIC	??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,0>
PUBLIC	??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>
PUBLIC	??$?0AEBQ6AXXZ@?$_Tuple_val@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z ; std::_Tuple_val<void (__cdecl*)(void)>::_Tuple_val<void (__cdecl*)(void)><void (__cdecl*const &)(void)>
PUBLIC	??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,0>
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_02EEKDFEKL@ms@				; `string'
PUBLIC	??_C@_0M@LKHJFMHJ@Timer?5took?5@		; `string'
PUBLIC	??_C@_0BF@JFEEALKJ@Started?5thread?5id?5?$DN?5@	; `string'
PUBLIC	??_C@_0L@MIDOPIHN@Working?4?4?4@		; `string'
PUBLIC	??_C@_0BG@KKFGIOJ@Finished?5thread?5id?5?$DN?5@	; `string'
PUBLIC	??_C@_09MIILECCM@Finished?4@			; `string'
PUBLIC	??_C@_0CE@FOEOINAG@Press?5enter?5to?5start?5measuremen@ ; `string'
PUBLIC	??_C@_08GFGBMIFC@?5seconds@			; `string'
PUBLIC	??_C@_0L@GLKCKPDG@Duration?3?5@			; `string'
PUBLIC	__real@3f800000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@412a5e0000000000
PUBLIC	__real@41cdcd6500000000
PUBLIC	__real@447a0000
PUBLIC	__real@4e6e6b28
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	strlen:PROC
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	__imp_terminate:PROC
EXTRN	_Xtime_get_ticks:PROC
EXTRN	_Query_perf_counter:PROC
EXTRN	_Query_perf_frequency:PROC
EXTRN	_Thrd_join:PROC
EXTRN	_Thrd_sleep:PROC
EXTRN	_Thrd_id:PROC
EXTRN	_Cnd_do_broadcast_at_thread_exit:PROC
EXTRN	?_Throw_Cpp_error@std@@YAXH@Z:PROC		; std::_Throw_Cpp_error
EXTRN	__imp_?good@ios_base@std@@QEBA_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QEBAHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEBA_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEAA_J_J@Z:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ:PROC
EXTRN	__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@M@Z:PROC
EXTRN	__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ:PROC
EXTRN	__imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAHXZ:PROC
EXTRN	__imp__beginthreadex:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
_BSS	SEGMENT
?s_Finished@@3_NA DB 01H DUP (?)			; s_Finished
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DD imagerel $LN5
	DD	imagerel $LN5+95
	DD	imagerel $unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_J$0A@@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0_J$0A@@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ DD imagerel $LN5
	DD	imagerel $LN5+267
	DD	imagerel $unwind$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAAAEAV012@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??Y?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAAAEAV012@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD imagerel $LN9
	DD	imagerel $LN9+289
	DD	imagerel $unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Ks@chrono_literals@literals@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@chrono@3@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??__Ks@chrono_literals@literals@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@chrono@3@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_K$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0_K$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1thread@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+66
	DD	imagerel $unwind$??1thread@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?joinable@thread@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+83
	DD	imagerel $unwind$?joinable@thread@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?join@thread@std@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+194
	DD	imagerel $unwind$?join@thread@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?zero@?$duration_values@_J@chrono@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?zero@?$duration_values@_J@chrono@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get_id@this_thread@std@@YA?AVid@thread@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?get_id@this_thread@std@@YA?AVid@thread@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0id@thread@std@@AEAA@I@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??0id@thread@std@@AEAA@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEBAMXZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEBAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Timer@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+130
	DD	imagerel $unwind$??0Timer@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Timer@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+231
	DD	imagerel $unwind$??1Timer@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DD imagerel $LN3
	DD	imagerel $LN3+128
	DD	imagerel $unwind$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel $LN25
	DD	imagerel $LN25+1036
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+80
	DD	imagerel $unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+115
	DD	imagerel $unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DoWork@@YAXXZ DD imagerel $LN6
	DD	imagerel $LN6+337
	DD	imagerel $unwind$?DoWork@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??DoWork@@YAXXZ@4HA DD imagerel ?dtor$0@?0??DoWork@@YAXXZ@4HA
	DD	imagerel ?dtor$0@?0??DoWork@@YAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??DoWork@@YAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?notmain@@YAHXZ DD imagerel $LN4
	DD	imagerel $LN4+560
	DD	imagerel $unwind$?notmain@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??notmain@@YAHXZ@4HA DD imagerel ?dtor$0@?0??notmain@@YAHXZ@4HA
	DD	imagerel ?dtor$0@?0??notmain@@YAHXZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??notmain@@YAHXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0A6AXXZ$$V$0A@@thread@std@@QEAA@A6AXXZ@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$?0A6AXXZ$$V$0A@@thread@std@@QEAA@A6AXXZ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0H$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0H$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+148
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN7
	DD	imagerel $LN7+261
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+116
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z DD imagerel $LN3
	DD	imagerel $LN3+162
	DD	imagerel $unwind$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD imagerel $LN9
	DD	imagerel $LN9+335
	DD	imagerel $unwind$??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+299
	DD	imagerel $unwind$??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?O_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??$?O_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$00@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z DD imagerel $LN3
	DD	imagerel $LN3+114
	DD	imagerel $unwind$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$00@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z DD imagerel $LN7
	DD	imagerel $LN7+194
	DD	imagerel $unwind$??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z DD imagerel $LN8
	DD	imagerel $LN8+331
	DD	imagerel $unwind$??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z@4HA DD imagerel ?dtor$1@?0???$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z@4HA
	DD	imagerel ?dtor$1@?0???$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z@4HA+36
	DD	imagerel $unwind$?dtor$1@?0???$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z DD imagerel $LN9
	DD	imagerel $LN9+282
	DD	imagerel $unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?M_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z DD imagerel $LN5
	DD	imagerel $LN5+152
	DD	imagerel $unwind$??$?M_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$00@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z DD imagerel $LN3
	DD	imagerel $LN3+160
	DD	imagerel $unwind$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$00@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z DD imagerel $LN5
	DD	imagerel $LN5+152
	DD	imagerel $unwind$??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DD imagerel $LN5
	DD	imagerel $LN5+101
	DD	imagerel $unwind$??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+358
	DD	imagerel $unwind$??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_unique@V?$tuple@P6AXXZ@std@@A6AXXZ$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@0@A6AXXZ@Z DD imagerel $LN8
	DD	imagerel $LN8+215
	DD	imagerel $unwind$??$make_unique@V?$tuple@P6AXXZ@std@@A6AXXZ$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@0@A6AXXZ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$default_delete@V?$tuple@P6AXXZ@std@@@std@@QEBAXPEAV?$tuple@P6AXXZ@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+125
	DD	imagerel $unwind$??R?$default_delete@V?$tuple@P6AXXZ@std@@@std@@QEBAXPEAV?$tuple@P6AXXZ@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get_deleter@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?get_deleter@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEBAPEAV?$tuple@P6AXXZ@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEBAPEAV?$tuple@P6AXXZ@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAPEAV?$tuple@P6AXXZ@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAPEAV?$tuple@P6AXXZ@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+208
	DD	imagerel $unwind$??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAV?$tuple@P6AXXZ@std@@$$T@std@@YAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??$exchange@PEAV?$tuple@P6AXXZ@std@@$$T@std@@YAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_JU?$ratio@$00$0JIJGIA@@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$?0_JU?$ratio@$00$0JIJGIA@@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD imagerel $LN5
	DD	imagerel $LN5+151
	DD	imagerel $unwind$??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z DD imagerel $LN9
	DD	imagerel $LN9+270
	DD	imagerel $unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXXZ@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXXZ@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V?$tuple@P6AXXZ@std@@@1@$$QEAPEAV?$tuple@P6AXXZ@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V?$tuple@P6AXXZ@std@@@1@$$QEAPEAV?$tuple@P6AXXZ@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$0A@P6AXXZ@std@@YAAEAP6AXXZAEAV?$tuple@P6AXXZ@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$get@$0A@P6AXXZ@std@@YAAEAP6AXXZAEAV?$tuple@P6AXXZ@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$invoke@P6AXXZ@std@@YAX$$QEAP6AXXZ@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??$invoke@P6AXXZ@std@@YAX$$QEAP6AXXZ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z DD imagerel $LN9
	DD	imagerel $LN9+276
	DD	imagerel $unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0NU?$ratio@$00$00@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??$?0NU?$ratio@$00$00@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@AEBQ6AXXZ$$V$0A@@?$tuple@P6AXXZ@std@@QEAA@U_Exact_args_t@1@AEBQ6AXXZ@Z DD imagerel $LN3
	DD	imagerel $LN3+98
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@AEBQ6AXXZ$$V$0A@@?$tuple@P6AXXZ@std@@QEAA@U_Exact_args_t@1@AEBQ6AXXZ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAPEAV?$tuple@P6AXXZ@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXXZ@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??$?0AEAPEAV?$tuple@P6AXXZ@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXXZ@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z DD imagerel $LN9
	DD	imagerel $LN9+307
	DD	imagerel $unwind$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD imagerel $LN9
	DD	imagerel $LN9+336
	DD	imagerel $unwind$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBQ6AXXZ@?$_Tuple_val@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0AEBQ6AXXZ@?$_Tuple_val@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z
pdata	ENDS
;	COMDAT __real@4e6e6b28
CONST	SEGMENT
__real@4e6e6b28 DD 04e6e6b28r			; 1e+09
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@41cdcd6500000000
CONST	SEGMENT
__real@41cdcd6500000000 DQ 041cdcd6500000000r	; 1e+09
CONST	ENDS
;	COMDAT __real@412a5e0000000000
CONST	SEGMENT
__real@412a5e0000000000 DQ 0412a5e0000000000r	; 864000
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0L@GLKCKPDG@Duration?3?5@
CONST	SEGMENT
??_C@_0L@GLKCKPDG@Duration?3?5@ DB 'Duration: ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08GFGBMIFC@?5seconds@
CONST	SEGMENT
??_C@_08GFGBMIFC@?5seconds@ DB ' seconds', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@FOEOINAG@Press?5enter?5to?5start?5measuremen@
CONST	SEGMENT
??_C@_0CE@FOEOINAG@Press?5enter?5to?5start?5measuremen@ DB 'Press enter t'
	DB	'o start measurement...', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MIILECCM@Finished?4@
CONST	SEGMENT
??_C@_09MIILECCM@Finished?4@ DB 'Finished.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KKFGIOJ@Finished?5thread?5id?5?$DN?5@
CONST	SEGMENT
??_C@_0BG@KKFGIOJ@Finished?5thread?5id?5?$DN?5@ DB 'Finished thread id = '
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MIDOPIHN@Working?4?4?4@
CONST	SEGMENT
??_C@_0L@MIDOPIHN@Working?4?4?4@ DB 'Working...', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JFEEALKJ@Started?5thread?5id?5?$DN?5@
CONST	SEGMENT
??_C@_0BF@JFEEALKJ@Started?5thread?5id?5?$DN?5@ DB 'Started thread id = ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LKHJFMHJ@Timer?5took?5@
CONST	SEGMENT
??_C@_0M@LKHJFMHJ@Timer?5took?5@ DB 'Timer took ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02EEKDFEKL@ms@
CONST	SEGMENT
??_C@_02EEKDFEKL@ms@ DB 'ms', 00H			; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBQ6AXXZ@?$_Tuple_val@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD 025051801H
	DD	01132318H
	DD	0700c0035H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z DD 025051801H
	DD	01132318H
	DD	0700c0035H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAPEAV?$tuple@P6AXXZ@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXXZ@1@@Z DD 025051c01H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@AEBQ6AXXZ$$V$0A@@?$tuple@P6AXXZ@std@@QEAA@U_Exact_args_t@1@AEBQ6AXXZ@Z DD 025051c01H
	DD	0117231cH
	DD	070100021H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0NU?$ratio@$00$00@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z DD 025051801H
	DD	01132318H
	DD	0700c0035H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$invoke@P6AXXZ@std@@YAX$$QEAP6AXXZ@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$0A@P6AXXZ@std@@YAAEAP6AXXZAEAV?$tuple@P6AXXZ@0@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V?$tuple@P6AXXZ@std@@@1@$$QEAPEAV?$tuple@P6AXXZ@1@@Z DD 025052101H
	DD	011c2321H
	DD	07015001dH
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXXZ@1@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z DB 060H
	DD	imagerel $ip2state$??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z DD 025051819H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z DD 025051801H
	DD	01132318H
	DD	0700c0035H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD 025051801H
	DD	01132318H
	DD	0700c0027H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_JU?$ratio@$00$0JIJGIA@@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAV?$tuple@P6AXXZ@std@@$$T@std@@YAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@$$QEA$$T@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	0b7H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z DB 060H
	DD	imagerel $ip2state$??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z DD 025053d19H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z
	DD	013bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z$rtcName$0 DB 05fH ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void)>,0>
	DB	046H
	DB	06eH
	DB	056H
	DB	061H
	DB	06cH
	DB	073H
	DB	00H
	ORG $+8
??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z$rtcVarDesc DD 028H ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void)>,0>
	DD	08H
	DQ	FLAT:??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z$rtcName$0
	ORG $+48
??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z$rtcFrameData DD 01H ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void)>,0>
	DD	00H
	DQ	FLAT:??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@$$QEAV01@@Z DD 025051801H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAPEAV?$tuple@P6AXXZ@2@XZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEBAPEAV?$tuple@P6AXXZ@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get_deleter@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$default_delete@V?$tuple@P6AXXZ@std@@@std@@QEBAXPEAV?$tuple@P6AXXZ@1@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_unique@V?$tuple@P6AXXZ@std@@A6AXXZ$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@0@A6AXXZ@Z DD 025051801H
	DD	01132318H
	DD	0700c002fH
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03bH
	DW	014dH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z DD 025054219H
	DD	01132318H
	DD	0700c0041H
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	01f8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$0 DB 05fH ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
	DB	054H
	DB	065H
	DB	06eH
	DB	05fH
	DB	064H
	DB	061H
	DB	079H
	DB	073H
	DB	00H
	ORG $+6
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$1 DB 05fH ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
	DB	054H
	DB	065H
	DB	06eH
	DB	05fH
	DB	064H
	DB	061H
	DB	079H
	DB	073H
	DB	05fH
	DB	064H
	DB	00H
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$2 DB 05fH ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
	DB	054H
	DB	078H
	DB	030H
	DB	00H
	ORG $+7
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$3 DB 05fH ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
	DB	057H
	DB	068H
	DB	06fH
	DB	06cH
	DB	065H
	DB	05fH
	DB	073H
	DB	065H
	DB	063H
	DB	06fH
	DB	06eH
	DB	064H
	DB	073H
	DB	00H
	ORG $+1
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcFrameData DD 04H ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
	DD	00H
	DQ	FLAT:??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcVarDesc
	ORG $+8
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcVarDesc DD 0a8H ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
	DD	08H
	DQ	FLAT:??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$3
	DD	068H
	DD	08H
	DQ	FLAT:??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$2
	DD	048H
	DD	08H
	DQ	FLAT:??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DD 025051801H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z DD 025051801H
	DD	01132318H
	DD	0700c0027H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$00@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z DD 025051d01H
	DD	0118231dH
	DD	070110029H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?M_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z DD 025051801H
	DD	01132318H
	DD	0700c0027H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBM@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z DD 025051801H
	DD	01132318H
	DD	0700c0035H
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03bH
	DW	0132H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z DB 06H
	DB	00H
	DB	00H
	DB	01dH, 02H
	DB	02H
	DB	'I', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$1@?0???$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z
	DD	imagerel $ip2state$??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z DD 035054219H
	DD	01133318H
	DD	0700c002dH
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z
	DD	0152H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z$rtcName$0 DB 05fH ; std::thread::_Start<void (__cdecl&)(void)>
	DB	044H
	DB	065H
	DB	063H
	DB	061H
	DB	079H
	DB	05fH
	DB	063H
	DB	06fH
	DB	070H
	DB	069H
	DB	065H
	DB	064H
	DB	00H
	ORG $+2
??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z$rtcVarDesc DD 038H ; std::thread::_Start<void (__cdecl&)(void)>
	DD	08H
	DQ	FLAT:??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z$rtcName$0
	ORG $+48
??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z$rtcFrameData DD 01H ; std::thread::_Start<void (__cdecl&)(void)>
	DD	00H
	DQ	FLAT:??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	0a9H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z DD 025053d19H
	DD	010e2313H
	DD	07007002bH
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0148H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcName$0 DB 05fH ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	DB	04eH
	DB	06fH
	DB	077H
	DB	00H
	ORG $+3
??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcName$1 DB 05fH ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	DB	054H
	DB	067H
	DB	074H
	DB	00H
	ORG $+3
??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcVarDesc DD 048H ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	DD	010H
	DQ	FLAT:??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcName$0
	ORG $+96
??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcFrameData DD 02H ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	DD	00H
	DQ	FLAT:??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DD 025051801H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$00@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z DD 025051d01H
	DD	0118231dH
	DD	070110025H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?O_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03bH
	DW	0112H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z DD 025054219H
	DD	01132318H
	DD	0700c0035H
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0198H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z$rtcName$0 DB 05fH ; std::_To_absolute_time<__int64,std::ratio<1,1> >
	DB	05aH
	DB	065H
	DB	072H
	DB	06fH
	DB	00H
	ORG $+2
??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z$rtcName$1 DB 05fH ; std::_To_absolute_time<__int64,std::ratio<1,1> >
	DB	04eH
	DB	06fH
	DB	077H
	DB	00H
	ORG $+3
??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z$rtcName$2 DB 05fH ; std::_To_absolute_time<__int64,std::ratio<1,1> >
	DB	041H
	DB	062H
	DB	073H
	DB	05fH
	DB	074H
	DB	069H
	DB	06dH
	DB	065H
	DB	00H
	ORG $+6
??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z$rtcName$3 DB 05fH ; std::_To_absolute_time<__int64,std::ratio<1,1> >
	DB	046H
	DB	06fH
	DB	072H
	DB	065H
	DB	076H
	DB	065H
	DB	072H
	DB	00H
	ORG $+7
??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z$rtcVarDesc DD 088H ; std::_To_absolute_time<__int64,std::ratio<1,1> >
	DD	08H
	DQ	FLAT:??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z$rtcName$3
	DD	068H
	DD	08H
	DQ	FLAT:??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z$rtcName$2
	DD	048H
	DD	08H
	DQ	FLAT:??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z$rtcName$0
	ORG $+192
??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z$rtcFrameData DD 04H ; std::_To_absolute_time<__int64,std::ratio<1,1> >
	DD	00H
	DQ	FLAT:??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD 025051801H
	DD	01132318H
	DD	0700c0035H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z DD 025051d01H
	DD	0118231dH
	DD	070110029H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 06H
	DB	00H
	DB	00H
	DB	'p'
	DB	02H
	DB	0f1H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 025051811H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0H$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBH@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0A6AXXZ$$V$0A@@thread@std@@QEAA@A6AXXZ@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	02aH
	DW	0217H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??notmain@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?notmain@@YAHXZ DB 06H
	DB	00H
	DB	00H
	DB	'U', 02H
	DB	02H
	DB	'}', 05H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?notmain@@YAHXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??notmain@@YAHXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?notmain@@YAHXZ DB 028H
	DD	imagerel $stateUnwindMap$?notmain@@YAHXZ
	DD	imagerel $ip2state$?notmain@@YAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?notmain@@YAHXZ DD 025053119H
	DD	010a230fH
	DD	070030049H
	DD	05002H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?notmain@@YAHXZ
	DD	0232H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?notmain@@YAHXZ$rtcName$0 DB 077H			; notmain
	DB	06fH
	DB	072H
	DB	06bH
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?notmain@@YAHXZ$rtcName$1 DB 073H			; notmain
	DB	074H
	DB	061H
	DB	072H
	DB	074H
	DB	00H
	ORG $+2
?notmain@@YAHXZ$rtcName$2 DB 065H			; notmain
	DB	06eH
	DB	064H
	DB	00H
	ORG $+4
?notmain@@YAHXZ$rtcName$3 DB 064H			; notmain
	DB	075H
	DB	072H
	DB	061H
	DB	074H
	DB	069H
	DB	06fH
	DB	06eH
	DB	00H
	ORG $+15
?notmain@@YAHXZ$rtcVarDesc DD 094H			; notmain
	DD	04H
	DQ	FLAT:?notmain@@YAHXZ$rtcName$3
	DD	078H
	DD	08H
	DQ	FLAT:?notmain@@YAHXZ$rtcName$2
	DD	058H
	DD	08H
	DQ	FLAT:?notmain@@YAHXZ$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:?notmain@@YAHXZ$rtcName$0
	ORG $+192
?notmain@@YAHXZ$rtcFrameData DD 04H			; notmain
	DD	00H
	DQ	FLAT:?notmain@@YAHXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	02aH
	DW	0138H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??DoWork@@YAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?DoWork@@YAXXZ DB 06H
	DB	00H
	DB	00H
	DB	08eH
	DB	02H
	DB	'a', 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?DoWork@@YAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??DoWork@@YAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?DoWork@@YAXXZ DB 028H
	DD	imagerel $stateUnwindMap$?DoWork@@YAXXZ
	DD	imagerel $ip2state$?DoWork@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DoWork@@YAXXZ DD 025053119H
	DD	010a230fH
	DD	070030031H
	DD	05002H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?DoWork@@YAXXZ
	DD	0172H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?DoWork@@YAXXZ$rtcName$0 DB 074H			; DoWork
	DB	069H
	DB	06dH
	DB	065H
	DB	072H
	DB	00H
	ORG $+10
?DoWork@@YAXXZ$rtcVarDesc DD 028H			; DoWork
	DD	018H
	DQ	FLAT:?DoWork@@YAXXZ$rtcName$0
	ORG $+48
?DoWork@@YAXXZ$rtcFrameData DD 01H			; DoWork
	DD	00H
	DQ	FLAT:?DoWork@@YAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03bH
	DW	03f3H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	'A', 04H
	DB	02H
	DB	'<'
	DB	04H
	DB	095H, 09H
	DB	02H
	DB	't'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DB	028H
	DB	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 038H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 025054219H
	DD	01132318H
	DD	0700c0045H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	021bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcName$0 DB 05fH ; std::operator<<<std::char_traits<char> >
	DB	04fH
	DB	06bH
	DB	00H
	ORG $+12
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcVarDesc DD 088H ; std::operator<<<std::char_traits<char> >
	DD	010H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcName$0
	ORG $+48
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData DD 01H ; std::operator<<<std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DD 025051d01H
	DD	0118231dH
	DD	070110025H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1Timer@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1Timer@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1Timer@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Timer@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007002dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1Timer@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Timer@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEBAMXZ DD 035051301H
	DD	010e3313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0id@thread@std@@AEAA@I@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?get_id@this_thread@std@@YA?AVid@thread@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?get_id@this_thread@std@@YA?AVid@thread@2@XZ DB 060H
	DD	imagerel $ip2state$?get_id@this_thread@std@@YA?AVid@thread@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get_id@this_thread@std@@YA?AVid@thread@2@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?get_id@this_thread@std@@YA?AVid@thread@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?zero@?$duration_values@_J@chrono@std@@SA_JXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?join@thread@std@@QEAAXXZ DD 025061401H
	DD	010f2314H
	DD	070080028H
	DD	050066007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?joinable@thread@std@@QEBA_NXZ DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1thread@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ DD 035051301H
	DD	010e3313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_K$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Ks@chrono_literals@literals@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@chrono@3@_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD 025051801H
	DD	01132318H
	DD	0700c0035H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ DD 035051301H
	DD	010e3313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAAAEAV012@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ DD 025051301H
	DD	010e2313H
	DD	070070045H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_J$0A@@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DD 025051801H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z PROC ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,0>, COMDAT

; 99   :             : _MyRep(static_cast<_Rep>(_Val)) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Val$[rbp]
	movsd	xmm0, QWORD PTR [rcx]
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ENDP ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\tuple
;	COMDAT ??$?0AEBQ6AXXZ@?$_Tuple_val@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z
_TEXT	SEGMENT
this$ = 224
_Arg$ = 232
??$?0AEBQ6AXXZ@?$_Tuple_val@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z PROC ; std::_Tuple_val<void (__cdecl*)(void)>::_Tuple_val<void (__cdecl*)(void)><void (__cdecl*const &)(void)>, COMDAT

; 144  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__B9D4B30C_tuple
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Arg$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0AEBQ6AXXZ@?$_Tuple_val@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z ENDP ; std::_Tuple_val<void (__cdecl*)(void)>::_Tuple_val<void (__cdecl*)(void)><void (__cdecl*const &)(void)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z PROC ; std::tuple<>::tuple<><std::_Exact_args_t,0>, COMDAT

; 199  :     constexpr tuple(_Tag) noexcept /* strengthened */ {}

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__B9D4B30C_tuple
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ENDP ; std::tuple<>::tuple<><std::_Exact_args_t,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
_TEXT	SEGMENT
_Num_is_one$ = 4
_Den_is_one$ = 36
$T1 = 264
$T2 = 296
$T3 = 328
$T4 = 360
__$ReturnUdt$ = 416
_Dur$ = 424
??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,0>, COMDAT

; 422  :         is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) /* strengthened */ {

$LN9:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 423  :         // convert duration to another duration; truncate
; 424  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 425  : 
; 426  :         using _ToRep = typename _To::rep;
; 427  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 428  : 
; 429  :         constexpr bool _Num_is_one = _CF::num == 1;

	mov	BYTE PTR _Num_is_one$[rbp], 1

; 430  :         constexpr bool _Den_is_one = _CF::den == 1;

	mov	BYTE PTR _Den_is_one$[rbp], 1

; 431  : 
; 432  :         if (_Den_is_one) {

	xor	eax, eax
	cmp	eax, 1
	je	$LN2@duration_c

; 433  :             if (_Num_is_one) {

	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN4@duration_c

; 434  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	cvtsi2sd xmm0, rax
	movsd	QWORD PTR $T1[rbp], xmm0
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@duration_c

; 435  :             } else {

	jmp	SHORT $LN5@duration_c
$LN4@duration_c:

; 436  :                 return static_cast<_To>(

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	cvtsi2sd xmm0, rax
	mulsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR $T2[rbp], xmm0
	lea	rdx, QWORD PTR $T2[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@duration_c
$LN5@duration_c:

; 437  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 438  :             }
; 439  :         } else {

	jmp	$LN1@duration_c
$LN2@duration_c:

; 440  :             if (_Num_is_one) {

	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN6@duration_c

; 441  :                 return static_cast<_To>(

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	cvtsi2sd xmm0, rax
	divsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR $T3[rbp], xmm0
	lea	rdx, QWORD PTR $T3[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	SHORT $LN1@duration_c

; 442  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 443  :             } else {

	jmp	SHORT $LN1@duration_c
$LN6@duration_c:

; 444  :                 return static_cast<_To>(static_cast<_ToRep>(

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	cvtsi2sd xmm0, rax
	mulsd	xmm0, QWORD PTR __real@3ff0000000000000
	divsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR $T4[rbp], xmm0
	lea	rdx, QWORD PTR $T4[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@duration_c:

; 445  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 446  :             }
; 447  :         }
; 448  :     }

	lea	rsp, QWORD PTR [rbp+392]
	pop	rdi
	pop	rbp
	ret	0
??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z
_TEXT	SEGMENT
_Num_is_one$ = 4
_Den_is_one$ = 36
$T1 = 264
$T2 = 296
$T3 = 328
$T4 = 360
__$ReturnUdt$ = 416
_Dur$ = 424
??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,double,std::ratio<1,1>,0>, COMDAT

; 422  :         is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) /* strengthened */ {

$LN9:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 423  :         // convert duration to another duration; truncate
; 424  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 425  : 
; 426  :         using _ToRep = typename _To::rep;
; 427  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 428  : 
; 429  :         constexpr bool _Num_is_one = _CF::num == 1;

	mov	BYTE PTR _Num_is_one$[rbp], 0

; 430  :         constexpr bool _Den_is_one = _CF::den == 1;

	mov	BYTE PTR _Den_is_one$[rbp], 1

; 431  : 
; 432  :         if (_Den_is_one) {

	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN2@duration_c

; 433  :             if (_Num_is_one) {

	xor	eax, eax
	test	eax, eax
	je	SHORT $LN4@duration_c

; 434  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1> >::count
	movsd	QWORD PTR $T1[rbp], xmm0
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@duration_c

; 435  :             } else {

	jmp	SHORT $LN5@duration_c
$LN4@duration_c:

; 436  :                 return static_cast<_To>(

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1> >::count
	mulsd	xmm0, QWORD PTR __real@41cdcd6500000000
	movsd	QWORD PTR $T2[rbp], xmm0
	lea	rdx, QWORD PTR $T2[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@duration_c
$LN5@duration_c:

; 437  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 438  :             }
; 439  :         } else {

	jmp	SHORT $LN1@duration_c
$LN2@duration_c:

; 440  :             if (_Num_is_one) {

	xor	eax, eax
	test	eax, eax
	je	SHORT $LN6@duration_c

; 441  :                 return static_cast<_To>(

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1> >::count
	divsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR $T3[rbp], xmm0
	lea	rdx, QWORD PTR $T3[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	SHORT $LN1@duration_c

; 442  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 443  :             } else {

	jmp	SHORT $LN1@duration_c
$LN6@duration_c:

; 444  :                 return static_cast<_To>(static_cast<_ToRep>(

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1> >::count
	mulsd	xmm0, QWORD PTR __real@41cdcd6500000000
	divsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR $T4[rbp], xmm0
	lea	rdx, QWORD PTR $T4[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@duration_c:

; 445  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 446  :             }
; 447  :         }
; 448  :     }

	lea	rsp, QWORD PTR [rbp+392]
	pop	rdi
	pop	rbp
	ret	0
??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,double,std::ratio<1,1>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$?0AEAPEAV?$tuple@P6AXXZ@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXXZ@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
<_Val2_0>$ = 240
??$?0AEAPEAV?$tuple@P6AXXZ@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXXZ@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1><std::tuple<void (__cdecl*)(void)> * &>, COMDAT

; 1375 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__FF03D6C1_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR <_Val2_0>$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0AEAPEAV?$tuple@P6AXXZ@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXXZ@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1><std::tuple<void (__cdecl*)(void)> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@AEBQ6AXXZ$$V$0A@@?$tuple@P6AXXZ@std@@QEAA@U_Exact_args_t@1@AEBQ6AXXZ@Z
_TEXT	SEGMENT
$T1 = 196
this$ = 256
__formal$ = 264
_This_arg$ = 272
??$?0U_Exact_args_t@std@@AEBQ6AXXZ$$V$0A@@?$tuple@P6AXXZ@std@@QEAA@U_Exact_args_t@1@AEBQ6AXXZ@Z PROC ; std::tuple<void (__cdecl*)(void)>::tuple<void (__cdecl*)(void)><std::_Exact_args_t,void (__cdecl*const &)(void),0>, COMDAT

; 239  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...), _Myfirst(_STD forward<_This2>(_This_arg)) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__B9D4B30C_tuple
	call	__CheckForDebuggerJustMyCode
	movzx	edx, BYTE PTR $T1[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>
	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR _This_arg$[rbp]
	mov	rcx, rax
	call	??$?0AEBQ6AXXZ@?$_Tuple_val@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z ; std::_Tuple_val<void (__cdecl*)(void)>::_Tuple_val<void (__cdecl*)(void)><void (__cdecl*const &)(void)>
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$?0U_Exact_args_t@std@@AEBQ6AXXZ$$V$0A@@?$tuple@P6AXXZ@std@@QEAA@U_Exact_args_t@1@AEBQ6AXXZ@Z ENDP ; std::tuple<void (__cdecl*)(void)>::tuple<void (__cdecl*)(void)><std::_Exact_args_t,void (__cdecl*const &)(void),0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
_Dur$ = 264
??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z PROC ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000000000>,0>, COMDAT

; 107  :             : _MyRep(_CHRONO duration_cast<duration>(_Dur).count()) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rdx, QWORD PTR _Dur$[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,0>
	mov	rcx, rax
	call	?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1000000000> >::count
	mov	rax, QWORD PTR this$[rbp]
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ENDP ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000000000>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0NU?$ratio@$00$00@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
_Dur$ = 264
??$?0NU?$ratio@$00$00@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z PROC ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,std::ratio<1,1>,0>, COMDAT

; 107  :             : _MyRep(_CHRONO duration_cast<duration>(_Dur).count()) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rdx, QWORD PTR _Dur$[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,double,std::ratio<1,1>,0>
	mov	rcx, rax
	call	?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1000000000> >::count
	mov	rax, QWORD PTR this$[rbp]
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$?0NU?$ratio@$00$00@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z ENDP ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,std::ratio<1,1>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z
_TEXT	SEGMENT
_Num_is_one$ = 4
_Den_is_one$ = 36
$T1 = 264
$T2 = 296
$T3 = 328
$T4 = 360
__$ReturnUdt$ = 416
_Dur$ = 424
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000>,0>, COMDAT

; 422  :         is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) /* strengthened */ {

$LN9:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 423  :         // convert duration to another duration; truncate
; 424  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 425  : 
; 426  :         using _ToRep = typename _To::rep;
; 427  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 428  : 
; 429  :         constexpr bool _Num_is_one = _CF::num == 1;

	mov	BYTE PTR _Num_is_one$[rbp], 0

; 430  :         constexpr bool _Den_is_one = _CF::den == 1;

	mov	BYTE PTR _Den_is_one$[rbp], 1

; 431  : 
; 432  :         if (_Den_is_one) {

	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN2@duration_c

; 433  :             if (_Num_is_one) {

	xor	eax, eax
	test	eax, eax
	je	SHORT $LN4@duration_c

; 434  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
	mov	QWORD PTR $T1[rbp], rax
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@duration_c

; 435  :             } else {

	jmp	SHORT $LN5@duration_c
$LN4@duration_c:

; 436  :                 return static_cast<_To>(

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
	imul	rax, rax, 100				; 00000064H
	mov	QWORD PTR $T2[rbp], rax
	lea	rdx, QWORD PTR $T2[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	SHORT $LN1@duration_c
$LN5@duration_c:

; 437  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 438  :             }
; 439  :         } else {

	jmp	SHORT $LN1@duration_c
$LN2@duration_c:

; 440  :             if (_Num_is_one) {

	xor	eax, eax
	test	eax, eax
	je	SHORT $LN6@duration_c

; 441  :                 return static_cast<_To>(

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
	mov	QWORD PTR $T3[rbp], rax
	lea	rdx, QWORD PTR $T3[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	SHORT $LN1@duration_c

; 442  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 443  :             } else {

	jmp	SHORT $LN1@duration_c
$LN6@duration_c:

; 444  :                 return static_cast<_To>(static_cast<_ToRep>(

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
	imul	rax, rax, 100				; 00000064H
	mov	QWORD PTR $T4[rbp], rax
	lea	rdx, QWORD PTR $T4[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@duration_c:

; 445  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 446  :             }
; 447  :         }
; 448  :     }

	lea	rsp, QWORD PTR [rbp+392]
	pop	rdi
	pop	rbp
	ret	0
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\type_traits
;	COMDAT ??$invoke@P6AXXZ@std@@YAX$$QEAP6AXXZ@Z
_TEXT	SEGMENT
_Obj$ = 224
??$invoke@P6AXXZ@std@@YAX$$QEAP6AXXZ@Z PROC		; std::invoke<void (__cdecl*)(void)>, COMDAT

; 1563 :     -> decltype(static_cast<_Callable&&>(_Obj)()) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F1E5892_type_traits
	call	__CheckForDebuggerJustMyCode

; 1564 :     return static_cast<_Callable&&>(_Obj)();

	mov	rax, QWORD PTR _Obj$[rbp]
	call	QWORD PTR [rax]

; 1565 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$invoke@P6AXXZ@std@@YAX$$QEAP6AXXZ@Z ENDP		; std::invoke<void (__cdecl*)(void)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\tuple
;	COMDAT ??$get@$0A@P6AXXZ@std@@YAAEAP6AXXZAEAV?$tuple@P6AXXZ@0@@Z
_TEXT	SEGMENT
_Tuple$ = 224
??$get@$0A@P6AXXZ@std@@YAAEAP6AXXZAEAV?$tuple@P6AXXZ@0@@Z PROC ; std::get<0,void (__cdecl*)(void)>, COMDAT

; 742  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__B9D4B30C_tuple
	call	__CheckForDebuggerJustMyCode

; 743  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 744  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

	mov	rax, QWORD PTR _Tuple$[rbp]

; 745  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$get@$0A@P6AXXZ@std@@YAAEAP6AXXZAEAV?$tuple@P6AXXZ@0@@Z ENDP ; std::get<0,void (__cdecl*)(void)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V?$tuple@P6AXXZ@std@@@1@$$QEAPEAV?$tuple@P6AXXZ@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
_Val1$ = 240
<_Val2_0>$ = 248
??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V?$tuple@P6AXXZ@std@@@1@$$QEAPEAV?$tuple@P6AXXZ@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1><std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *>, COMDAT

; 1380 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__FF03D6C1_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR <_Val2_0>$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V?$tuple@P6AXXZ@std@@@1@$$QEAPEAV?$tuple@P6AXXZ@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1><std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory
;	COMDAT ??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXXZ@1@@Z
_TEXT	SEGMENT
$T1 = 196
this$ = 256
_Ptr$ = 264
??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXXZ@1@@Z PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > ><std::default_delete<std::tuple<void (__cdecl*)(void)> >,0>, COMDAT

; 3119 :     _CONSTEXPR23 explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t{}, _Ptr) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__C159205C_memory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	r8, QWORD PTR _Ptr$[rbp]
	movzx	edx, BYTE PTR $T1[rbp]
	mov	rcx, rax
	call	??$?0AEAPEAV?$tuple@P6AXXZ@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXXZ@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1><std::tuple<void (__cdecl*)(void)> * &>
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXXZ@1@@Z ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > ><std::default_delete<std::tuple<void (__cdecl*)(void)> >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\tuple
;	COMDAT ??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z
_TEXT	SEGMENT
$T1 = 196
this$ = 256
_This_arg$ = 264
??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z PROC ; std::tuple<void (__cdecl*)(void)>::tuple<void (__cdecl*)(void)><void (__cdecl*)(void),0>, COMDAT

; 277  :         : tuple(_Exact_args_t{}, _This_arg, _Rest_arg...) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__B9D4B30C_tuple
	call	__CheckForDebuggerJustMyCode
	mov	r8, QWORD PTR _This_arg$[rbp]
	movzx	edx, BYTE PTR $T1[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??$?0U_Exact_args_t@std@@AEBQ6AXXZ$$V$0A@@?$tuple@P6AXXZ@std@@QEAA@U_Exact_args_t@1@AEBQ6AXXZ@Z ; std::tuple<void (__cdecl*)(void)>::tuple<void (__cdecl*)(void)><std::_Exact_args_t,void (__cdecl*const &)(void),0>
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z ENDP ; std::tuple<void (__cdecl*)(void)>::tuple<void (__cdecl*)(void)><void (__cdecl*)(void),0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z
_TEXT	SEGMENT
_Num_is_one$ = 4
_Den_is_one$ = 36
$T1 = 264
$T2 = 296
$T3 = 328
$T4 = 360
__$ReturnUdt$ = 416
_Dur$ = 424
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,0>, COMDAT

; 422  :         is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) /* strengthened */ {

$LN9:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 423  :         // convert duration to another duration; truncate
; 424  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 425  : 
; 426  :         using _ToRep = typename _To::rep;
; 427  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 428  : 
; 429  :         constexpr bool _Num_is_one = _CF::num == 1;

	mov	BYTE PTR _Num_is_one$[rbp], 1

; 430  :         constexpr bool _Den_is_one = _CF::den == 1;

	mov	BYTE PTR _Den_is_one$[rbp], 1

; 431  : 
; 432  :         if (_Den_is_one) {

	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN2@duration_c

; 433  :             if (_Num_is_one) {

	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN4@duration_c

; 434  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	mov	QWORD PTR $T1[rbp], rax
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@duration_c

; 435  :             } else {

	jmp	SHORT $LN5@duration_c
$LN4@duration_c:

; 436  :                 return static_cast<_To>(

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	mov	QWORD PTR $T2[rbp], rax
	lea	rdx, QWORD PTR $T2[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	SHORT $LN1@duration_c
$LN5@duration_c:

; 437  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 438  :             }
; 439  :         } else {

	jmp	SHORT $LN1@duration_c
$LN2@duration_c:

; 440  :             if (_Num_is_one) {

	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN6@duration_c

; 441  :                 return static_cast<_To>(

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	mov	QWORD PTR $T3[rbp], rax
	lea	rdx, QWORD PTR $T3[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	SHORT $LN1@duration_c

; 442  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 443  :             } else {

	jmp	SHORT $LN1@duration_c
$LN6@duration_c:

; 444  :                 return static_cast<_To>(static_cast<_ToRep>(

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	mov	QWORD PTR $T4[rbp], rax
	lea	rdx, QWORD PTR $T4[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@duration_c:

; 445  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 446  :             }
; 447  :         }
; 448  :     }

	lea	rsp, QWORD PTR [rbp+392]
	pop	rdi
	pop	rbp
	ret	0
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
tv68 = 248
tv75 = 256
_Left$ = 304
_Right$ = 312
??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z PROC ; std::chrono::operator<<double,std::ratio<1,1>,__int64,std::ratio<1,1000000000> >, COMDAT

; 383  :             is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) /* strengthened */ {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 384  :         using _CT = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 385  :         return _CT(_Left).count() < _CT(_Right).count();

	mov	rdx, QWORD PTR _Left$[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??$?0NU?$ratio@$00$00@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,std::ratio<1,1>,0>
	mov	rcx, rax
	call	?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1000000000> >::count
	movsd	QWORD PTR tv68[rbp], xmm0
	mov	rdx, QWORD PTR _Right$[rbp]
	lea	rcx, QWORD PTR $T2[rbp]
	call	??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000000000>,0>
	mov	rcx, rax
	call	?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1000000000> >::count
	movsd	xmm1, QWORD PTR tv68[rbp]
	comisd	xmm0, xmm1
	jbe	SHORT $LN3@operator
	mov	DWORD PTR tv75[rbp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv75[rbp], 0
$LN4@operator:
	movzx	eax, BYTE PTR tv75[rbp]

; 386  :     }

	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ENDP ; std::chrono::operator<<double,std::ratio<1,1>,__int64,std::ratio<1,1000000000> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0_JU?$ratio@$00$0JIJGIA@@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
_Dur$ = 264
??$?0_JU?$ratio@$00$0JIJGIA@@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,0>, COMDAT

; 107  :             : _MyRep(_CHRONO duration_cast<duration>(_Dur).count()) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rdx, QWORD PTR _Dur$[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000>,0>
	mov	rcx, rax
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$?0_JU?$ratio@$00$0JIJGIA@@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\utility
;	COMDAT ??$exchange@PEAV?$tuple@P6AXXZ@std@@$$T@std@@YAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 8
_Val$ = 256
_New_val$ = 264
??$exchange@PEAV?$tuple@P6AXXZ@std@@$$T@std@@YAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@$$QEA$$T@Z PROC ; std::exchange<std::tuple<void (__cdecl*)(void)> *,std::nullptr_t>, COMDAT

; 652  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__9596B502_utility
	call	__CheckForDebuggerJustMyCode

; 653  :     // assign _New_val to _Val, return previous _Val
; 654  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR _Val$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Old_val$[rbp], rax

; 655  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rax, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR _New_val$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 656  :     return _Old_val;

	mov	rax, QWORD PTR _Old_val$[rbp]

; 657  : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$exchange@PEAV?$tuple@P6AXXZ@std@@$$T@std@@YAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@$$QEA$$T@Z ENDP ; std::exchange<std::tuple<void (__cdecl*)(void)> *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z
_TEXT	SEGMENT
_FnVals$ = 8
_Tup$ = 40
$T4 = 260
__$ArrayPad$ = 280
_RawVals$ = 320
??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z PROC ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void)>,0>, COMDAT

; 51   :     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept /* terminates */ {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1A1458EA_thread
	call	__CheckForDebuggerJustMyCode

; 52   :         // adapt invoke of user's callable object to _beginthreadex's thread procedure
; 53   :         const unique_ptr<_Tuple> _FnVals(static_cast<_Tuple*>(_RawVals));

	mov	edx, 8
	lea	rcx, QWORD PTR _FnVals$[rbp]
	call	?__autoclassinit2@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAX_K@Z
	mov	rdx, QWORD PTR _RawVals$[rbp]
	lea	rcx, QWORD PTR _FnVals$[rbp]
	call	??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXXZ@1@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > ><std::default_delete<std::tuple<void (__cdecl*)(void)> >,0>

; 54   :         _Tuple& _Tup = *_FnVals.get(); // avoid ADL, handle incomplete types

	lea	rcx, QWORD PTR _FnVals$[rbp]
	call	?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEBAPEAV?$tuple@P6AXXZ@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::get
	mov	QWORD PTR _Tup$[rbp], rax

; 55   :         _STD invoke(_STD move(_STD get<_Indices>(_Tup))...);

	mov	rcx, QWORD PTR _Tup$[rbp]
	call	??$get@$0A@P6AXXZ@std@@YAAEAP6AXXZAEAV?$tuple@P6AXXZ@0@@Z ; std::get<0,void (__cdecl*)(void)>
	mov	rcx, rax
	call	??$invoke@P6AXXZ@std@@YAX$$QEAP6AXXZ@Z	; std::invoke<void (__cdecl*)(void)>

; 56   :         _Cnd_do_broadcast_at_thread_exit(); // TRANSITION, ABI

	call	_Cnd_do_broadcast_at_thread_exit

; 57   :         return 0;

	mov	DWORD PTR $T4[rbp], 0
	lea	rcx, QWORD PTR _FnVals$[rbp]
	call	??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::~unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >
	mov	eax, DWORD PTR $T4[rbp]

; 58   :     }

	mov	edi, eax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z ENDP ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void)>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory
;	COMDAT ??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 228
this$ = 288
_Right$ = 296
??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > ><std::default_delete<std::tuple<void (__cdecl*)(void)> >,0>, COMDAT

; 3135 :         : _Mypair(_One_then_variadic_args_t{}, _STD forward<_Dx>(_Right.get_deleter()), _Right.release()) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__C159205C_memory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR _Right$[rbp]
	call	?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAPEAV?$tuple@P6AXXZ@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::release
	mov	QWORD PTR $T1[rbp], rax
	mov	rcx, QWORD PTR _Right$[rbp]
	call	?get_deleter@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::get_deleter
	mov	rcx, QWORD PTR this$[rbp]
	lea	r9, QWORD PTR $T1[rbp]
	mov	r8, rax
	movzx	edx, BYTE PTR $T2[rbp]
	call	??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V?$tuple@P6AXXZ@std@@@1@$$QEAPEAV?$tuple@P6AXXZ@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1><std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *>
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > ><std::default_delete<std::tuple<void (__cdecl*)(void)> >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAX_K@Z PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAX_K@Z ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Get_first, COMDAT

; 1382 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__FF03D6C1_xmemory
	call	__CheckForDebuggerJustMyCode

; 1383 :         return *this;

	mov	rax, QWORD PTR this$[rbp]

; 1384 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory
;	COMDAT ?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAPEAV?$tuple@P6AXXZ@2@XZ
_TEXT	SEGMENT
$T1 = 196
this$ = 256
?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAPEAV?$tuple@P6AXXZ@2@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::release, COMDAT

; 3205 :     _CONSTEXPR23 pointer release() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__C159205C_memory
	call	__CheckForDebuggerJustMyCode

; 3206 :         return _STD exchange(_Mypair._Myval2, nullptr);

	mov	QWORD PTR $T1[rbp], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, rax
	call	??$exchange@PEAV?$tuple@P6AXXZ@std@@$$T@std@@YAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@$$QEA$$T@Z ; std::exchange<std::tuple<void (__cdecl*)(void)> *,std::nullptr_t>

; 3207 :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAPEAV?$tuple@P6AXXZ@2@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory
;	COMDAT ?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEBAPEAV?$tuple@P6AXXZ@2@XZ
_TEXT	SEGMENT
this$ = 224
?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEBAPEAV?$tuple@P6AXXZ@2@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::get, COMDAT

; 3197 :     _NODISCARD _CONSTEXPR23 pointer get() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__C159205C_memory
	call	__CheckForDebuggerJustMyCode

; 3198 :         return _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]

; 3199 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEBAPEAV?$tuple@P6AXXZ@2@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory
;	COMDAT ?get_deleter@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?get_deleter@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::get_deleter, COMDAT

; 3181 :     _NODISCARD _CONSTEXPR23 _Dx& get_deleter() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__C159205C_memory
	call	__CheckForDebuggerJustMyCode

; 3182 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Get_first

; 3183 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?get_deleter@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory
;	COMDAT ??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::~unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >, COMDAT

; 3175 :     _CONSTEXPR23 ~unique_ptr() noexcept {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__C159205C_memory
	call	__CheckForDebuggerJustMyCode

; 3176 :         if (_Mypair._Myval2) {

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@unique_ptr

; 3177 :             _Mypair._Get_first()(_Mypair._Myval2);

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Get_first
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, rax
	call	??R?$default_delete@V?$tuple@P6AXXZ@std@@@std@@QEBAXPEAV?$tuple@P6AXXZ@1@@Z ; std::default_delete<std::tuple<void (__cdecl*)(void)> >::operator()
$LN2@unique_ptr:

; 3178 :         }
; 3179 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::~unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory
;	COMDAT ??R?$default_delete@V?$tuple@P6AXXZ@std@@@std@@QEBAXPEAV?$tuple@P6AXXZ@1@@Z
_TEXT	SEGMENT
$T1 = 200
tv67 = 216
this$ = 256
_Ptr$ = 264
??R?$default_delete@V?$tuple@P6AXXZ@std@@@std@@QEBAXPEAV?$tuple@P6AXXZ@1@@Z PROC ; std::default_delete<std::tuple<void (__cdecl*)(void)> >::operator(), COMDAT

; 3064 :     _CONSTEXPR23 void operator()(_Ty* _Ptr) const noexcept /* strengthened */ { // delete a pointer

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__C159205C_memory
	call	__CheckForDebuggerJustMyCode

; 3065 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 3066 :         delete _Ptr;

	mov	rax, QWORD PTR _Ptr$[rbp]
	mov	QWORD PTR $T1[rbp], rax
	mov	edx, 8
	mov	rcx, QWORD PTR $T1[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	cmp	QWORD PTR $T1[rbp], 0
	jne	SHORT $LN3@operator
	mov	QWORD PTR tv67[rbp], 0
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	QWORD PTR _Ptr$[rbp], 33059		; 00008123H
	mov	rax, QWORD PTR _Ptr$[rbp]
	mov	QWORD PTR tv67[rbp], rax
$LN4@operator:

; 3067 :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??R?$default_delete@V?$tuple@P6AXXZ@std@@@std@@QEBAXPEAV?$tuple@P6AXXZ@1@@Z ENDP ; std::default_delete<std::tuple<void (__cdecl*)(void)> >::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory
;	COMDAT ??$make_unique@V?$tuple@P6AXXZ@std@@A6AXXZ$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@0@A6AXXZ@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 292
tv77 = 312
tv85 = 320
__$ReturnUdt$ = 368
<_Args_0>$ = 376
??$make_unique@V?$tuple@P6AXXZ@std@@A6AXXZ$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@0@A6AXXZ@Z PROC ; std::make_unique<std::tuple<void (__cdecl*)(void)>,void (__cdecl&)(void),0>, COMDAT

; 3392 : _NODISCARD_SMART_PTR_ALLOC _CONSTEXPR23 unique_ptr<_Ty> make_unique(_Types&&... _Args) { // make a unique_ptr

$LN8:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+32]
	mov	DWORD PTR $T4[rbp], 0
	lea	rcx, OFFSET FLAT:__C159205C_memory
	call	__CheckForDebuggerJustMyCode

; 3393 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T2[rbp], rax
	cmp	QWORD PTR $T2[rbp], 0
	je	SHORT $LN3@make_uniqu
	mov	rax, QWORD PTR <_Args_0>$[rbp]
	mov	QWORD PTR $T3[rbp], rax
	lea	rdx, QWORD PTR $T3[rbp]
	mov	rcx, QWORD PTR $T2[rbp]
	call	??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z ; std::tuple<void (__cdecl*)(void)>::tuple<void (__cdecl*)(void)><void (__cdecl*)(void),0>
	mov	QWORD PTR tv77[rbp], rax
	jmp	SHORT $LN4@make_uniqu
$LN3@make_uniqu:
	mov	QWORD PTR tv77[rbp], 0
$LN4@make_uniqu:
	mov	rdx, QWORD PTR tv77[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXXZ@1@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > ><std::default_delete<std::tuple<void (__cdecl*)(void)> >,0>
	mov	QWORD PTR tv85[rbp], rax
	mov	rdx, QWORD PTR tv85[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@$$QEAV01@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > ><std::default_delete<std::tuple<void (__cdecl*)(void)> >,0>
	mov	eax, DWORD PTR $T4[rbp]
	or	eax, 1
	mov	DWORD PTR $T4[rbp], eax
	lea	rcx, QWORD PTR $T1[rbp]
	call	??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::~unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 3394 : }

	lea	rsp, QWORD PTR [rbp+344]
	pop	rdi
	pop	rbp
	ret	0
??$make_unique@V?$tuple@P6AXXZ@std@@A6AXXZ$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@0@A6AXXZ@Z ENDP ; std::make_unique<std::tuple<void (__cdecl*)(void)>,void (__cdecl&)(void),0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z
_TEXT	SEGMENT
_Ten_days$ = 8
_Ten_days_d$ = 40
_Tx0$ = 72
_Clamped$ = 100
_Whole_seconds$ = 136
$T7 = 360
$T8 = 392
$T9 = 424
$T10 = 456
__$ArrayPad$ = 472
_Xt$ = 512
_Rel_time$ = 520
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z PROC ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >, COMDAT

; 699  :     is_arithmetic_v<_Rep>) {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 520				; 00000208H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+552]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 700  :     // Convert duration to xtime, maximum 10 days from now, returns whether clamping occurred.
; 701  :     // If clamped, timeouts will be transformed into spurious non-timeout wakes, due to ABI restrictions where
; 702  :     // the other side of the DLL boundary overflows int32_t milliseconds.
; 703  :     // Every function calling this one is TRANSITION, ABI
; 704  :     constexpr _CHRONO nanoseconds _Ten_days{_CHRONO hours{24} * 10};

	mov	rax, 864000000000000			; 000311cdad160000H
	mov	QWORD PTR _Ten_days$[rbp], rax

; 705  :     constexpr _CHRONO duration<double> _Ten_days_d{_Ten_days};

	movsd	xmm0, QWORD PTR __real@412a5e0000000000
	movsd	QWORD PTR _Ten_days_d$[rbp], xmm0

; 706  :     _CHRONO nanoseconds _Tx0 = _CHRONO system_clock::now().time_since_epoch();

	lea	rcx, QWORD PTR $T7[rbp]
	call	?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ ; std::chrono::system_clock::now
	lea	rdx, QWORD PTR $T8[rbp]
	mov	rcx, rax
	call	?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch
	mov	rdx, rax
	lea	rcx, QWORD PTR _Tx0$[rbp]
	call	??$?0_JU?$ratio@$00$0JIJGIA@@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,0>

; 707  :     const bool _Clamped      = _Ten_days_d < _Rel_time;

	mov	rdx, QWORD PTR _Rel_time$[rbp]
	lea	rcx, QWORD PTR _Ten_days_d$[rbp]
	call	??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::operator<<double,std::ratio<1,1>,__int64,std::ratio<1,1000000000> >
	mov	BYTE PTR _Clamped$[rbp], al

; 708  :     if (_Clamped) {

	movzx	eax, BYTE PTR _Clamped$[rbp]
	test	eax, eax
	je	SHORT $LN2@To_xtime_1

; 709  :         _Tx0 += _Ten_days;

	lea	rdx, QWORD PTR _Ten_days$[rbp]
	lea	rcx, QWORD PTR _Tx0$[rbp]
	call	??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=

; 710  :     } else {

	jmp	SHORT $LN3@To_xtime_1
$LN2@To_xtime_1:

; 711  :         _Tx0 += _CHRONO duration_cast<_CHRONO nanoseconds>(_Rel_time);

	mov	rdx, QWORD PTR _Rel_time$[rbp]
	lea	rcx, QWORD PTR $T9[rbp]
	call	??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR _Tx0$[rbp]
	call	??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=
$LN3@To_xtime_1:

; 712  :     }
; 713  : 
; 714  :     const auto _Whole_seconds = _CHRONO duration_cast<_CHRONO seconds>(_Tx0);

	lea	rdx, QWORD PTR _Tx0$[rbp]
	lea	rcx, QWORD PTR _Whole_seconds$[rbp]
	call	??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,0>

; 715  :     _Xt.sec                   = _Whole_seconds.count();

	lea	rcx, QWORD PTR _Whole_seconds$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1> >::count
	mov	rcx, QWORD PTR _Xt$[rbp]
	mov	QWORD PTR [rcx], rax

; 716  :     _Tx0 -= _Whole_seconds;

	lea	rdx, QWORD PTR _Whole_seconds$[rbp]
	lea	rcx, QWORD PTR $T10[rbp]
	call	??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,0>
	lea	rdx, QWORD PTR $T10[rbp]
	lea	rcx, QWORD PTR _Tx0$[rbp]
	call	??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=

; 717  :     _Xt.nsec = static_cast<long>(_Tx0.count());

	lea	rcx, QWORD PTR _Tx0$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	mov	rcx, QWORD PTR _Xt$[rbp]
	mov	DWORD PTR [rcx+8], eax

; 718  :     return _Clamped;

	movzx	eax, BYTE PTR _Clamped$[rbp]

; 719  : }

	mov	edi, eax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+488]
	pop	rdi
	pop	rbp
	ret	0
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z ENDP ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
_TEXT	SEGMENT
tv69 = 192
_Left$ = 240
_Right$ = 248
??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z PROC ; std::chrono::operator<=<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 579  :             is_arithmetic_v<typename _Duration1::rep>&& is_arithmetic_v<typename _Duration2::rep>) /* strengthened */ {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 580  :         return !(_Right < _Left);

	mov	rdx, QWORD PTR _Left$[rbp]
	mov	rcx, QWORD PTR _Right$[rbp]
	call	??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator<<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[rbp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[rbp], 0
$LN4@operator:
	movzx	eax, BYTE PTR tv69[rbp]

; 581  :     }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ENDP ; std::chrono::operator<=<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
tv66 = 248
tv71 = 256
_Left$ = 304
_Right$ = 312
??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z PROC ; std::chrono::operator<<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >, COMDAT

; 383  :             is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) /* strengthened */ {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 384  :         using _CT = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 385  :         return _CT(_Left).count() < _CT(_Right).count();

	mov	rax, QWORD PTR _Left$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T1[rbp], rax
	mov	rax, QWORD PTR _Right$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T2[rbp], rax
	lea	rcx, QWORD PTR $T1[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	mov	QWORD PTR tv66[rbp], rax
	lea	rcx, QWORD PTR $T2[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	mov	rcx, QWORD PTR tv66[rbp]
	cmp	rcx, rax
	jge	SHORT $LN3@operator
	mov	DWORD PTR tv71[rbp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv71[rbp], 0
$LN4@operator:
	movzx	eax, BYTE PTR tv71[rbp]

; 386  :     }

	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z ENDP ; std::chrono::operator<<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$00@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
tv68 = 280
__$ReturnUdt$ = 320
_Left$ = 328
_Right$ = 336
??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$00@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z PROC ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1> >, COMDAT

; 290  :             is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 291  :         using _CD = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 292  :         return _CD(_CD(_Left).count() - _CD(_Right).count());

	mov	rax, QWORD PTR _Left$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T2[rbp], rax
	lea	rcx, QWORD PTR $T2[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	mov	QWORD PTR tv68[rbp], rax
	mov	rdx, QWORD PTR _Right$[rbp]
	lea	rcx, QWORD PTR $T3[rbp]
	call	??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,0>
	mov	rcx, rax
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	mov	rcx, QWORD PTR tv68[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR $T1[rbp], rax
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 293  :     }

	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$00@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z ENDP ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?M_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
tv66 = 248
tv71 = 256
_Left$ = 304
_Right$ = 312
??$?M_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z PROC ; std::chrono::operator<<__int64,std::ratio<1,1>,__int64,std::ratio<1,1> >, COMDAT

; 383  :             is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) /* strengthened */ {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 384  :         using _CT = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 385  :         return _CT(_Left).count() < _CT(_Right).count();

	mov	rax, QWORD PTR _Left$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T1[rbp], rax
	mov	rax, QWORD PTR _Right$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T2[rbp], rax
	lea	rcx, QWORD PTR $T1[rbp]
	call	?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1> >::count
	mov	QWORD PTR tv66[rbp], rax
	lea	rcx, QWORD PTR $T2[rbp]
	call	?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1> >::count
	mov	rcx, QWORD PTR tv66[rbp]
	cmp	rcx, rax
	jge	SHORT $LN3@operator
	mov	DWORD PTR tv71[rbp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv71[rbp], 0
$LN4@operator:
	movzx	eax, BYTE PTR tv71[rbp]

; 386  :     }

	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
??$?M_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z ENDP ; std::chrono::operator<<__int64,std::ratio<1,1>,__int64,std::ratio<1,1> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBM@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBM@Z PROC ; std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><float,0>, COMDAT

; 99   :             : _MyRep(static_cast<_Rep>(_Val)) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Val$[rbp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBM@Z ENDP ; std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z
_TEXT	SEGMENT
_Num_is_one$ = 4
_Den_is_one$ = 36
$T1 = 264
$T2 = 296
$T3 = 328
$T4 = 360
__$ReturnUdt$ = 416
_Dur$ = 424
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1>,0>, COMDAT

; 422  :         is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) /* strengthened */ {

$LN9:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 423  :         // convert duration to another duration; truncate
; 424  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 425  : 
; 426  :         using _ToRep = typename _To::rep;
; 427  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 428  : 
; 429  :         constexpr bool _Num_is_one = _CF::num == 1;

	mov	BYTE PTR _Num_is_one$[rbp], 0

; 430  :         constexpr bool _Den_is_one = _CF::den == 1;

	mov	BYTE PTR _Den_is_one$[rbp], 1

; 431  : 
; 432  :         if (_Den_is_one) {

	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN2@duration_c

; 433  :             if (_Num_is_one) {

	xor	eax, eax
	test	eax, eax
	je	SHORT $LN4@duration_c

; 434  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1> >::count
	mov	QWORD PTR $T1[rbp], rax
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@duration_c

; 435  :             } else {

	jmp	SHORT $LN5@duration_c
$LN4@duration_c:

; 436  :                 return static_cast<_To>(

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1> >::count
	imul	rax, rax, 1000000000			; 3b9aca00H
	mov	QWORD PTR $T2[rbp], rax
	lea	rdx, QWORD PTR $T2[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	SHORT $LN1@duration_c
$LN5@duration_c:

; 437  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 438  :             }
; 439  :         } else {

	jmp	SHORT $LN1@duration_c
$LN2@duration_c:

; 440  :             if (_Num_is_one) {

	xor	eax, eax
	test	eax, eax
	je	SHORT $LN6@duration_c

; 441  :                 return static_cast<_To>(

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1> >::count
	mov	QWORD PTR $T3[rbp], rax
	lea	rdx, QWORD PTR $T3[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	SHORT $LN1@duration_c

; 442  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 443  :             } else {

	jmp	SHORT $LN1@duration_c
$LN6@duration_c:

; 444  :                 return static_cast<_To>(static_cast<_ToRep>(

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1> >::count
	imul	rax, rax, 1000000000			; 3b9aca00H
	mov	QWORD PTR $T4[rbp], rax
	lea	rdx, QWORD PTR $T4[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@duration_c:

; 445  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 446  :             }
; 447  :         }
; 448  :     }

	lea	rsp, QWORD PTR [rbp+392]
	pop	rdi
	pop	rbp
	ret	0
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z
_TEXT	SEGMENT
_Decay_copied$ = 8
_Invoker_proc$ = 40
$T4 = 264
tv129 = 280
tv79 = 280
__$ArrayPad$ = 288
this$ = 336
_Fx$ = 344
??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z PROC	; std::thread::_Start<void (__cdecl&)(void)>, COMDAT

; 68   :     void _Start(_Fn&& _Fx, _Args&&... _Ax) {

$LN8:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 30
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+392]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1A1458EA_thread
	call	__CheckForDebuggerJustMyCode

; 69   :         using _Tuple                 = tuple<decay_t<_Fn>, decay_t<_Args>...>;
; 70   :         auto _Decay_copied           = _STD make_unique<_Tuple>(_STD forward<_Fn>(_Fx), _STD forward<_Args>(_Ax)...);

	mov	edx, 8
	lea	rcx, QWORD PTR _Decay_copied$[rbp]
	call	?__autoclassinit2@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAX_K@Z
	mov	rdx, QWORD PTR _Fx$[rbp]
	lea	rcx, QWORD PTR $T4[rbp]
	call	??$make_unique@V?$tuple@P6AXXZ@std@@A6AXXZ$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@0@A6AXXZ@Z ; std::make_unique<std::tuple<void (__cdecl*)(void)>,void (__cdecl&)(void),0>
	mov	QWORD PTR tv129[rbp], rax
	mov	rdx, QWORD PTR tv129[rbp]
	lea	rcx, QWORD PTR _Decay_copied$[rbp]
	call	??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@$$QEAV01@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > ><std::default_delete<std::tuple<void (__cdecl*)(void)> >,0>
	npad	1
	lea	rcx, QWORD PTR $T4[rbp]
	call	??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::~unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >

; 71   :         constexpr auto _Invoker_proc = _Get_invoke<_Tuple>(make_index_sequence<1 + sizeof...(_Args)>{});

	lea	rax, OFFSET FLAT:??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void)>,0>
	mov	QWORD PTR _Invoker_proc$[rbp], rax

; 72   : 
; 73   :         _Thr._Hnd =

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	QWORD PTR tv79[rbp], rax
	lea	rcx, QWORD PTR _Decay_copied$[rbp]
	call	?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEBAPEAV?$tuple@P6AXXZ@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::get
	mov	rcx, QWORD PTR tv79[rbp]
	mov	QWORD PTR [rsp+40], rcx
	mov	DWORD PTR [rsp+32], 0
	mov	r9, rax
	mov	r8, QWORD PTR _Invoker_proc$[rbp]
	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR __imp__beginthreadex
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx], rax

; 74   :             reinterpret_cast<void*>(_CSTD _beginthreadex(nullptr, 0, _Invoker_proc, _Decay_copied.get(), 0, &_Thr._Id));
; 75   : 
; 76   :         if (_Thr._Hnd) { // ownership transferred to the thread

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Start

; 77   :             (void) _Decay_copied.release();

	lea	rcx, QWORD PTR _Decay_copied$[rbp]
	call	?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAPEAV?$tuple@P6AXXZ@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::release

; 78   :         } else { // failed to start thread

	jmp	SHORT $LN3@Start
$LN2@Start:

; 79   :             _Thr._Id = 0;

	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+8], 0

; 80   :             _Throw_Cpp_error(_RESOURCE_UNAVAILABLE_TRY_AGAIN);

	mov	ecx, 6
	call	?_Throw_Cpp_error@std@@YAXH@Z		; std::_Throw_Cpp_error
	npad	1
$LN3@Start:

; 81   :         }
; 82   :     }

	lea	rcx, QWORD PTR _Decay_copied$[rbp]
	call	??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::~unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
$LN7@Start:
??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z ENDP	; std::thread::_Start<void (__cdecl&)(void)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Decay_copied$ = 8
_Invoker_proc$ = 40
$T4 = 264
tv129 = 280
tv79 = 280
__$ArrayPad$ = 288
this$ = 336
_Fx$ = 344
?dtor$1@?0???$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z@4HA PROC ; `std::thread::_Start<void (__cdecl&)(void)>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR _Decay_copied$[rbp]
	call	??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::~unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z@4HA ENDP ; `std::thread::_Start<void (__cdecl&)(void)>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z
_TEXT	SEGMENT
_Now$5 = 8
_Tgt$6 = 40
$T7 = 280
__$ArrayPad$ = 296
_Abs_time$ = 336
??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z PROC ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 186  :     void sleep_until(const chrono::time_point<_Clock, _Duration>& _Abs_time) {

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 30
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+376]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1A1458EA_thread
	call	__CheckForDebuggerJustMyCode
$LN2@sleep_unti:

; 187  : #if _HAS_CXX20
; 188  :         static_assert(chrono::is_clock_v<_Clock>, "Clock type required");
; 189  : #endif // _HAS_CXX20
; 190  :         for (;;) {
; 191  :             const auto _Now = _Clock::now();

	lea	rcx, QWORD PTR _Now$5[rbp]
	call	?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ; std::chrono::steady_clock::now

; 192  :             if (_Abs_time <= _Now) {

	lea	rdx, QWORD PTR _Now$5[rbp]
	mov	rcx, QWORD PTR _Abs_time$[rbp]
	call	??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator<=<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@sleep_unti

; 193  :                 return;

	jmp	SHORT $LN1@sleep_unti
$LN5@sleep_unti:

; 194  :             }
; 195  : 
; 196  :             _CSTD xtime _Tgt;
; 197  :             (void) _To_xtime_10_day_clamped(_Tgt, _Abs_time - _Now);

	lea	r8, QWORD PTR _Now$5[rbp]
	mov	rdx, QWORD PTR _Abs_time$[rbp]
	lea	rcx, QWORD PTR $T7[rbp]
	call	??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	mov	rdx, rax
	lea	rcx, QWORD PTR _Tgt$6[rbp]
	call	??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >

; 198  :             _Thrd_sleep(&_Tgt);

	lea	rcx, QWORD PTR _Tgt$6[rbp]
	call	_Thrd_sleep

; 199  :         }

	jmp	SHORT $LN2@sleep_unti
$LN1@sleep_unti:

; 200  :     }

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z ENDP ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
tv66 = 248
_Left$ = 288
_Right$ = 296
??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z PROC ; std::chrono::operator<<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 572  :             is_arithmetic_v<typename _Duration1::rep>&& is_arithmetic_v<typename _Duration2::rep>) /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 573  :         return _Left.time_since_epoch() < _Right.time_since_epoch();

	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR _Right$[rbp]
	call	?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
	mov	QWORD PTR tv66[rbp], rax
	lea	rdx, QWORD PTR $T2[rbp]
	mov	rcx, QWORD PTR _Left$[rbp]
	call	?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
	mov	rcx, QWORD PTR tv66[rbp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z ; std::chrono::operator<<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >

; 574  :     }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ENDP ; std::chrono::operator<<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$00@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
__$ReturnUdt$ = 288
_Left$ = 296
_Right$ = 304
??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$00@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z PROC ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1> >, COMDAT

; 541  :             is_arithmetic_v<typename _Duration::rep>&& is_arithmetic_v<_Rep>) /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 542  :         using _RT = time_point<_Clock, common_type_t<_Duration, duration<_Rep, _Period>>>;
; 543  :         return _RT(_Left.time_since_epoch() - _Right);

	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR _Left$[rbp]
	call	?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
	mov	r8, QWORD PTR _Right$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rbp]
	call	??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$00@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1> >
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 544  :     }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$00@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z ENDP ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?O_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z
_TEXT	SEGMENT
_Left$ = 224
_Right$ = 232
??$?O_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z PROC ; std::chrono::operator><__int64,std::ratio<1,1>,__int64,std::ratio<1,1> >, COMDAT

; 398  :             is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 399  :         return _Right < _Left;

	mov	rdx, QWORD PTR _Left$[rbp]
	mov	rcx, QWORD PTR _Right$[rbp]
	call	??$?M_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z ; std::chrono::operator<<__int64,std::ratio<1,1>,__int64,std::ratio<1,1> >

; 400  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?O_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z ENDP ; std::chrono::operator><__int64,std::ratio<1,1>,__int64,std::ratio<1,1> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z
_TEXT	SEGMENT
_Zero$ = 8
_Now$ = 40
_Forever$7 = 104
$T8 = 328
$T9 = 360
__$ArrayPad$ = 376
__$ReturnUdt$ = 416
_Rel_time$ = 424
??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z PROC ; std::_To_absolute_time<__int64,std::ratio<1,1> >, COMDAT

; 159  : _NODISCARD auto _To_absolute_time(const chrono::duration<_Rep, _Period>& _Rel_time) noexcept {

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 50					; 00000032H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+456]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1A1458EA_thread
	call	__CheckForDebuggerJustMyCode

; 160  :     constexpr auto _Zero                 = chrono::duration<_Rep, _Period>::zero();

	mov	QWORD PTR _Zero$[rbp], 0

; 161  :     const auto _Now                      = chrono::steady_clock::now();

	lea	rcx, QWORD PTR _Now$[rbp]
	call	?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ; std::chrono::steady_clock::now

; 162  :     decltype(_Now + _Rel_time) _Abs_time = _Now; // return common type

	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR _Now$[rbp]
	mov	QWORD PTR [rax], rcx

; 163  :     if (_Rel_time > _Zero) {

	lea	rdx, QWORD PTR _Zero$[rbp]
	mov	rcx, QWORD PTR _Rel_time$[rbp]
	call	??$?O_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z ; std::chrono::operator><__int64,std::ratio<1,1>,__int64,std::ratio<1,1> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@To_absolut

; 164  :         constexpr auto _Forever = (chrono::steady_clock::time_point::max)();

	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	mov	QWORD PTR _Forever$7[rbp], rax

; 165  :         if (_Abs_time < _Forever - _Rel_time) {

	mov	r8, QWORD PTR _Rel_time$[rbp]
	lea	rdx, QWORD PTR _Forever$7[rbp]
	lea	rcx, QWORD PTR $T8[rbp]
	call	??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$00@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1> >
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator<<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@To_absolut

; 166  :             _Abs_time += _Rel_time;

	mov	rdx, QWORD PTR _Rel_time$[rbp]
	lea	rcx, QWORD PTR $T9[rbp]
	call	??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,0>
	lea	rdx, QWORD PTR $T9[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??Y?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAAAEAV012@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::operator+=

; 167  :         } else {

	jmp	SHORT $LN2@To_absolut
$LN3@To_absolut:

; 168  :             _Abs_time = _Forever;

	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR _Forever$7[rbp]
	mov	QWORD PTR [rax], rcx
$LN2@To_absolut:

; 169  :         }
; 170  :     }
; 171  :     return _Abs_time;

	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 172  : }

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+392]
	pop	rdi
	pop	rbp
	ret	0
??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z ENDP ; std::_To_absolute_time<__int64,std::ratio<1,1> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
_TEXT	SEGMENT
_Num_is_one$ = 4
_Den_is_one$ = 36
$T1 = 260
$T2 = 292
$T3 = 324
$T4 = 356
__$ReturnUdt$ = 416
_Dur$ = 424
??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<float,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,0>, COMDAT

; 422  :         is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) /* strengthened */ {

$LN9:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 423  :         // convert duration to another duration; truncate
; 424  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 425  : 
; 426  :         using _ToRep = typename _To::rep;
; 427  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 428  : 
; 429  :         constexpr bool _Num_is_one = _CF::num == 1;

	mov	BYTE PTR _Num_is_one$[rbp], 1

; 430  :         constexpr bool _Den_is_one = _CF::den == 1;

	mov	BYTE PTR _Den_is_one$[rbp], 0

; 431  : 
; 432  :         if (_Den_is_one) {

	xor	eax, eax
	test	eax, eax
	je	$LN2@duration_c

; 433  :             if (_Num_is_one) {

	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN4@duration_c

; 434  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	cvtsi2ss xmm0, rax
	movss	DWORD PTR $T1[rbp], xmm0
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBM@Z ; std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@duration_c

; 435  :             } else {

	jmp	SHORT $LN5@duration_c
$LN4@duration_c:

; 436  :                 return static_cast<_To>(

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	cvtsi2ss xmm0, rax
	mulss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T2[rbp], xmm0
	lea	rdx, QWORD PTR $T2[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBM@Z ; std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@duration_c
$LN5@duration_c:

; 437  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 438  :             }
; 439  :         } else {

	jmp	$LN1@duration_c
$LN2@duration_c:

; 440  :             if (_Num_is_one) {

	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN6@duration_c

; 441  :                 return static_cast<_To>(

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	cvtsi2ss xmm0, rax
	divss	xmm0, DWORD PTR __real@4e6e6b28
	movss	DWORD PTR $T3[rbp], xmm0
	lea	rdx, QWORD PTR $T3[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBM@Z ; std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	SHORT $LN1@duration_c

; 442  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 443  :             } else {

	jmp	SHORT $LN1@duration_c
$LN6@duration_c:

; 444  :                 return static_cast<_To>(static_cast<_ToRep>(

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	cvtsi2ss xmm0, rax
	mulss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR __real@4e6e6b28
	movss	DWORD PTR $T4[rbp], xmm0
	lea	rdx, QWORD PTR $T4[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBM@Z ; std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@duration_c:

; 445  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 446  :             }
; 447  :         }
; 448  :     }

	lea	rsp, QWORD PTR [rbp+392]
	pop	rdi
	pop	rbp
	ret	0
??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<float,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
tv68 = 280
__$ReturnUdt$ = 320
_Left$ = 328
_Right$ = 336
??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z PROC ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >, COMDAT

; 290  :             is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 291  :         using _CD = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 292  :         return _CD(_CD(_Left).count() - _CD(_Right).count());

	mov	rax, QWORD PTR _Left$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T2[rbp], rax
	mov	rax, QWORD PTR _Right$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T3[rbp], rax
	lea	rcx, QWORD PTR $T2[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	mov	QWORD PTR tv68[rbp], rax
	lea	rcx, QWORD PTR $T3[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	mov	rcx, QWORD PTR tv68[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR $T1[rbp], rax
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 293  :     }

	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z ENDP ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 224
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT

; 123  :         explicit __CLR_OR_THIS_CALL operator bool() const {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__47FEFEA8_ostream
	call	__CheckForDebuggerJustMyCode

; 124  :             return _Ok;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+8]

; 125  :         }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Zero_uncaught_exceptions$ = 4
tv72 = 212
this$ = 256
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT

; 108  :         __CLR_OR_THIS_CALL ~sentry() noexcept {

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__47FEFEA8_ostream
	call	__CheckForDebuggerJustMyCode

; 109  : #if !_HAS_EXCEPTIONS
; 110  :             const bool _Zero_uncaught_exceptions = true;
; 111  : #elif _HAS_DEPRECATED_UNCAUGHT_EXCEPTION
; 112  :             const bool _Zero_uncaught_exceptions = !_STD uncaught_exception(); // TRANSITION, ArchivedOS-12000909

	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@sentry
	mov	BYTE PTR tv72[rbp], 1
	jmp	SHORT $LN5@sentry
$LN4@sentry:
	mov	BYTE PTR tv72[rbp], 0
$LN5@sentry:
	movzx	eax, BYTE PTR tv72[rbp]
	mov	BYTE PTR _Zero_uncaught_exceptions$[rbp], al

; 113  : #else // ^^^ _HAS_DEPRECATED_UNCAUGHT_EXCEPTION / !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION vvv
; 114  :             const bool _Zero_uncaught_exceptions = _STD uncaught_exceptions() == 0;
; 115  : #endif // !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION
; 116  : 
; 117  :             if (_Zero_uncaught_exceptions) {

	movzx	eax, BYTE PTR _Zero_uncaught_exceptions$[rbp]
	test	eax, eax
	je	SHORT $LN2@sentry

; 118  :                 this->_Myostr._Osfx();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
$LN2@sentry:

; 119  :             }
; 120  :         }

	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	npad	1
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Tied$ = 8
this$ = 256
_Ostr$ = 264
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT

; 91   :         explicit __CLR_OR_THIS_CALL sentry(basic_ostream& _Ostr) : _Sentry_base(_Ostr) {

$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__47FEFEA8_ostream
	call	__CheckForDebuggerJustMyCode
	mov	rdx, QWORD PTR _Ostr$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	npad	1

; 92   :             if (!_Ostr.good()) {

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@sentry

; 93   :                 _Ok = false;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+8], 0

; 94   :                 return;

	jmp	$LN1@sentry
$LN2@sentry:

; 95   :             }
; 96   : 
; 97   :             const auto _Tied = _Ostr.tie();

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR _Tied$[rbp], rax

; 98   :             if (!_Tied || _Tied == &_Ostr) {

	cmp	QWORD PTR _Tied$[rbp], 0
	je	SHORT $LN4@sentry
	mov	rax, QWORD PTR _Ostr$[rbp]
	cmp	QWORD PTR _Tied$[rbp], rax
	jne	SHORT $LN3@sentry
$LN4@sentry:

; 99   :                 _Ok = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+8], 1

; 100  :                 return;

	jmp	SHORT $LN1@sentry
$LN3@sentry:

; 101  :             }
; 102  : 
; 103  :             _Tied->flush();

	mov	rcx, QWORD PTR _Tied$[rbp]
	call	QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ

; 104  :             _Ok = _Ostr.good(); // store test only after flushing tie

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+8], al
$LN1@sentry:

; 105  :         }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Tied$ = 8
this$ = 256
_Ostr$ = 264
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Rdbuf$ = 8
tv72 = 216
this$ = 256
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT

; 77   :         __CLR_OR_THIS_CALL ~_Sentry_base() noexcept { // destroy after unlocking

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__47FEFEA8_ostream
	call	__CheckForDebuggerJustMyCode

; 78   :             const auto _Rdbuf = _Myostr.rdbuf();

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv72[rbp], rax
	mov	rax, QWORD PTR tv72[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR tv72[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR _Rdbuf$[rbp], rax

; 79   :             if (_Rdbuf) {

	cmp	QWORD PTR _Rdbuf$[rbp], 0
	je	SHORT $LN2@Sentry_bas

; 80   :                 _Rdbuf->_Unlock();

	mov	rax, QWORD PTR _Rdbuf$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Rdbuf$[rbp]
	call	QWORD PTR [rax+16]
	npad	1
$LN2@Sentry_bas:

; 81   :             }
; 82   :         }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Rdbuf$ = 8
tv73 = 216
this$ = 256
_Ostr$ = 264
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT

; 70   :         __CLR_OR_THIS_CALL _Sentry_base(basic_ostream& _Ostr) : _Myostr(_Ostr) { // lock the stream buffer, if there

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__47FEFEA8_ostream
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	mov	QWORD PTR [rax], rcx

; 71   :             const auto _Rdbuf = _Myostr.rdbuf();

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv73[rbp], rax
	mov	rax, QWORD PTR tv73[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR tv73[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR _Rdbuf$[rbp], rax

; 72   :             if (_Rdbuf) {

	cmp	QWORD PTR _Rdbuf$[rbp], 0
	je	SHORT $LN2@Sentry_bas

; 73   :                 _Rdbuf->_Lock();

	mov	rax, QWORD PTR _Rdbuf$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Rdbuf$[rbp]
	call	QWORD PTR [rax+8]
$LN2@Sentry_bas:

; 74   :             }
; 75   :         }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0H$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBH@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
??$?0H$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBH@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><int,0>, COMDAT

; 99   :             : _MyRep(static_cast<_Rep>(_Val)) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR _Val$[rbp]
	movsxd	rax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0H$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBH@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ??$?0A6AXXZ$$V$0A@@thread@std@@QEAA@A6AXXZ@Z
_TEXT	SEGMENT
this$ = 224
_Fx$ = 232
??$?0A6AXXZ$$V$0A@@thread@std@@QEAA@A6AXXZ@Z PROC	; std::thread::thread<void (__cdecl&)(void),0>, COMDAT

; 87   :     _NODISCARD_CTOR_THREAD explicit thread(_Fn&& _Fx, _Args&&... _Ax) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1A1458EA_thread
	call	__CheckForDebuggerJustMyCode

; 88   :         _Start(_STD forward<_Fn>(_Fx), _STD forward<_Args>(_Ax)...);

	mov	rdx, QWORD PTR _Fx$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z ; std::thread::_Start<void (__cdecl&)(void)>

; 89   :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0A6AXXZ$$V$0A@@thread@std@@QEAA@A6AXXZ@Z ENDP	; std::thread::thread<void (__cdecl&)(void),0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\data\code\gaming-studio-practices\ThreadsMulti\src\Main.cpp
;	COMDAT ?notmain@@YAHXZ
_TEXT	SEGMENT
worker$ = 8
start$ = 56
end$ = 88
duration$ = 116
$T7 = 340
$T8 = 376
$T9 = 404
$T10 = 440
$T11 = 468
$T12 = 500
tv140 = 516
tv146 = 520
tv65 = 520
__$ArrayPad$ = 528
?notmain@@YAHXZ PROC					; notmain, COMDAT

; 42   : {

$LN4:
	push	rbp
	push	rdi
	sub	rsp, 584				; 00000248H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__B23DAEA1_Main@cpp
	call	__CheckForDebuggerJustMyCode

; 43   : 
; 44   : 	std::cout << "Started thread id = " << std::this_thread::get_id() << std::endl;

	lea	rcx, QWORD PTR $T7[rbp]
	call	?get_id@this_thread@std@@YA?AVid@thread@2@XZ ; std::this_thread::get_id
	mov	QWORD PTR tv65[rbp], rax
	lea	rdx, OFFSET FLAT:??_C@_0BF@JFEEALKJ@Started?5thread?5id?5?$DN?5@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv65[rbp]
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z ; std::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 45   : 	std::thread worker (DoWork);

	lea	rdx, OFFSET FLAT:?DoWork@@YAXXZ		; DoWork
	lea	rcx, QWORD PTR worker$[rbp]
	call	??$?0A6AXXZ$$V$0A@@thread@std@@QEAA@A6AXXZ@Z ; std::thread::thread<void (__cdecl&)(void),0>
	npad	1

; 46   : 
; 47   : 	std::cin.get(); 

	mov	rcx, QWORD PTR __imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A
	call	QWORD PTR __imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAHXZ

; 48   : 	s_Finished = true; 

	mov	BYTE PTR ?s_Finished@@3_NA, 1

; 49   : 
; 50   : 	worker.join(); // wait for the thread to finish before exiting the program (otherwise the program will terminate before the thread has finished)

	lea	rcx, QWORD PTR worker$[rbp]
	call	?join@thread@std@@QEAAXXZ		; std::thread::join

; 51   : 
; 52   : 	std::cout << "Finished." << std::endl;

	lea	rdx, OFFSET FLAT:??_C@_09MIILECCM@Finished?4@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 53   : 
; 54   : 
; 55   : 	std::cout << "Press enter to start measurement...";

	lea	rdx, OFFSET FLAT:??_C@_0CE@FOEOINAG@Press?5enter?5to?5start?5measuremen@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 56   : 	std::cin.get();

	mov	rcx, QWORD PTR __imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A
	call	QWORD PTR __imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAHXZ

; 57   : 
; 58   : 	auto start = std::chrono::high_resolution_clock::now();

	lea	rcx, QWORD PTR start$[rbp]
	call	?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ; std::chrono::steady_clock::now

; 59   : 
; 60   : 	// sleep for 1 second
; 61   : 	std::this_thread::sleep_for(std::chrono::seconds(1));

	mov	DWORD PTR $T9[rbp], 1
	lea	rdx, QWORD PTR $T9[rbp]
	lea	rcx, QWORD PTR $T8[rbp]
	call	??$?0H$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBH@Z ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><int,0>
	mov	rcx, rax
	call	??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z ; std::this_thread::sleep_for<__int64,std::ratio<1,1> >

; 62   : 
; 63   : 	auto end = std::chrono::high_resolution_clock::now();

	lea	rcx, QWORD PTR end$[rbp]
	call	?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ; std::chrono::steady_clock::now

; 64   : 	std::chrono::duration<float> duration = end - start;

	lea	r8, QWORD PTR start$[rbp]
	lea	rdx, QWORD PTR end$[rbp]
	lea	rcx, QWORD PTR $T10[rbp]
	call	??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	mov	rdx, rax
	lea	rcx, QWORD PTR duration$[rbp]
	call	??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><__int64,std::ratio<1,1000000000>,0>

; 65   : 
; 66   : 	// print duration to console
; 67   : 	std::cout << "Duration: " << duration.count() << " seconds" << std::endl;

	lea	rcx, QWORD PTR duration$[rbp]
	call	?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEBAMXZ ; std::chrono::duration<float,std::ratio<1,1> >::count
	movss	DWORD PTR tv140[rbp], xmm0
	lea	rdx, OFFSET FLAT:??_C@_0L@GLKCKPDG@Duration?3?5@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	movss	xmm0, DWORD PTR tv140[rbp]
	movaps	xmm1, xmm0
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@M@Z
	lea	rdx, OFFSET FLAT:??_C@_08GFGBMIFC@?5seconds@
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 68   : 
; 69   : 	std::cout << "Finished thread id = " << std::this_thread::get_id() << std::endl;

	lea	rcx, QWORD PTR $T11[rbp]
	call	?get_id@this_thread@std@@YA?AVid@thread@2@XZ ; std::this_thread::get_id
	mov	QWORD PTR tv146[rbp], rax
	lea	rdx, OFFSET FLAT:??_C@_0BG@KKFGIOJ@Finished?5thread?5id?5?$DN?5@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv146[rbp]
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z ; std::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 70   : 	return 0;

	mov	DWORD PTR $T12[rbp], 0
	lea	rcx, QWORD PTR worker$[rbp]
	call	??1thread@std@@QEAA@XZ			; std::thread::~thread
	mov	eax, DWORD PTR $T12[rbp]

; 71   : }

	mov	edi, eax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?notmain@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+552]
	pop	rdi
	pop	rbp
	ret	0
?notmain@@YAHXZ ENDP					; notmain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
worker$ = 8
start$ = 56
end$ = 88
duration$ = 116
$T7 = 340
$T8 = 376
$T9 = 404
$T10 = 440
$T11 = 468
$T12 = 500
tv140 = 516
tv146 = 520
tv65 = 520
__$ArrayPad$ = 528
?dtor$0@?0??notmain@@YAHXZ@4HA PROC			; `notmain'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR worker$[rbp]
	call	??1thread@std@@QEAA@XZ			; std::thread::~thread
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??notmain@@YAHXZ@4HA ENDP			; `notmain'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z
_TEXT	SEGMENT
$T1 = 200
_Rel_time$ = 256
??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z PROC ; std::this_thread::sleep_for<__int64,std::ratio<1,1> >, COMDAT

; 203  :     void sleep_for(const chrono::duration<_Rep, _Period>& _Rel_time) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1A1458EA_thread
	call	__CheckForDebuggerJustMyCode

; 204  :         sleep_until(_To_absolute_time(_Rel_time));

	mov	rdx, QWORD PTR _Rel_time$[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z ; std::_To_absolute_time<__int64,std::ratio<1,1> >
	mov	rcx, rax
	call	??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; 205  :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z ENDP ; std::this_thread::sleep_for<__int64,std::ratio<1,1> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\data\code\gaming-studio-practices\ThreadsMulti\src\Main.cpp
;	COMDAT ?DoWork@@YAXXZ
_TEXT	SEGMENT
timer$ = 8
$T4 = 244
$T5 = 280
$T6 = 308
tv89 = 328
tv68 = 328
__$ArrayPad$ = 336
?DoWork@@YAXXZ PROC					; DoWork, COMDAT

; 25   : {

$LN6:
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 42					; 0000002aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__B23DAEA1_Main@cpp
	call	__CheckForDebuggerJustMyCode

; 26   : 	Timer timer;

	lea	rcx, QWORD PTR timer$[rbp]
	call	??0Timer@@QEAA@XZ			; Timer::Timer
	npad	1

; 27   : 	using namespace std::chrono_literals;
; 28   : 	std::cout << "Started thread id = " << std::this_thread::get_id() << std::endl;

	lea	rcx, QWORD PTR $T4[rbp]
	call	?get_id@this_thread@std@@YA?AVid@thread@2@XZ ; std::this_thread::get_id
	mov	QWORD PTR tv68[rbp], rax
	lea	rdx, OFFSET FLAT:??_C@_0BF@JFEEALKJ@Started?5thread?5id?5?$DN?5@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv68[rbp]
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z ; std::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
$LN2@DoWork:

; 29   : 
; 30   : 	while (!s_Finished)

	movzx	eax, BYTE PTR ?s_Finished@@3_NA
	test	eax, eax
	jne	SHORT $LN3@DoWork

; 31   : 	{
; 32   : 		std::cout << "Working..." << std::endl;

	lea	rdx, OFFSET FLAT:??_C@_0L@MIDOPIHN@Working?4?4?4@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 33   : 
; 34   : 		// sleep for 1 second (1000 milliseconds)
; 35   :         std::this_thread::sleep_for(1s);

	mov	edx, 1
	lea	rcx, QWORD PTR $T5[rbp]
	call	??__Ks@chrono_literals@literals@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@chrono@3@_K@Z ; std::literals::chrono_literals::operator "" s
	mov	rcx, rax
	call	??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z ; std::this_thread::sleep_for<__int64,std::ratio<1,1> >

; 36   : 	}

	jmp	SHORT $LN2@DoWork
$LN3@DoWork:

; 37   : 
; 38   : 	std::cout << "Finished thread id = " << std::this_thread::get_id() << std::endl;

	lea	rcx, QWORD PTR $T6[rbp]
	call	?get_id@this_thread@std@@YA?AVid@thread@2@XZ ; std::this_thread::get_id
	mov	QWORD PTR tv89[rbp], rax
	lea	rdx, OFFSET FLAT:??_C@_0BG@KKFGIOJ@Finished?5thread?5id?5?$DN?5@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv89[rbp]
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z ; std::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
	npad	1

; 39   : }

	lea	rcx, QWORD PTR timer$[rbp]
	call	??1Timer@@QEAA@XZ			; Timer::~Timer
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?DoWork@@YAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?DoWork@@YAXXZ ENDP					; DoWork
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
timer$ = 8
$T4 = 244
$T5 = 280
$T6 = 308
tv89 = 328
tv68 = 328
__$ArrayPad$ = 336
?dtor$0@?0??DoWork@@YAXXZ@4HA PROC			; `DoWork'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR timer$[rbp]
	call	??1Timer@@QEAA@XZ			; Timer::~Timer
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??DoWork@@YAXXZ@4HA ENDP			; `DoWork'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
;	COMDAT ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Ostr$ = 224
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z PROC ; std::endl<char,std::char_traits<char> >, COMDAT

; 1005 :     basic_ostream<_Elem, _Traits>& _Ostr) { // insert newline and flush stream

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__47FEFEA8_ostream
	call	__CheckForDebuggerJustMyCode

; 1006 :     _Ostr.put(_Ostr.widen('\n'));

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	dl, 10
	mov	rcx, rax
	call	QWORD PTR __imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
	movzx	edx, al
	mov	rcx, QWORD PTR _Ostr$[rbp]
	call	QWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z

; 1007 :     _Ostr.flush();

	mov	rcx, QWORD PTR _Ostr$[rbp]
	call	QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ

; 1008 :     return _Ostr;

	mov	rax, QWORD PTR _Ostr$[rbp]

; 1009 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ENDP ; std::endl<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z
_TEXT	SEGMENT
_Str$ = 224
_Id$ = 232
??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z PROC ; std::operator<<<char,std::char_traits<char> >, COMDAT

; 273  : basic_ostream<_Ch, _Tr>& operator<<(basic_ostream<_Ch, _Tr>& _Str, thread::id _Id) {

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1A1458EA_thread
	call	__CheckForDebuggerJustMyCode

; 274  :     return _Str << _Id._Id;

	mov	edx, DWORD PTR _Id$[rbp]
	mov	rcx, QWORD PTR _Str$[rbp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z

; 275  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z ENDP ; std::operator<<<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv300 = 484
tv295 = 484
tv139 = 484
tv301 = 488
tv298 = 488
tv296 = 488
tv137 = 488
tv302 = 496
tv299 = 496
tv297 = 496
__$ArrayPad$ = 504
_Ostr$ = 544
_Val$ = 552
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 761  : basic_ostream<char, _Traits>& operator<<(basic_ostream<char, _Traits>& _Ostr, const char* _Val) {

$LN25:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 552				; 00000228H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+584]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__47FEFEA8_ostream
	call	__CheckForDebuggerJustMyCode

; 762  :     // insert NTBS into char stream
; 763  :     using _Elem = char;
; 764  :     using _Myos = basic_ostream<_Elem, _Traits>;
; 765  : 
; 766  :     ios_base::iostate _State = ios_base::goodbit;

	mov	DWORD PTR _State$[rbp], 0

; 767  :     streamsize _Count        = static_cast<streamsize>(_Traits::length(_Val));

	mov	rcx, QWORD PTR _Val$[rbp]
	call	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
	mov	QWORD PTR _Count$[rbp], rax

; 768  :     streamsize _Pad          = _Ostr.width() <= 0 || _Ostr.width() <= _Count ? 0 : _Ostr.width() - _Count;

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	test	rax, rax
	jle	SHORT $LN17@operator
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	cmp	rax, QWORD PTR _Count$[rbp]
	jle	SHORT $LN17@operator
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	sub	rax, QWORD PTR _Count$[rbp]
	mov	QWORD PTR tv137[rbp], rax
	jmp	SHORT $LN18@operator
$LN17@operator:
	mov	QWORD PTR tv137[rbp], 0
$LN18@operator:
	mov	rax, QWORD PTR tv137[rbp]
	mov	QWORD PTR _Pad$[rbp], rax

; 769  :     const typename _Myos::sentry _Ok(_Ostr);

	mov	rdx, QWORD PTR _Ostr$[rbp]
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 770  : 
; 771  :     if (!_Ok) {

	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@operator

; 772  :         _State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax

; 773  :     } else { // state okay, insert

	jmp	$LN9@operator
$LN8@operator:

; 774  :         _TRY_IO_BEGIN
; 775  :         if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left) {

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
	mov	DWORD PTR tv139[rbp], eax
	mov	eax, DWORD PTR tv139[rbp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN11@operator

; 776  :             for (; 0 < _Pad; --_Pad) { // pad on left

	jmp	SHORT $LN4@operator
$LN2@operator:
	mov	rax, QWORD PTR _Pad$[rbp]
	dec	rax
	mov	QWORD PTR _Pad$[rbp], rax
$LN4@operator:
	cmp	QWORD PTR _Pad$[rbp], 0
	jle	$LN11@operator

; 777  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	BYTE PTR tv295[rbp], al
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv296[rbp], rax
	movzx	edx, BYTE PTR tv295[rbp]
	mov	rcx, QWORD PTR tv296[rbp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR tv297[rbp], eax
	mov	eax, DWORD PTR tv297[rbp]
	mov	DWORD PTR $T4[rbp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T5[rbp], eax
	lea	rdx, QWORD PTR $T4[rbp]
	lea	rcx, QWORD PTR $T5[rbp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@operator

; 778  :                     _State |= ios_base::badbit; // insertion failed, quit

	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax

; 779  :                     break;

	jmp	SHORT $LN11@operator
$LN12@operator:

; 780  :                 }
; 781  :             }

	jmp	$LN2@operator
$LN11@operator:

; 782  :         }
; 783  : 
; 784  :         if (_State == ios_base::goodbit && _Ostr.rdbuf()->sputn(_Val, _Count) != _Count) {

	cmp	DWORD PTR _State$[rbp], 0
	jne	SHORT $LN13@operator
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv298[rbp], rax
	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR tv298[rbp]
	call	QWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
	mov	QWORD PTR tv299[rbp], rax
	mov	rax, QWORD PTR _Count$[rbp]
	cmp	QWORD PTR tv299[rbp], rax
	je	SHORT $LN13@operator

; 785  :             _State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax
$LN13@operator:

; 786  :         }
; 787  : 
; 788  :         if (_State == ios_base::goodbit) {

	cmp	DWORD PTR _State$[rbp], 0
	jne	$LN14@operator

; 789  :             for (; 0 < _Pad; --_Pad) { // pad on right

	jmp	SHORT $LN7@operator
$LN5@operator:
	mov	rax, QWORD PTR _Pad$[rbp]
	dec	rax
	mov	QWORD PTR _Pad$[rbp], rax
$LN7@operator:
	cmp	QWORD PTR _Pad$[rbp], 0
	jle	$LN14@operator

; 790  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	BYTE PTR tv300[rbp], al
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv301[rbp], rax
	movzx	edx, BYTE PTR tv300[rbp]
	mov	rcx, QWORD PTR tv301[rbp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR tv302[rbp], eax
	mov	eax, DWORD PTR tv302[rbp]
	mov	DWORD PTR $T6[rbp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T7[rbp], eax
	lea	rdx, QWORD PTR $T6[rbp]
	lea	rcx, QWORD PTR $T7[rbp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@operator

; 791  :                     _State |= ios_base::badbit; // insertion failed, quit

	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax

; 792  :                     break;

	jmp	SHORT $LN14@operator
$LN15@operator:

; 793  :                 }
; 794  :             }

	jmp	$LN5@operator
$LN14@operator:

; 795  :         }
; 796  : 
; 797  :         _Ostr.width(0);

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	xor	edx, edx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z
	npad	1
	jmp	SHORT $LN9@operator
$LN23@operator:
$LN9@operator:

; 798  :         _CATCH_IO_(ios_base, _Ostr)
; 799  :     }
; 800  : 
; 801  :     _Ostr.setstate(_State);

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	xor	r8d, r8d
	mov	edx, DWORD PTR _State$[rbp]
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z

; 802  :     return _Ostr;

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	QWORD PTR $T8[rbp], rax
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T8[rbp]

; 803  : }

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+520]
	pop	rdi
	pop	rbp
	ret	0
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv300 = 484
tv295 = 484
tv139 = 484
tv301 = 488
tv298 = 488
tv296 = 488
tv137 = 488
tv302 = 496
tv299 = 496
tv297 = 496
__$ArrayPad$ = 504
_Ostr$ = 544
_Val$ = 552
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv300 = 484
tv295 = 484
tv139 = 484
tv301 = 488
tv298 = 488
tv296 = 488
tv137 = 488
tv302 = 496
tv299 = 496
tv297 = 496
__$ArrayPad$ = 504
_Ostr$ = 544
_Val$ = 552
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 798  :         _CATCH_IO_(ios_base, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN23@catch$1
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
_TEXT	SEGMENT
$T1 = 196
this$ = 256
_Dur$ = 264
??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z PROC ; std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><__int64,std::ratio<1,1000000000>,0>, COMDAT

; 107  :             : _MyRep(_CHRONO duration_cast<duration>(_Dur).count()) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rdx, QWORD PTR _Dur$[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<float,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,0>
	mov	rcx, rax
	call	?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEBAMXZ ; std::chrono::duration<float,std::ratio<1,1> >::count
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ENDP ; std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><__int64,std::ratio<1,1000000000>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
tv66 = 248
__$ReturnUdt$ = 288
_Left$ = 296
_Right$ = 304
??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z PROC ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 549  :             is_arithmetic_v<typename _Duration1::rep>&& is_arithmetic_v<typename _Duration2::rep>) /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 550  :         return _Left.time_since_epoch() - _Right.time_since_epoch();

	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR _Right$[rbp]
	call	?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
	mov	QWORD PTR tv66[rbp], rax
	lea	rdx, QWORD PTR $T2[rbp]
	mov	rcx, QWORD PTR _Left$[rbp]
	call	?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
	mov	rcx, QWORD PTR tv66[rbp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 551  :     }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ENDP ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\data\code\gaming-studio-practices\ThreadsMulti\src\Main.cpp
;	COMDAT ??1Timer@@QEAA@XZ
_TEXT	SEGMENT
ms$ = 4
$T1 = 232
$T2 = 260
$T3 = 296
this$ = 352
??1Timer@@QEAA@XZ PROC					; Timer::~Timer, COMDAT

; 16   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__B23DAEA1_Main@cpp
	call	__CheckForDebuggerJustMyCode

; 17   : 		end = std::chrono::high_resolution_clock::now();

	lea	rcx, QWORD PTR $T1[rbp]
	call	?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ; std::chrono::steady_clock::now
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+8], rax

; 18   : 		duration = end - start;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T3[rbp]
	call	??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rbp]
	call	??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><__int64,std::ratio<1,1000000000>,0>
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR $T2[rbp]
	mov	DWORD PTR [rax+16], ecx

; 19   : 		float ms = duration.count() * 1000.0f;

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	rcx, rax
	call	?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEBAMXZ ; std::chrono::duration<float,std::ratio<1,1> >::count
	mulss	xmm0, DWORD PTR __real@447a0000
	movss	DWORD PTR ms$[rbp], xmm0

; 20   : 		std::cout << "Timer took " << ms << "ms" << std::endl;

	lea	rdx, OFFSET FLAT:??_C@_0M@LKHJFMHJ@Timer?5took?5@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	movss	xmm1, DWORD PTR ms$[rbp]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@M@Z
	lea	rdx, OFFSET FLAT:??_C@_02EEKDFEKL@ms@
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
	npad	1

; 21   : 	}

	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
??1Timer@@QEAA@XZ ENDP					; Timer::~Timer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\data\code\gaming-studio-practices\ThreadsMulti\src\Main.cpp
;	COMDAT ??0Timer@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??0Timer@@QEAA@XZ PROC					; Timer::Timer, COMDAT

; 11   : 	Timer()

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__B23DAEA1_Main@cpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; 10   : 	std::chrono::duration<float> duration{};

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 4
	rep stosb

; 12   : 	{
; 13   : 		start = std::chrono::high_resolution_clock::now();

	lea	rcx, QWORD PTR $T1[rbp]
	call	?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ; std::chrono::steady_clock::now
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx], rax

; 14   : 	}

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0Timer@@QEAA@XZ ENDP					; Timer::Timer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEBAMXZ
_TEXT	SEGMENT
this$ = 224
?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEBAMXZ PROC ; std::chrono::duration<float,std::ratio<1,1> >::count, COMDAT

; 109  :         _NODISCARD constexpr _Rep count() const noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 110  :             return _MyRep;

	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax]

; 111  :         }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEBAMXZ ENDP ; std::chrono::duration<float,std::ratio<1,1> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ??0id@thread@std@@AEAA@I@Z
_TEXT	SEGMENT
this$ = 224
_Other_id$ = 232
??0id@thread@std@@AEAA@I@Z PROC				; std::thread::id::id, COMDAT

; 213  :     id(_Thrd_id_t _Other_id) : _Id(_Other_id) {}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1A1458EA_thread
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR _Other_id$[rbp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0id@thread@std@@AEAA@I@Z ENDP				; std::thread::id::id
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ?get_id@this_thread@std@@YA?AVid@thread@2@XZ
_TEXT	SEGMENT
__$ReturnUdt$ = 224
?get_id@this_thread@std@@YA?AVid@thread@2@XZ PROC	; std::this_thread::get_id, COMDAT

; 234  : _EXPORT_STD _NODISCARD inline thread::id this_thread::get_id() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1A1458EA_thread
	call	__CheckForDebuggerJustMyCode

; 235  :     return _Thrd_id();

	call	_Thrd_id
	mov	edx, eax
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0id@thread@std@@AEAA@I@Z		; std::thread::id::id
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 236  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?get_id@this_thread@std@@YA?AVid@thread@2@XZ ENDP	; std::this_thread::get_id
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?zero@?$duration_values@_J@chrono@std@@SA_JXZ
_TEXT	SEGMENT
?zero@?$duration_values@_J@chrono@std@@SA_JXZ PROC	; std::chrono::duration_values<__int64>::zero, COMDAT

; 39   :         _NODISCARD static constexpr _Rep zero() noexcept {

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 40   :             // get zero value
; 41   :             return _Rep(0);

	xor	eax, eax

; 42   :         }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?zero@?$duration_values@_J@chrono@std@@SA_JXZ ENDP	; std::chrono::duration_values<__int64>::zero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ?join@thread@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 200
$T2 = 256
this$ = 320
?join@thread@std@@QEAAXXZ PROC				; std::thread::join, COMDAT

; 119  :     void join() {

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1A1458EA_thread
	call	__CheckForDebuggerJustMyCode

; 120  :         if (!joinable()) {

	mov	rcx, QWORD PTR this$[rbp]
	call	?joinable@thread@std@@QEBA_NXZ		; std::thread::joinable
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@join

; 121  :             _Throw_Cpp_error(_INVALID_ARGUMENT);

	mov	ecx, 1
	call	?_Throw_Cpp_error@std@@YAXH@Z		; std::_Throw_Cpp_error
$LN2@join:

; 122  :         }
; 123  : 
; 124  :         if (_Thr._Id == _Thrd_id()) {

	call	_Thrd_id
	mov	rcx, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rcx+8], eax
	jne	SHORT $LN3@join

; 125  :             _Throw_Cpp_error(_RESOURCE_DEADLOCK_WOULD_OCCUR);

	mov	ecx, 5
	call	?_Throw_Cpp_error@std@@YAXH@Z		; std::_Throw_Cpp_error
$LN3@join:

; 126  :         }
; 127  : 
; 128  :         if (_Thrd_join(_Thr, nullptr) != _Thrd_success) {

	lea	rax, QWORD PTR $T2[rbp]
	mov	rdi, rax
	mov	rsi, QWORD PTR this$[rbp]
	mov	ecx, 16
	rep movsb
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rbp]
	call	_Thrd_join
	test	eax, eax
	je	SHORT $LN4@join

; 129  :             _Throw_Cpp_error(_NO_SUCH_PROCESS);

	mov	ecx, 2
	call	?_Throw_Cpp_error@std@@YAXH@Z		; std::_Throw_Cpp_error
$LN4@join:

; 130  :         }
; 131  : 
; 132  :         _Thr = {};

	lea	rax, QWORD PTR $T1[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb
	lea	rax, QWORD PTR $T1[rbp]
	mov	rdi, QWORD PTR this$[rbp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
$LN5@join:

; 133  :     }

	lea	rsp, QWORD PTR [rbp+288]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?join@thread@std@@QEAAXXZ ENDP				; std::thread::join
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ?joinable@thread@std@@QEBA_NXZ
_TEXT	SEGMENT
tv67 = 192
this$ = 240
?joinable@thread@std@@QEBA_NXZ PROC			; std::thread::joinable, COMDAT

; 115  :     _NODISCARD bool joinable() const noexcept {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1A1458EA_thread
	call	__CheckForDebuggerJustMyCode

; 116  :         return _Thr._Id != 0;

	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+8], 0
	je	SHORT $LN3@joinable
	mov	DWORD PTR tv67[rbp], 1
	jmp	SHORT $LN4@joinable
$LN3@joinable:
	mov	DWORD PTR tv67[rbp], 0
$LN4@joinable:
	movzx	eax, BYTE PTR tv67[rbp]

; 117  :     }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?joinable@thread@std@@QEBA_NXZ ENDP			; std::thread::joinable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ??1thread@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1thread@std@@QEAA@XZ PROC				; std::thread::~thread, COMDAT

; 91   :     ~thread() noexcept {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1A1458EA_thread
	call	__CheckForDebuggerJustMyCode

; 92   :         if (joinable()) {

	mov	rcx, QWORD PTR this$[rbp]
	call	?joinable@thread@std@@QEBA_NXZ		; std::thread::joinable
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@thread

; 93   :             _STD terminate();

	call	QWORD PTR __imp_terminate
$LN3@thread:

; 94   :         }
; 95   :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1thread@std@@QEAA@XZ ENDP				; std::thread::~thread
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ
_TEXT	SEGMENT
this$ = 224
?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ PROC ; std::chrono::duration<double,std::ratio<1,1000000000> >::count, COMDAT

; 109  :         _NODISCARD constexpr _Rep count() const noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 110  :             return _MyRep;

	mov	rax, QWORD PTR this$[rbp]
	movsd	xmm0, QWORD PTR [rax]

; 111  :         }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ ENDP ; std::chrono::duration<double,std::ratio<1,1000000000> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0_K$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_K@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
??$?0_K$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_K@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><unsigned __int64,0>, COMDAT

; 99   :             : _MyRep(static_cast<_Rep>(_Val)) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0_K$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_K@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><unsigned __int64,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??__Ks@chrono_literals@literals@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@chrono@3@_K@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 224
_Val$ = 232
??__Ks@chrono_literals@literals@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@chrono@3@_K@Z PROC ; std::literals::chrono_literals::operator "" s, COMDAT

; 744  :         /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 745  :             return _CHRONO seconds(_Val);

	lea	rdx, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0_K$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_K@Z ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><unsigned __int64,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 746  :         }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??__Ks@chrono_literals@literals@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@chrono@3@_K@Z ENDP ; std::literals::chrono_literals::operator "" s
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
_Dur$ = 264
??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,0>, COMDAT

; 107  :             : _MyRep(_CHRONO duration_cast<duration>(_Dur).count()) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rdx, QWORD PTR _Dur$[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1>,0>
	mov	rcx, rax
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
_TEXT	SEGMENT
_Num_is_one$ = 4
_Den_is_one$ = 36
$T1 = 264
$T2 = 296
$T3 = 328
$T4 = 360
__$ReturnUdt$ = 416
_Dur$ = 424
??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,0>, COMDAT

; 422  :         is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) /* strengthened */ {

$LN9:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 423  :         // convert duration to another duration; truncate
; 424  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 425  : 
; 426  :         using _ToRep = typename _To::rep;
; 427  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 428  : 
; 429  :         constexpr bool _Num_is_one = _CF::num == 1;

	mov	BYTE PTR _Num_is_one$[rbp], 1

; 430  :         constexpr bool _Den_is_one = _CF::den == 1;

	mov	BYTE PTR _Den_is_one$[rbp], 0

; 431  : 
; 432  :         if (_Den_is_one) {

	xor	eax, eax
	test	eax, eax
	je	SHORT $LN2@duration_c

; 433  :             if (_Num_is_one) {

	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN4@duration_c

; 434  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	mov	QWORD PTR $T1[rbp], rax
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@duration_c

; 435  :             } else {

	jmp	SHORT $LN5@duration_c
$LN4@duration_c:

; 436  :                 return static_cast<_To>(

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	mov	QWORD PTR $T2[rbp], rax
	lea	rdx, QWORD PTR $T2[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	SHORT $LN1@duration_c
$LN5@duration_c:

; 437  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 438  :             }
; 439  :         } else {

	jmp	SHORT $LN1@duration_c
$LN2@duration_c:

; 440  :             if (_Num_is_one) {

	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN6@duration_c

; 441  :                 return static_cast<_To>(

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	cdq
	mov	ecx, 1000000000				; 3b9aca00H
	idiv	rcx
	mov	QWORD PTR $T3[rbp], rax
	lea	rdx, QWORD PTR $T3[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	SHORT $LN1@duration_c

; 442  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 443  :             } else {

	jmp	SHORT $LN1@duration_c
$LN6@duration_c:

; 444  :                 return static_cast<_To>(static_cast<_ToRep>(

	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	cdq
	mov	ecx, 1000000000				; 3b9aca00H
	idiv	rcx
	mov	QWORD PTR $T4[rbp], rax
	lea	rdx, QWORD PTR $T4[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@duration_c:

; 445  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 446  :             }
; 447  :         }
; 448  :     }

	lea	rsp, QWORD PTR [rbp+392]
	pop	rdi
	pop	rbp
	ret	0
??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ
_TEXT	SEGMENT
this$ = 224
?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ PROC ; std::chrono::duration<double,std::ratio<1,1> >::count, COMDAT

; 109  :         _NODISCARD constexpr _Rep count() const noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 110  :             return _MyRep;

	mov	rax, QWORD PTR this$[rbp]
	movsd	xmm0, QWORD PTR [rax]

; 111  :         }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ ENDP ; std::chrono::duration<double,std::ratio<1,1> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>, COMDAT

; 99   :             : _MyRep(static_cast<_Rep>(_Val)) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??Y?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAAAEAV012@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
_TEXT	SEGMENT
this$ = 224
_Dur$ = 232
??Y?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAAAEAV012@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::operator+=, COMDAT

; 232  :         _CONSTEXPR17 time_point& operator+=(const _Duration& _Dur) noexcept(is_arithmetic_v<rep>) /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 233  :             _MyDur += _Dur;

	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR _Dur$[rbp]
	mov	rcx, rax
	call	??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=

; 234  :             return *this;

	mov	rax, QWORD PTR this$[rbp]

; 235  :         }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??Y?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAAAEAV012@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ENDP ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ
_TEXT	SEGMENT
this$ = 224
__$ReturnUdt$ = 232
?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch, COMDAT

; 211  :         _NODISCARD constexpr _Duration time_since_epoch() const noexcept(is_arithmetic_v<rep>) /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 212  :             return _MyDur;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 213  :         }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ENDP ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
_TEXT	SEGMENT
this$ = 224
_Other$ = 232
??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 203  :         constexpr explicit time_point(const _Duration& _Other) noexcept(is_arithmetic_v<rep>) // strengthened

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 204  :             : _MyDur(_Other) {}

	mov	rax, QWORD PTR _Other$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ENDP ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 201  :         constexpr time_point() = default;

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 202  : 
; 203  :         constexpr explicit time_point(const _Duration& _Other) noexcept(is_arithmetic_v<rep>) // strengthened
; 204  :             : _MyDur(_Other) {}
; 205  : 
; 206  :         template <class _Duration2, enable_if_t<is_convertible_v<_Duration2, _Duration>, int> = 0>
; 207  :         constexpr time_point(const time_point<_Clock, _Duration2>& _Tp) noexcept(
; 208  :             is_arithmetic_v<rep>&& is_arithmetic_v<typename _Duration2::rep>) // strengthened
; 209  :             : _MyDur(_Tp.time_since_epoch()) {}
; 210  : 
; 211  :         _NODISCARD constexpr _Duration time_since_epoch() const noexcept(is_arithmetic_v<rep>) /* strengthened */ {
; 212  :             return _MyDur;
; 213  :         }
; 214  : 
; 215  : #if _HAS_CXX20
; 216  :         constexpr time_point& operator++() noexcept(is_arithmetic_v<rep>) /* strengthened */ {
; 217  :             ++_MyDur;
; 218  :             return *this;
; 219  :         }
; 220  :         constexpr time_point operator++(int) noexcept(is_arithmetic_v<rep>) /* strengthened */ {
; 221  :             return time_point{_MyDur++};
; 222  :         }
; 223  :         constexpr time_point& operator--() noexcept(is_arithmetic_v<rep>) /* strengthened */ {
; 224  :             --_MyDur;
; 225  :             return *this;
; 226  :         }
; 227  :         constexpr time_point operator--(int) noexcept(is_arithmetic_v<rep>) /* strengthened */ {
; 228  :             return time_point{_MyDur--};
; 229  :         }
; 230  : #endif // _HAS_CXX20
; 231  : 
; 232  :         _CONSTEXPR17 time_point& operator+=(const _Duration& _Dur) noexcept(is_arithmetic_v<rep>) /* strengthened */ {
; 233  :             _MyDur += _Dur;
; 234  :             return *this;
; 235  :         }
; 236  : 
; 237  :         _CONSTEXPR17 time_point& operator-=(const _Duration& _Dur) noexcept(is_arithmetic_v<rep>) /* strengthened */ {
; 238  :             _MyDur -= _Dur;
; 239  :             return *this;
; 240  :         }
; 241  : 
; 242  :         _NODISCARD static constexpr time_point(min)() noexcept {
; 243  :             return time_point((_Duration::min)());
; 244  :         }
; 245  : 
; 246  :         _NODISCARD static constexpr time_point(max)() noexcept {
; 247  :             return time_point((_Duration::max)());
; 248  :         }
; 249  : 
; 250  :     private:
; 251  :         _Duration _MyDur{duration::zero()}; // duration since the epoch

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::zero

; 201  :         constexpr time_point() = default;

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ ENDP ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ
_TEXT	SEGMENT
$T1 = 200
__$ReturnUdt$ = 256
?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::zero, COMDAT

; 171  :         _NODISCARD static constexpr duration zero() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 172  :             // get zero value
; 173  :             return duration(duration_values<_Rep>::zero());

	call	?zero@?$duration_values@_J@chrono@std@@SA_JXZ ; std::chrono::duration_values<__int64>::zero
	mov	QWORD PTR $T1[rbp], rax
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 174  :         }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::zero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z
_TEXT	SEGMENT
this$ = 224
_Right$ = 232
??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=, COMDAT

; 146  :         _CONSTEXPR17 duration& operator-=(const duration& _Right) noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 147  :             _MyRep -= _Right._MyRep;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx], rax

; 148  :             return *this;

	mov	rax, QWORD PTR this$[rbp]

; 149  :         }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z
_TEXT	SEGMENT
this$ = 224
_Right$ = 232
??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=, COMDAT

; 141  :         _CONSTEXPR17 duration& operator+=(const duration& _Right) noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 142  :             _MyRep += _Right._MyRep;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Right$[rbp]
	add	rax, QWORD PTR [rcx]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx], rax

; 143  :             return *this;

	mov	rax, QWORD PTR this$[rbp]

; 144  :         }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 224
?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count, COMDAT

; 109  :         _NODISCARD constexpr _Rep count() const noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 110  :             return _MyRep;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]

; 111  :         }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
_TEXT	SEGMENT
_Freq$ = 8
_Ctr$ = 40
_TenMHz$ = 72
_Multiplier$1 = 104
_Whole$2 = 136
_Part$3 = 168
$T4 = 392
$T5 = 424
$T6 = 456
$T7 = 488
__$ReturnUdt$ = 544
?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ PROC ; std::chrono::steady_clock::now, COMDAT

; 669  :         _NODISCARD static time_point now() noexcept { // get current time

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 552				; 00000228H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 670  :             const long long _Freq = _Query_perf_frequency(); // doesn't change after system boot

	call	_Query_perf_frequency
	mov	QWORD PTR _Freq$[rbp], rax

; 671  :             const long long _Ctr  = _Query_perf_counter();

	call	_Query_perf_counter
	mov	QWORD PTR _Ctr$[rbp], rax

; 672  :             static_assert(period::num == 1, "This assumes period::num == 1.");
; 673  :             // 10 MHz is a very common QPC frequency on modern PCs. Optimizing for
; 674  :             // this specific frequency can double the performance of this function by
; 675  :             // avoiding the expensive frequency conversion path.
; 676  :             constexpr long long _TenMHz = 10'000'000;

	mov	QWORD PTR _TenMHz$[rbp], 10000000	; 00989680H

; 677  :             if (_Freq == _TenMHz) {

	cmp	QWORD PTR _Freq$[rbp], 10000000		; 00989680H
	jne	SHORT $LN2@now

; 678  :                 static_assert(period::den % _TenMHz == 0, "It should never fail.");
; 679  :                 constexpr long long _Multiplier = period::den / _TenMHz;

	mov	QWORD PTR _Multiplier$1[rbp], 100	; 00000064H

; 680  :                 return time_point(duration(_Ctr * _Multiplier));

	imul	rax, QWORD PTR _Ctr$[rbp], 100		; 00000064H
	mov	QWORD PTR $T5[rbp], rax
	lea	rdx, QWORD PTR $T5[rbp]
	lea	rcx, QWORD PTR $T4[rbp]
	call	??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	SHORT $LN1@now

; 681  :             } else {

	jmp	SHORT $LN1@now
$LN2@now:

; 682  :                 // Instead of just having "(_Ctr * period::den) / _Freq",
; 683  :                 // the algorithm below prevents overflow when _Ctr is sufficiently large.
; 684  :                 // It assumes that _Freq * period::den does not overflow, which is currently true for nano period.
; 685  :                 // It is not realistic for _Ctr to accumulate to large values from zero with this assumption,
; 686  :                 // but the initial value of _Ctr could be large.
; 687  :                 const long long _Whole = (_Ctr / _Freq) * period::den;

	mov	rax, QWORD PTR _Ctr$[rbp]
	cdq
	idiv	QWORD PTR _Freq$[rbp]
	imul	rax, rax, 1000000000			; 3b9aca00H
	mov	QWORD PTR _Whole$2[rbp], rax

; 688  :                 const long long _Part  = (_Ctr % _Freq) * period::den / _Freq;

	mov	rax, QWORD PTR _Ctr$[rbp]
	cdq
	idiv	QWORD PTR _Freq$[rbp]
	mov	rax, rdx
	imul	rax, rax, 1000000000			; 3b9aca00H
	cdq
	idiv	QWORD PTR _Freq$[rbp]
	mov	QWORD PTR _Part$3[rbp], rax

; 689  :                 return time_point(duration(_Whole + _Part));

	mov	rax, QWORD PTR _Part$3[rbp]
	mov	rcx, QWORD PTR _Whole$2[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR $T7[rbp], rax
	lea	rdx, QWORD PTR $T7[rbp]
	lea	rcx, QWORD PTR $T6[rbp]
	call	??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@now:

; 690  :             }
; 691  :         }

	lea	rsp, QWORD PTR [rbp+520]
	pop	rdi
	pop	rbp
	ret	0
?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ENDP ; std::chrono::steady_clock::now
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,0>, COMDAT

; 99   :             : _MyRep(static_cast<_Rep>(_Val)) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 224
?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,1> >::count, COMDAT

; 109  :         _NODISCARD constexpr _Rep count() const noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 110  :             return _MyRep;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]

; 111  :         }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0_J$0A@@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
??$?0_J$0A@@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,0>, COMDAT

; 99   :             : _MyRep(static_cast<_Rep>(_Val)) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0_J$0A@@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ
_TEXT	SEGMENT
this$ = 224
__$ReturnUdt$ = 232
?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ PROC ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch, COMDAT

; 211  :         _NODISCARD constexpr _Duration time_since_epoch() const noexcept(is_arithmetic_v<rep>) /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 212  :             return _MyDur;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 213  :         }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ ENDP ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z
_TEXT	SEGMENT
this$ = 224
_Other$ = 232
??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z PROC ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >, COMDAT

; 203  :         constexpr explicit time_point(const _Duration& _Other) noexcept(is_arithmetic_v<rep>) // strengthened

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 204  :             : _MyDur(_Other) {}

	mov	rax, QWORD PTR _Other$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ENDP ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 224
?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count, COMDAT

; 109  :         _NODISCARD constexpr _Rep count() const noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 110  :             return _MyRep;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]

; 111  :         }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
__$ReturnUdt$ = 288
?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ PROC ; std::chrono::system_clock::now, COMDAT

; 642  :         _NODISCARD static time_point now() noexcept { // get current time

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__22992157___msvc_chrono@hpp
	call	__CheckForDebuggerJustMyCode

; 643  :             return time_point(duration(_Xtime_get_ticks()));

	call	_Xtime_get_ticks
	mov	QWORD PTR $T2[rbp], rax
	lea	rdx, QWORD PTR $T2[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??$?0_J$0A@@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,0>
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 644  :         }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ ENDP ; std::chrono::system_clock::now
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
;	COMDAT ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ PROC		; std::_Narrow_char_traits<char,int>::eof, COMDAT

; 488  :     _NODISCARD static constexpr int_type eof() noexcept {

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__8BD0505D_xstring
	call	__CheckForDebuggerJustMyCode

; 489  :         return static_cast<int_type>(EOF);

	mov	eax, -1

; 490  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ENDP		; std::_Narrow_char_traits<char,int>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
;	COMDAT ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
_TEXT	SEGMENT
tv65 = 192
_Left$ = 240
_Right$ = 248
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z PROC ; std::_Narrow_char_traits<char,int>::eq_int_type, COMDAT

; 480  :     _NODISCARD static constexpr bool eq_int_type(const int_type& _Left, const int_type& _Right) noexcept {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__8BD0505D_xstring
	call	__CheckForDebuggerJustMyCode

; 481  :         return _Left == _Right;

	mov	rax, QWORD PTR _Left$[rbp]
	mov	rcx, QWORD PTR _Right$[rbp]
	mov	ecx, DWORD PTR [rcx]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN3@eq_int_typ
	mov	DWORD PTR tv65[rbp], 1
	jmp	SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
	mov	DWORD PTR tv65[rbp], 0
$LN4@eq_int_typ:
	movzx	eax, BYTE PTR tv65[rbp]

; 482  :     }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ENDP ; std::_Narrow_char_traits<char,int>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
_First$ = 224
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 402  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__8BD0505D_xstring
	call	__CheckForDebuggerJustMyCode

; 403  :         // find length of null-terminated string
; 404  : #if _HAS_CXX17
; 405  : #ifdef __cpp_char8_t
; 406  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 407  : #if _HAS_U8_INTRINSICS
; 408  :             return __builtin_u8strlen(_First);
; 409  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 410  :             return _Primary_char_traits::length(_First);
; 411  : #endif // _HAS_U8_INTRINSICS
; 412  :         } else
; 413  : #endif // __cpp_char8_t
; 414  :         {
; 415  :             return __builtin_strlen(_First);
; 416  :         }
; 417  : #else // _HAS_CXX17
; 418  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

	mov	rcx, QWORD PTR _First$[rbp]
	call	strlen

; 419  : #endif // _HAS_CXX17
; 420  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\data\code\gaming-studio-practices\ThreadsMulti\src\Main.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__B23DAEA1_Main@cpp
	call	__CheckForDebuggerJustMyCode
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\data\code\gaming-studio-practices\ThreadsMulti\src\Main.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 224
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__B23DAEA1_Main@cpp
	call	__CheckForDebuggerJustMyCode
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
