; Listing generated by Microsoft (R) Optimizing Compiler Version 19.35.32215.0 

	TTL	D:\data\code\gaming-studio-practices\ThreadsMulti\bin\ARM\Debug\intermediates\Main.obj
	THUMB
	.drectve

	.rdata
|?_Fake_alloc@std@@3U_Fake_allocator@1@B| % 1		; std::_Fake_alloc
	%	3
|$SG38432| DCB	"Started thread id = ", 0x0
	%	3
|$SG38433| DCB	"Working...", 0x0
	%	1
|$SG38434| DCB	"Finished thread id = ", 0x0
	%	2
|$SG38498| DCB	"Started thread id = ", 0x0
	%	3
|$SG38499| DCB	"Finished.", 0x0
	%	2
|$SG38500| DCB	"Press enter to start measurement...", 0x0
|$SG38501| DCB	" seconds", 0x0
	%	3
|$SG38502| DCB	"Duration: ", 0x0
	%	1
|$SG38503| DCB	"Finished thread id = ", 0x0
	EXPORT	|?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z| ; std::_Narrow_char_traits<char,int>::length
	EXPORT	|?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z| ; std::_Narrow_char_traits<char,int>::eq_int_type
	EXPORT	|?eof@?$_Narrow_char_traits@DH@std@@SAHXZ| ; std::_Narrow_char_traits<char,int>::eof
	EXPORT	|?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ| ; std::chrono::system_clock::now
	EXPORT	|?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QBA_JXZ| ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
	EXPORT	|??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z| ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >
	EXPORT	|?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ| ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch
	EXPORT	|??$?0_J$0A@@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QAA@AB_J@Z| ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,0>
	EXPORT	|?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QBA_JXZ| ; std::chrono::duration<__int64,std::ratio<1,1> >::count
	EXPORT	|??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@AB_J@Z| ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,0>
	EXPORT	|?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ| ; std::chrono::steady_clock::now
	EXPORT	|?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ| ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	EXPORT	|??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAAAAV012@ABV012@@Z| ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=
	EXPORT	|??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAAAAV012@ABV012@@Z| ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=
	EXPORT	|?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ| ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::zero
	EXPORT	|??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAA@XZ| ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	EXPORT	|??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	EXPORT	|?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ| ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
	EXPORT	|??Y?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAAAAV012@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::operator+=
	EXPORT	|??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z| ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>
	EXPORT	|??__Ks@chrono_literals@literals@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@chrono@3@_K@Z| ; std::literals::chrono_literals::operator "" s
	EXPORT	|??$?0_K$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@AB_K@Z| ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><unsigned __int64,0>
	EXPORT	|?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QBANXZ| ; std::chrono::duration<double,std::ratio<1,1> >::count
	EXPORT	|?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBANXZ| ; std::chrono::duration<double,std::ratio<1,1000000000> >::count
	EXPORT	|??1thread@std@@QAA@XZ|			; std::thread::~thread
	EXPORT	|?joinable@thread@std@@QBA_NXZ|		; std::thread::joinable
	EXPORT	|?join@thread@std@@QAAXXZ|		; std::thread::join
	EXPORT	|?get_id@this_thread@std@@YA?AVid@thread@2@XZ| ; std::this_thread::get_id
	EXPORT	|??0id@thread@std@@AAA@I@Z|		; std::thread::id::id
	EXPORT	|?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QBAMXZ| ; std::chrono::duration<float,std::ratio<1,1> >::count
	EXPORT	|??0Timer@@QAA@XZ|			; Timer::Timer
	EXPORT	|??1Timer@@QAA@XZ|			; Timer::~Timer
	EXPORT	|??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z| ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	EXPORT	|??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| ; std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><__int64,std::ratio<1,1000000000>,0>
	EXPORT	|??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z| ; std::operator<<<std::char_traits<char> >
	EXPORT	|??$?6DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@Vid@thread@0@@Z| ; std::operator<<<char,std::char_traits<char> >
	EXPORT	|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z| ; std::endl<char,std::char_traits<char> >
	EXPORT	|?DoWork@@YAXXZ|			; DoWork
	EXPORT	|??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXABV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z| ; std::this_thread::sleep_for<__int64,std::ratio<1,1> >
	EXPORT	|?notmain@@YAHXZ|			; notmain
	EXPORT	|??$?0A6AXXZ$$V$0A@@thread@std@@QAA@A6AXXZ@Z| ; std::thread::thread<void (__cdecl&)(void),0>
	EXPORT	|??$?0H$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@ABH@Z| ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><int,0>
	EXPORT	|?zero@?$duration_values@_J@chrono@std@@SA_JXZ| ; std::chrono::duration_values<__int64>::zero
	EXPORT	|??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z| ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	EXPORT	|??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	EXPORT	|??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z| ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	EXPORT	|??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	EXPORT	|??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBA_NXZ| ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	EXPORT	|??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@0@Z| ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
	EXPORT	|??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| ; std::chrono::duration_cast<std::chrono::duration<float,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,0>
	EXPORT	|??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PABV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z| ; std::_To_absolute_time<__int64,std::ratio<1,1> >
	EXPORT	|??$?O_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z| ; std::chrono::operator><__int64,std::ratio<1,1>,__int64,std::ratio<1,1> >
	EXPORT	|??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$00@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@ABV201@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z| ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1> >
	EXPORT	|??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z| ; std::chrono::operator<<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	EXPORT	|??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$00@std@@@12@@Z| ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,0>
	EXPORT	|??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z| ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	EXPORT	|??$forward@A6AXXZ@std@@YAA6AXXZA6AXXZ@Z| ; std::forward<void (__cdecl&)(void)>
	EXPORT	|??$_Start@A6AXXZ$$V@thread@std@@AAAXA6AXXZ@Z| ; std::thread::_Start<void (__cdecl&)(void)>
	EXPORT	|??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QAA@ABM@Z| ; std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><float,0>
	EXPORT	|??$?M_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z| ; std::chrono::operator<<__int64,std::ratio<1,1>,__int64,std::ratio<1,1> >
	EXPORT	|??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$00@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z| ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1> >
	EXPORT	|??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z| ; std::chrono::operator<<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
	EXPORT	|??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z| ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1>,0>
	EXPORT	|??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z| ; std::chrono::operator<=<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	EXPORT	|??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAAUxtime@@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z| ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
	EXPORT	|??$make_unique@V?$tuple@P6AXXZ@std@@A6AXXZ$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@0@A6AXXZ@Z| ; std::make_unique<std::tuple<void (__cdecl*)(void)>,void (__cdecl&)(void),0>
	EXPORT	|??R?$default_delete@V?$tuple@P6AXXZ@std@@@std@@QBAXPAV?$tuple@P6AXXZ@1@@Z| ; std::default_delete<std::tuple<void (__cdecl*)(void)> >::operator()
	EXPORT	|??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@XZ| ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::~unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >
	EXPORT	|?get_deleter@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAAAAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ| ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::get_deleter
	EXPORT	|?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QBAPAV?$tuple@P6AXXZ@2@XZ| ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::get
	EXPORT	|?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAAPAV?$tuple@P6AXXZ@2@XZ| ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::release
	EXPORT	|?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAAAAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ| ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Get_first
	EXPORT	|??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@$$QAV01@@Z| ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > ><std::default_delete<std::tuple<void (__cdecl*)(void)> >,0>
	EXPORT	|??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPAX@Z| ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void)>,0>
	EXPORT	|??$exchange@PAV?$tuple@P6AXXZ@std@@$$T@std@@YAPAV?$tuple@P6AXXZ@0@AAPAV10@$$QA$$T@Z| ; std::exchange<std::tuple<void (__cdecl*)(void)> *,std::nullptr_t>
	EXPORT	|??$?0_JU?$ratio@$00$0JIJGIA@@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z| ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,0>
	EXPORT	|??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NABV?$duration@NU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| ; std::chrono::operator<<double,std::ratio<1,1>,__int64,std::ratio<1,1000000000> >
	EXPORT	|??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@@Z| ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,0>
	EXPORT	|??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,0>
	EXPORT	|??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QAA@ABQ6AXXZ@Z| ; std::tuple<void (__cdecl*)(void)>::tuple<void (__cdecl*)(void)><void (__cdecl*)(void),0>
	EXPORT	|??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@PAV?$tuple@P6AXXZ@1@@Z| ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > ><std::default_delete<std::tuple<void (__cdecl*)(void)> >,0>
	EXPORT	|??$forward@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXXZ@std@@@0@AAU10@@Z| ; std::forward<std::default_delete<std::tuple<void (__cdecl*)(void)> > >
	EXPORT	|??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAA@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6AXXZ@std@@@1@$$QAPAV?$tuple@P6AXXZ@1@@Z| ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1><std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *>
	EXPORT	|??$get@$0A@P6AXXZ@std@@YAAAP6AXXZAAV?$tuple@P6AXXZ@0@@Z| ; std::get<0,void (__cdecl*)(void)>
	EXPORT	|??$move@AAP6AXXZ@std@@YA$$QAP6AXXZAAP6AXXZ@Z| ; std::move<void (__cdecl*&)(void)>
	EXPORT	|??$invoke@P6AXXZ@std@@YAX$$QAP6AXXZ@Z|	; std::invoke<void (__cdecl*)(void)>
	EXPORT	|??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z| ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000>,0>
	EXPORT	|??$?0NU?$ratio@$00$00@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@NU?$ratio@$00$00@std@@@12@@Z| ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,std::ratio<1,1>,0>
	EXPORT	|??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000000000>,0>
	EXPORT	|??$?0U_Exact_args_t@std@@ABQ6AXXZ$$V$0A@@?$tuple@P6AXXZ@std@@QAA@U_Exact_args_t@1@ABQ6AXXZ@Z| ; std::tuple<void (__cdecl*)(void)>::tuple<void (__cdecl*)(void)><std::_Exact_args_t,void (__cdecl*const &)(void),0>
	EXPORT	|??$?0AAPAV?$tuple@P6AXXZ@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAA@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6AXXZ@1@@Z| ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1><std::tuple<void (__cdecl*)(void)> * &>
	EXPORT	|??$forward@PAV?$tuple@P6AXXZ@std@@@std@@YA$$QAPAV?$tuple@P6AXXZ@0@AAPAV10@@Z| ; std::forward<std::tuple<void (__cdecl*)(void)> *>
	EXPORT	|??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@NU?$ratio@$00$00@std@@@01@@Z| ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,double,std::ratio<1,1>,0>
	EXPORT	|??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,0>
	EXPORT	|??$forward@ABQ6AXXZ@std@@YAABQ6AXXZABQ6AXXZ@Z| ; std::forward<void (__cdecl*const &)(void)>
	EXPORT	|??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAA@U_Exact_args_t@1@@Z| ; std::tuple<>::tuple<><std::_Exact_args_t,0>
	EXPORT	|??$?0ABQ6AXXZ@?$_Tuple_val@P6AXXZ@std@@QAA@ABQ6AXXZ@Z| ; std::_Tuple_val<void (__cdecl*)(void)>::_Tuple_val<void (__cdecl*)(void)><void (__cdecl*const &)(void)>
	EXPORT	|??$forward@AAPAV?$tuple@P6AXXZ@std@@@std@@YAAAPAV?$tuple@P6AXXZ@0@AAPAV10@@Z| ; std::forward<std::tuple<void (__cdecl*)(void)> * &>
	EXPORT	|??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABN@Z| ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,0>
	EXPORT	|??_C@_02EEKDFEKL@ms@| [ DATA ]		; `string'
	EXPORT	|??_C@_0M@LKHJFMHJ@Timer?5took?5@| [ DATA ] ; `string'
	IMPORT	|??2@YAPAXI@Z|				; operator new
	IMPORT	|??3@YAXPAXI@Z|				; operator delete
	IMPORT	|strlen|
	IMPORT	|?uncaught_exception@std@@YA_NXZ|	; std::uncaught_exception
	IMPORT	|__imp_terminate|
	IMPORT	|_Xtime_get_ticks|
	IMPORT	|_Query_perf_counter|
	IMPORT	|_Query_perf_frequency|
	IMPORT	|_Thrd_join|
	IMPORT	|_Thrd_sleep|
	IMPORT	|_Thrd_id|
	IMPORT	|_Cnd_do_broadcast_at_thread_exit|
	IMPORT	|?_Throw_Cpp_error@std@@YAXH@Z|		; std::_Throw_Cpp_error
	IMPORT	|__imp_?good@ios_base@std@@QBA_NXZ|
	IMPORT	|__imp_?flags@ios_base@std@@QBAHXZ|
	IMPORT	|__imp_?width@ios_base@std@@QBA_JXZ|
	IMPORT	|__imp_?width@ios_base@std@@QAA_J_J@Z|
	IMPORT	|__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAAHD@Z|
	IMPORT	|__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAA_JPBD_J@Z|
	IMPORT	|__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAAXH_N@Z|
	IMPORT	|__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBAPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ|
	IMPORT	|__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBAPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ|
	IMPORT	|__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBADXZ|
	IMPORT	|__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBADD@Z|
	IMPORT	|__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAXXZ|
	IMPORT	|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	IMPORT	|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	IMPORT	|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@M@Z|
	IMPORT	|__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV12@D@Z|
	IMPORT	|__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV12@XZ|
	IMPORT	|__imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAAHXZ|
	IMPORT	|__imp__beginthreadex|
	IMPORT	|__CxxFrameHandler3|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__i64tod|
	IMPORT	|__i64tos|
	IMPORT	|__rt_sdiv64|
	IMPORT	|__security_pop_cookie|
	IMPORT	|__security_push_cookie|
	IMPORT	|memcpy|
	IMPORT	|memset|
	IMPORT	|__imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A|
	IMPORT	|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	IMPORT	|_fltused|
	.bss
|?s_Finished@@3_NA| % 0x1				; s_Finished
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z| DCD imagerel |?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z|
	DCD	imagerel |$unwind2$?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z| DCD 0x33200011
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z| DCD imagerel |?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z|
	DCD	imagerel |$unwind2$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z| DCD 0x3320001b
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ| DCD imagerel |?eof@?$_Narrow_char_traits@DH@std@@SAHXZ|
	DCD	imagerel |$unwind2$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ| DCD 0x32a0000b
	DCD	0xa8fb02
	DCD	0xa802ff
	DCD	0xff
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ| DCD imagerel |?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ|
	DCD	imagerel |$unwind2$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ| DCD 0x3320001e
	DCD	0xa8fb08
	DCD	0x8808ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QBA_JXZ| DCD imagerel |?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QBA_JXZ|
	DCD	imagerel |$unwind2$?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QBA_JXZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QBA_JXZ| DCD 0x33200014
	DCD	0xa8fb04
	DCD	0x8804ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z| DCD imagerel |??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z|
	DCD	imagerel |$unwind2$??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z| DCD 0x33200012
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ| DCD imagerel |?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ|
	DCD	imagerel |$unwind2$?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ| DCD 0x33200012
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0_J$0A@@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QAA@AB_J@Z| DCD imagerel |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QAA@AB_J@Z|
	DCD	imagerel |$unwind2$??$?0_J$0A@@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QAA@AB_J@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?0_J$0A@@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QAA@AB_J@Z| DCD 0x33200017
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QBA_JXZ| DCD imagerel |?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QBA_JXZ|
	DCD	imagerel |$unwind2$?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QBA_JXZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QBA_JXZ| DCD 0x33200014
	DCD	0xa8fb04
	DCD	0x8804ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@AB_J@Z| DCD imagerel |??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@AB_J@Z|
	DCD	imagerel |$unwind2$??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@AB_J@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@AB_J@Z| DCD 0x33200017
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ| DCD imagerel |?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ|
	DCD	imagerel |$unwind2$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ| DCD 0x332000a9
	DCD	0x10a8fc29
	DCD	0x8829ff02
	DCD	0xff03ef10
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ| DCD imagerel |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	DCD	imagerel |$unwind2$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ| DCD 0x33200014
	DCD	0xa8fb04
	DCD	0x8804ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAAAAV012@ABV012@@Z| DCD imagerel |??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAAAAV012@ABV012@@Z|
	DCD	imagerel |$unwind2$??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAAAAV012@ABV012@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAAAAV012@ABV012@@Z| DCD 0x33200022
	DCD	0xa8fb04
	DCD	0x8804ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAAAAV012@ABV012@@Z| DCD imagerel |??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAAAAV012@ABV012@@Z|
	DCD	imagerel |$unwind2$??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAAAAV012@ABV012@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAAAAV012@ABV012@@Z| DCD 0x33200022
	DCD	0xa8fb04
	DCD	0x8804ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ| DCD imagerel |?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ|
	DCD	imagerel |$unwind2$?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ| DCD 0x33200019
	DCD	0xa8fb06
	DCD	0x8806ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAA@XZ| DCD imagerel |??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAA@XZ|
	DCD	imagerel |$unwind2$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAA@XZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAA@XZ| DCD 0x33200010
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| DCD imagerel |??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|
	DCD	imagerel |$unwind2$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| DCD 0x33200012
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ| DCD imagerel |?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ|
	DCD	imagerel |$unwind2$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ| DCD 0x33200012
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??Y?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAAAAV012@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| DCD imagerel |??Y?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAAAAV012@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|
	DCD	imagerel |$unwind2$??Y?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAAAAV012@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??Y?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAAAAV012@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| DCD 0x33200011
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z| DCD imagerel |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z|
	DCD	imagerel |$unwind2$??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z| DCD 0x33200017
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??__Ks@chrono_literals@literals@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@chrono@3@_K@Z| DCD imagerel |??__Ks@chrono_literals@literals@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@chrono@3@_K@Z|
	DCD	imagerel |$unwind2$??__Ks@chrono_literals@literals@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@chrono@3@_K@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??__Ks@chrono_literals@literals@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@chrono@3@_K@Z| DCD 0x33200011
	DCD	0xa8fb02
	DCD	0x8802ff04
	DCD	0xff05ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0_K$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@AB_K@Z| DCD imagerel |??$?0_K$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@AB_K@Z|
	DCD	imagerel |$unwind2$??$?0_K$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@AB_K@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?0_K$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@AB_K@Z| DCD 0x33200017
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QBANXZ| DCD imagerel |?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QBANXZ|
	DCD	imagerel |$unwind2$?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QBANXZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QBANXZ| DCD 0x33200011
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBANXZ| DCD imagerel |?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBANXZ|
	DCD	imagerel |$unwind2$?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBANXZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBANXZ| DCD 0x33200011
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??1thread@std@@QAA@XZ| DCD imagerel |??1thread@std@@QAA@XZ|
	DCD	imagerel |$unwind2$??1thread@std@@QAA@XZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??1thread@std@@QAA@XZ| DCD 0x33200016
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?joinable@thread@std@@QBA_NXZ| DCD imagerel |?joinable@thread@std@@QBA_NXZ|
	DCD	imagerel |$unwind2$?joinable@thread@std@@QBA_NXZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$?joinable@thread@std@@QBA_NXZ| DCD 0x3320001a
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?join@thread@std@@QAAXXZ| DCD imagerel |?join@thread@std@@QAAXXZ|
	DCD	imagerel |$unwind2$?join@thread@std@@QAAXXZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$?join@thread@std@@QAAXXZ| DCD 0x3320003b
	DCD	0xa8fb06
	DCD	0x8806ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata3$?get_id@this_thread@std@@YA?AVid@thread@2@XZ| DCD imagerel |?get_id@this_thread@std@@YA?AVid@thread@2@XZ|
	DCD	imagerel |$unwind4$?get_id@this_thread@std@@YA?AVid@thread@2@XZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind4$?get_id@this_thread@std@@YA?AVid@thread@2@XZ| DCD 0x43b0001a
	DCD	0xa8fc05c7
	DCD	0x5ff0280
	DCD	0x3ef8088
	DCD	0xff
	DCD	imagerel |__CxxFrameHandler3|
	DCD	imagerel |__ehfuncinfo$?get_id@this_thread@std@@YA?AVid@thread@2@XZ|
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??0id@thread@std@@AAA@I@Z| DCD imagerel |??0id@thread@std@@AAA@I@Z|
	DCD	imagerel |$unwind2$??0id@thread@std@@AAA@I@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??0id@thread@std@@AAA@I@Z| DCD 0x33200010
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QBAMXZ| DCD imagerel |?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QBAMXZ|
	DCD	imagerel |$unwind2$?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QBAMXZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QBAMXZ| DCD 0x33200011
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??0Timer@@QAA@XZ| DCD imagerel |??0Timer@@QAA@XZ|
	DCD	imagerel |$unwind2$??0Timer@@QAA@XZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??0Timer@@QAA@XZ| DCD 0x33200025
	DCD	0xa8fb04
	DCD	0x8804ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata3$??1Timer@@QAA@XZ| DCD imagerel |??1Timer@@QAA@XZ|
	DCD	imagerel |$unwind4$??1Timer@@QAA@XZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind4$??1Timer@@QAA@XZ| DCD 0x43b00056
	DCD	0xa8fc0fc7
	DCD	0xfff0280
	DCD	0x3ef8088
	DCD	0xff
	DCD	imagerel |__CxxFrameHandler3|
	DCD	imagerel |__ehfuncinfo$??1Timer@@QAA@XZ|
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z| DCD imagerel |??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|
	DCD	imagerel |$unwind2$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z| DCD 0x3320001c
	DCD	0xa8fb08
	DCD	0x8808ff04
	DCD	0xff05ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| DCD imagerel |??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|
	DCD	imagerel |$unwind2$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| DCD 0x33200020
	DCD	0xa8fb04
	DCD	0x8804ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata6$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z| DCD imagerel |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	DCD	imagerel |$unwind9$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata7$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z| DCD imagerel |__catch$20|
	DCD	imagerel |$unwind10$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata8$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z| DCD imagerel |__unwind$21|
	DCD	imagerel |$unwind11$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind9$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z| DCD 0x43b001b1
	DCD	0xa8fc3ac7
	DCD	0x3aff0290
	DCD	0x3ef9088
	DCD	0xff
	DCD	imagerel |__CxxFrameHandler3|
	DCD	imagerel |__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind10$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z| DCD 0x10300010
	DCD	0xffd4
	DCD	imagerel |__CxxFrameHandler3|
	DCD	imagerel |__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind11$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z| DCD 0x10200006
	DCD	0xffd4
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?6DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@Vid@thread@0@@Z| DCD imagerel |??$?6DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@Vid@thread@0@@Z|
	DCD	imagerel |$unwind2$??$?6DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@Vid@thread@0@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?6DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@Vid@thread@0@@Z| DCD 0x33200013
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z| DCD imagerel |??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	DCD	imagerel |$unwind2$??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z| DCD 0x33200023
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
	.pdata
|$pdata4$?DoWork@@YAXXZ| DCD imagerel |?DoWork@@YAXXZ|
	DCD	imagerel |$unwind6$?DoWork@@YAXXZ|
	.pdata
|$pdata5$?DoWork@@YAXXZ| DCD imagerel |__unwind$5|
	DCD	imagerel |$unwind7$?DoWork@@YAXXZ|
	.xdata
|$unwind6$?DoWork@@YAXXZ| DCD 0x33300060
	DCD	0xa8fc19c7
	DCD	0xa819ff80
	DCD	0xff80
	DCD	imagerel |__CxxFrameHandler3|
	DCD	imagerel |__ehfuncinfo$?DoWork@@YAXXZ|
|$unwind7$?DoWork@@YAXXZ| DCD 0x10200006
	DCD	0xffd4
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXABV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z| DCD imagerel |??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXABV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z|
	DCD	imagerel |$unwind2$??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXABV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXABV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z| DCD 0x33200012
	DCD	0xa8fb04
	DCD	0x8804ff02
	DCD	0xff03ef00
	.pdata
|$pdata4$?notmain@@YAHXZ| DCD imagerel |?notmain@@YAHXZ|
	DCD	imagerel |$unwind6$?notmain@@YAHXZ|
	.pdata
|$pdata5$?notmain@@YAHXZ| DCD imagerel |__unwind$3|
	DCD	imagerel |$unwind7$?notmain@@YAHXZ|
	.xdata
|$unwind6$?notmain@@YAHXZ| DCD 0x333000ac
	DCD	0xa8fc25c7
	DCD	0xa825ff80
	DCD	0xff80
	DCD	imagerel |__CxxFrameHandler3|
	DCD	imagerel |__ehfuncinfo$?notmain@@YAHXZ|
|$unwind7$?notmain@@YAHXZ| DCD 0x10200006
	DCD	0xffd4
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0A6AXXZ$$V$0A@@thread@std@@QAA@A6AXXZ@Z| DCD imagerel |??$?0A6AXXZ$$V$0A@@thread@std@@QAA@A6AXXZ@Z|
	DCD	imagerel |$unwind2$??$?0A6AXXZ$$V$0A@@thread@std@@QAA@A6AXXZ@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?0A6AXXZ$$V$0A@@thread@std@@QAA@A6AXXZ@Z| DCD 0x33200015
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0H$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@ABH@Z| DCD imagerel |??$?0H$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@ABH@Z|
	DCD	imagerel |$unwind2$??$?0H$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@ABH@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?0H$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@ABH@Z| DCD 0x33200018
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?zero@?$duration_values@_J@chrono@std@@SA_JXZ| DCD imagerel |?zero@?$duration_values@_J@chrono@std@@SA_JXZ|
	DCD	imagerel |$unwind2$?zero@?$duration_values@_J@chrono@std@@SA_JXZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$?zero@?$duration_values@_J@chrono@std@@SA_JXZ| DCD 0x32a0000d
	DCD	0xa8fb02
	DCD	0xa802ff
	DCD	0xff
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z| DCD imagerel |??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z|
	DCD	imagerel |$unwind2$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z| DCD 0x33200026
	DCD	0xa8fb04
	DCD	0x8804ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata3$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| DCD imagerel |??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
	DCD	imagerel |$unwind4$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind4$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| DCD 0x43b00026
	DCD	0xa8fc05c7
	DCD	0x5ff0280
	DCD	0x3ef8088
	DCD	0xff
	DCD	imagerel |__CxxFrameHandler3|
	DCD	imagerel |__ehfuncinfo$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata4$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z| DCD imagerel |??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z|
	DCD	imagerel |$unwind6$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z|
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata5$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z| DCD imagerel |__unwind$6|
	DCD	imagerel |$unwind7$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind6$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z| DCD 0x43b00052
	DCD	0xa8fc07c7
	DCD	0x7ff0280
	DCD	0x3ef8088
	DCD	0xff
	DCD	imagerel |__CxxFrameHandler3|
	DCD	imagerel |__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind7$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z| DCD 0x10200005
	DCD	0xffd4
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata3$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| DCD imagerel |??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
	DCD	imagerel |$unwind4$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind4$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| DCD 0x43b00028
	DCD	0xa8fc05c7
	DCD	0x5ff0280
	DCD	0x3ef8088
	DCD	0xff
	DCD	imagerel |__CxxFrameHandler3|
	DCD	imagerel |__ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBA_NXZ| DCD imagerel |??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBA_NXZ|
	DCD	imagerel |$unwind2$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBA_NXZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBA_NXZ| DCD 0x33200011
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@0@Z| DCD imagerel |??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@0@Z|
	DCD	imagerel |$unwind2$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@0@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@0@Z| DCD 0x3320002e
	DCD	0xa8fb0c
	DCD	0x880cff04
	DCD	0xff05ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| DCD imagerel |??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|
	DCD	imagerel |$unwind2$??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| DCD 0x33200083
	DCD	0xa8fb16
	DCD	0x8816ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PABV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z| DCD imagerel |??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PABV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z|
	DCD	imagerel |$unwind2$??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PABV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PABV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z| DCD 0x3320004c
	DCD	0xa8fb10
	DCD	0x8810ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?O_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z| DCD imagerel |??$?O_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z|
	DCD	imagerel |$unwind2$??$?O_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?O_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z| DCD 0x33200016
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$00@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@ABV201@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z| DCD imagerel |??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$00@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@ABV201@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z|
	DCD	imagerel |$unwind2$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$00@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@ABV201@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$00@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@ABV201@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z| DCD 0x3320001c
	DCD	0xa8fb08
	DCD	0x8808ff04
	DCD	0xff05ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z| DCD imagerel |??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|
	DCD	imagerel |$unwind2$??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z| DCD 0x33200020
	DCD	0xa8fb08
	DCD	0x8808ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$00@std@@@12@@Z| DCD imagerel |??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$00@std@@@12@@Z|
	DCD	imagerel |$unwind2$??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$00@std@@@12@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$00@std@@@12@@Z| DCD 0x3320001f
	DCD	0xa8fb08
	DCD	0x8808ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata2$??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z| DCD imagerel |??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z|
	DCD	imagerel |$unwind3$??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind3$??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z| DCD 0x4430002a
	DCD	0xfb01e80b
	DCD	0xff0200a8
	DCD	0x8801e80b
	DCD	0xff03ef00
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffed
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$forward@A6AXXZ@std@@YAA6AXXZA6AXXZ@Z| DCD imagerel |??$forward@A6AXXZ@std@@YAA6AXXZA6AXXZ@Z|
	DCD	imagerel |$unwind2$??$forward@A6AXXZ@std@@YAA6AXXZA6AXXZ@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$forward@A6AXXZ@std@@YAA6AXXZA6AXXZ@Z| DCD 0x3320000d
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata4$??$_Start@A6AXXZ$$V@thread@std@@AAAXA6AXXZ@Z| DCD imagerel |??$_Start@A6AXXZ$$V@thread@std@@AAAXA6AXXZ@Z|
	DCD	imagerel |$unwind6$??$_Start@A6AXXZ$$V@thread@std@@AAAXA6AXXZ@Z|
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata5$??$_Start@A6AXXZ$$V@thread@std@@AAAXA6AXXZ@Z| DCD imagerel |__unwind$6|
	DCD	imagerel |$unwind7$??$_Start@A6AXXZ$$V@thread@std@@AAAXA6AXXZ@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind6$??$_Start@A6AXXZ$$V@thread@std@@AAAXA6AXXZ@Z| DCD 0x4430004e
	DCD	0xfc0cc702
	DCD	0xff0290a8
	DCD	0xef90880e
	DCD	0xff03
	DCD	imagerel |__CxxFrameHandler3|
	DCD	imagerel |__ehfuncinfo$??$_Start@A6AXXZ$$V@thread@std@@AAAXA6AXXZ@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind7$??$_Start@A6AXXZ$$V@thread@std@@AAAXA6AXXZ@Z| DCD 0x10200005
	DCD	0xffd4
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QAA@ABM@Z| DCD imagerel |??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QAA@ABM@Z|
	DCD	imagerel |$unwind2$??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QAA@ABM@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QAA@ABM@Z| DCD 0x33200013
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?M_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z| DCD imagerel |??$?M_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z|
	DCD	imagerel |$unwind2$??$?M_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?M_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z| DCD 0x3320003e
	DCD	0xa8fb10
	DCD	0x8810ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$00@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z| DCD imagerel |??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$00@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z|
	DCD	imagerel |$unwind2$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$00@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$00@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z| DCD 0x3320002e
	DCD	0xa8fb0c
	DCD	0x880cff04
	DCD	0xff05ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z| DCD imagerel |??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z|
	DCD	imagerel |$unwind2$??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z| DCD 0x3320003e
	DCD	0xa8fb10
	DCD	0x8810ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z| DCD imagerel |??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z|
	DCD	imagerel |$unwind2$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z| DCD 0x33200071
	DCD	0xa8fb14
	DCD	0x8814ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z| DCD imagerel |??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|
	DCD	imagerel |$unwind2$??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z| DCD 0x3320001f
	DCD	0xa8fb04
	DCD	0x8804ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAAUxtime@@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z| DCD imagerel |??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAAUxtime@@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z|
	DCD	imagerel |$unwind2$??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAAUxtime@@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAAUxtime@@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z| DCD 0x3320005f
	DCD	0xa8fb1a
	DCD	0x881aff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$make_unique@V?$tuple@P6AXXZ@std@@A6AXXZ$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@0@A6AXXZ@Z| DCD imagerel |??$make_unique@V?$tuple@P6AXXZ@std@@A6AXXZ$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@0@A6AXXZ@Z|
	DCD	imagerel |$unwind2$??$make_unique@V?$tuple@P6AXXZ@std@@A6AXXZ$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@0@A6AXXZ@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$make_unique@V?$tuple@P6AXXZ@std@@A6AXXZ$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@0@A6AXXZ@Z| DCD 0x33200035
	DCD	0xa8fb0a
	DCD	0x880aff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??R?$default_delete@V?$tuple@P6AXXZ@std@@@std@@QBAXPAV?$tuple@P6AXXZ@1@@Z| DCD imagerel |??R?$default_delete@V?$tuple@P6AXXZ@std@@@std@@QBAXPAV?$tuple@P6AXXZ@1@@Z|
	DCD	imagerel |$unwind2$??R?$default_delete@V?$tuple@P6AXXZ@std@@@std@@QBAXPAV?$tuple@P6AXXZ@1@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??R?$default_delete@V?$tuple@P6AXXZ@std@@@std@@QBAXPAV?$tuple@P6AXXZ@1@@Z| DCD 0x33200010
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@XZ| DCD imagerel |??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@XZ|
	DCD	imagerel |$unwind2$??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@XZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@XZ| DCD 0x33200017
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?get_deleter@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAAAAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ| DCD imagerel |?get_deleter@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAAAAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ|
	DCD	imagerel |$unwind2$?get_deleter@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAAAAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$?get_deleter@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAAAAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ| DCD 0x33200011
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QBAPAV?$tuple@P6AXXZ@2@XZ| DCD imagerel |?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QBAPAV?$tuple@P6AXXZ@2@XZ|
	DCD	imagerel |$unwind2$?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QBAPAV?$tuple@P6AXXZ@2@XZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QBAPAV?$tuple@P6AXXZ@2@XZ| DCD 0x3320000e
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAAPAV?$tuple@P6AXXZ@2@XZ| DCD imagerel |?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAAPAV?$tuple@P6AXXZ@2@XZ|
	DCD	imagerel |$unwind2$?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAAPAV?$tuple@P6AXXZ@2@XZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAAPAV?$tuple@P6AXXZ@2@XZ| DCD 0x33200014
	DCD	0xa8fb04
	DCD	0x8804ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAAAAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ| DCD imagerel |?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAAAAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ|
	DCD	imagerel |$unwind2$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAAAAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAAAAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ| DCD 0x3320000d
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@$$QAV01@@Z| DCD imagerel |??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@$$QAV01@@Z|
	DCD	imagerel |$unwind2$??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@$$QAV01@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@$$QAV01@@Z| DCD 0x33200020
	DCD	0xa8fb06
	DCD	0x8806ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata3$??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPAX@Z| DCD imagerel |??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPAX@Z|
	DCD	imagerel |$unwind4$??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPAX@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind4$??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPAX@Z| DCD 0x43b0002d
	DCD	0xa8fc09c7
	DCD	0x9ff0280
	DCD	0x3ef8088
	DCD	0xff
	DCD	imagerel |__CxxFrameHandler3|
	DCD	imagerel |__ehfuncinfo$??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPAX@Z|
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$exchange@PAV?$tuple@P6AXXZ@std@@$$T@std@@YAPAV?$tuple@P6AXXZ@0@AAPAV10@$$QA$$T@Z| DCD imagerel |??$exchange@PAV?$tuple@P6AXXZ@std@@$$T@std@@YAPAV?$tuple@P6AXXZ@0@AAPAV10@$$QA$$T@Z|
	DCD	imagerel |$unwind2$??$exchange@PAV?$tuple@P6AXXZ@std@@$$T@std@@YAPAV?$tuple@P6AXXZ@0@AAPAV10@$$QA$$T@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$exchange@PAV?$tuple@P6AXXZ@std@@$$T@std@@YAPAV?$tuple@P6AXXZ@0@AAPAV10@$$QA$$T@Z| DCD 0x33200014
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0_JU?$ratio@$00$0JIJGIA@@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z| DCD imagerel |??$?0_JU?$ratio@$00$0JIJGIA@@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z|
	DCD	imagerel |$unwind2$??$?0_JU?$ratio@$00$0JIJGIA@@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?0_JU?$ratio@$00$0JIJGIA@@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z| DCD 0x3320001f
	DCD	0xa8fb08
	DCD	0x8808ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NABV?$duration@NU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| DCD imagerel |??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NABV?$duration@NU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|
	DCD	imagerel |$unwind2$??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NABV?$duration@NU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NABV?$duration@NU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| DCD 0x33200032
	DCD	0xa8fb0c
	DCD	0x880cff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@@Z| DCD imagerel |??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@@Z|
	DCD	imagerel |$unwind2$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@@Z| DCD 0x33200053
	DCD	0xa8fb12
	DCD	0x8812ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| DCD imagerel |??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|
	DCD	imagerel |$unwind2$??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| DCD 0x33200060
	DCD	0xa8fb16
	DCD	0x8816ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata3$??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QAA@ABQ6AXXZ@Z| DCD imagerel |??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QAA@ABQ6AXXZ@Z|
	DCD	imagerel |$unwind4$??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QAA@ABQ6AXXZ@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind4$??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QAA@ABQ6AXXZ@Z| DCD 0x43b00018
	DCD	0xa8fc05c7
	DCD	0x5ff0280
	DCD	0x3ef8088
	DCD	0xff
	DCD	imagerel |__CxxFrameHandler3|
	DCD	imagerel |__ehfuncinfo$??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QAA@ABQ6AXXZ@Z|
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@PAV?$tuple@P6AXXZ@1@@Z| DCD imagerel |??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@PAV?$tuple@P6AXXZ@1@@Z|
	DCD	imagerel |$unwind2$??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@PAV?$tuple@P6AXXZ@1@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@PAV?$tuple@P6AXXZ@1@@Z| DCD 0x33200013
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$forward@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXXZ@std@@@0@AAU10@@Z| DCD imagerel |??$forward@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXXZ@std@@@0@AAU10@@Z|
	DCD	imagerel |$unwind2$??$forward@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXXZ@std@@@0@AAU10@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$forward@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXXZ@std@@@0@AAU10@@Z| DCD 0x3320000d
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAA@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6AXXZ@std@@@1@$$QAPAV?$tuple@P6AXXZ@1@@Z| DCD imagerel |??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAA@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6AXXZ@std@@@1@$$QAPAV?$tuple@P6AXXZ@1@@Z|
	DCD	imagerel |$unwind2$??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAA@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6AXXZ@std@@@1@$$QAPAV?$tuple@P6AXXZ@1@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAA@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6AXXZ@std@@@1@$$QAPAV?$tuple@P6AXXZ@1@@Z| DCD 0x33200018
	DCD	0xa8fb02
	DCD	0x8802ff04
	DCD	0xff05ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$get@$0A@P6AXXZ@std@@YAAAP6AXXZAAV?$tuple@P6AXXZ@0@@Z| DCD imagerel |??$get@$0A@P6AXXZ@std@@YAAAP6AXXZAAV?$tuple@P6AXXZ@0@@Z|
	DCD	imagerel |$unwind2$??$get@$0A@P6AXXZ@std@@YAAAP6AXXZAAV?$tuple@P6AXXZ@0@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$get@$0A@P6AXXZ@std@@YAAAP6AXXZAAV?$tuple@P6AXXZ@0@@Z| DCD 0x3320000d
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$move@AAP6AXXZ@std@@YA$$QAP6AXXZAAP6AXXZ@Z| DCD imagerel |??$move@AAP6AXXZ@std@@YA$$QAP6AXXZAAP6AXXZ@Z|
	DCD	imagerel |$unwind2$??$move@AAP6AXXZ@std@@YA$$QAP6AXXZAAP6AXXZ@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$move@AAP6AXXZ@std@@YA$$QAP6AXXZAAP6AXXZ@Z| DCD 0x3320000d
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$invoke@P6AXXZ@std@@YAX$$QAP6AXXZ@Z| DCD imagerel |??$invoke@P6AXXZ@std@@YAX$$QAP6AXXZ@Z|
	DCD	imagerel |$unwind2$??$invoke@P6AXXZ@std@@YAX$$QAP6AXXZ@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$invoke@P6AXXZ@std@@YAX$$QAP6AXXZ@Z| DCD 0x32a0000b
	DCD	0x200a8fb
	DCD	0xef0088ff
	DCD	0xff03
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z| DCD imagerel |??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z|
	DCD	imagerel |$unwind2$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z| DCD 0x33200071
	DCD	0xa8fb14
	DCD	0x8814ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0NU?$ratio@$00$00@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@NU?$ratio@$00$00@std@@@12@@Z| DCD imagerel |??$?0NU?$ratio@$00$00@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@NU?$ratio@$00$00@std@@@12@@Z|
	DCD	imagerel |$unwind2$??$?0NU?$ratio@$00$00@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@NU?$ratio@$00$00@std@@@12@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?0NU?$ratio@$00$00@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@NU?$ratio@$00$00@std@@@12@@Z| DCD 0x33200020
	DCD	0xa8fb08
	DCD	0x8808ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| DCD imagerel |??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|
	DCD	imagerel |$unwind2$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| DCD 0x33200020
	DCD	0xa8fb08
	DCD	0x8808ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0U_Exact_args_t@std@@ABQ6AXXZ$$V$0A@@?$tuple@P6AXXZ@std@@QAA@U_Exact_args_t@1@ABQ6AXXZ@Z| DCD imagerel |??$?0U_Exact_args_t@std@@ABQ6AXXZ$$V$0A@@?$tuple@P6AXXZ@std@@QAA@U_Exact_args_t@1@ABQ6AXXZ@Z|
	DCD	imagerel |$unwind2$??$?0U_Exact_args_t@std@@ABQ6AXXZ$$V$0A@@?$tuple@P6AXXZ@std@@QAA@U_Exact_args_t@1@ABQ6AXXZ@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?0U_Exact_args_t@std@@ABQ6AXXZ$$V$0A@@?$tuple@P6AXXZ@std@@QAA@U_Exact_args_t@1@ABQ6AXXZ@Z| DCD 0x3320001a
	DCD	0xa8fb04
	DCD	0x8804ff04
	DCD	0xff05ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0AAPAV?$tuple@P6AXXZ@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAA@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6AXXZ@1@@Z| DCD imagerel |??$?0AAPAV?$tuple@P6AXXZ@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAA@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6AXXZ@1@@Z|
	DCD	imagerel |$unwind2$??$?0AAPAV?$tuple@P6AXXZ@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAA@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6AXXZ@1@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?0AAPAV?$tuple@P6AXXZ@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAA@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6AXXZ@1@@Z| DCD 0x33200015
	DCD	0xa8fb02
	DCD	0x8802ff04
	DCD	0xff05ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$forward@PAV?$tuple@P6AXXZ@std@@@std@@YA$$QAPAV?$tuple@P6AXXZ@0@AAPAV10@@Z| DCD imagerel |??$forward@PAV?$tuple@P6AXXZ@std@@@std@@YA$$QAPAV?$tuple@P6AXXZ@0@AAPAV10@@Z|
	DCD	imagerel |$unwind2$??$forward@PAV?$tuple@P6AXXZ@std@@@std@@YA$$QAPAV?$tuple@P6AXXZ@0@AAPAV10@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$forward@PAV?$tuple@P6AXXZ@std@@@std@@YA$$QAPAV?$tuple@P6AXXZ@0@AAPAV10@@Z| DCD 0x3320000d
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@NU?$ratio@$00$00@std@@@01@@Z| DCD imagerel |??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@NU?$ratio@$00$00@std@@@01@@Z|
	DCD	imagerel |$unwind2$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@NU?$ratio@$00$00@std@@@01@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@NU?$ratio@$00$00@std@@@01@@Z| DCD 0x33200072
	DCD	0xa8fb1e
	DCD	0x881eff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| DCD imagerel |??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|
	DCD	imagerel |$unwind2$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| DCD 0x33200082
	DCD	0xa8fb20
	DCD	0x8820ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$forward@ABQ6AXXZ@std@@YAABQ6AXXZABQ6AXXZ@Z| DCD imagerel |??$forward@ABQ6AXXZ@std@@YAABQ6AXXZABQ6AXXZ@Z|
	DCD	imagerel |$unwind2$??$forward@ABQ6AXXZ@std@@YAABQ6AXXZABQ6AXXZ@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$forward@ABQ6AXXZ@std@@YAABQ6AXXZABQ6AXXZ@Z| DCD 0x3320000d
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAA@U_Exact_args_t@1@@Z| DCD imagerel |??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAA@U_Exact_args_t@1@@Z|
	DCD	imagerel |$unwind2$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAA@U_Exact_args_t@1@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAA@U_Exact_args_t@1@@Z| DCD 0x3320000d
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0ABQ6AXXZ@?$_Tuple_val@P6AXXZ@std@@QAA@ABQ6AXXZ@Z| DCD imagerel |??$?0ABQ6AXXZ@?$_Tuple_val@P6AXXZ@std@@QAA@ABQ6AXXZ@Z|
	DCD	imagerel |$unwind2$??$?0ABQ6AXXZ@?$_Tuple_val@P6AXXZ@std@@QAA@ABQ6AXXZ@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?0ABQ6AXXZ@?$_Tuple_val@P6AXXZ@std@@QAA@ABQ6AXXZ@Z| DCD 0x33200015
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$forward@AAPAV?$tuple@P6AXXZ@std@@@std@@YAAAPAV?$tuple@P6AXXZ@0@AAPAV10@@Z| DCD imagerel |??$forward@AAPAV?$tuple@P6AXXZ@std@@@std@@YAAAPAV?$tuple@P6AXXZ@0@AAPAV10@@Z|
	DCD	imagerel |$unwind2$??$forward@AAPAV?$tuple@P6AXXZ@std@@@std@@YAAAPAV?$tuple@P6AXXZ@0@AAPAV10@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$forward@AAPAV?$tuple@P6AXXZ@std@@@std@@YAAAPAV?$tuple@P6AXXZ@0@AAPAV10@@Z| DCD 0x3320000d
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABN@Z| DCD imagerel |??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABN@Z|
	DCD	imagerel |$unwind2$??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABN@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABN@Z| DCD 0x33200013
	DCD	0xa8fb02
	DCD	0x8802ff02
	DCD	0xff03ef00
;	COMDAT ??_C@_0M@LKHJFMHJ@Timer?5took?5@
.rdata	SEGMENT
|??_C@_0M@LKHJFMHJ@Timer?5took?5@| DCB "Timer took ", 0x0 ; `string'
;	COMDAT ??_C@_02EEKDFEKL@ms@
.rdata	SEGMENT
|??_C@_02EEKDFEKL@ms@| DCB "ms", 0x0			; `string'
;	COMDAT .rdata
.rdata	SEGMENT
|__ehfuncinfo$??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QAA@ABQ6AXXZ@Z| DCD 0x19930522
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x1
	DCD	imagerel |$ipstate2$??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QAA@ABQ6AXXZ@Z|
	DCD	0xffffffe0
	DCD	0x0
	DCD	0x5
|$ipstate2$??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QAA@ABQ6AXXZ@Z| DCD imagerel |$M4|
	DCD	0xffffffff
;	COMDAT .rdata
.rdata	SEGMENT
|__ehfuncinfo$??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPAX@Z| DCD 0x19930522
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x1
	DCD	imagerel |$ipstate2$??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPAX@Z|
	DCD	0xffffffe0
	DCD	0x0
	DCD	0x5
|$ipstate2$??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPAX@Z| DCD imagerel |$M4|
	DCD	0xffffffff
;	COMDAT .rdata
.rdata	SEGMENT
|__ehfuncinfo$??$_Start@A6AXXZ$$V@thread@std@@AAAXA6AXXZ@Z| DCD 0x19930522
	DCD	0x1
	DCD	imagerel |__unwindtable$??$_Start@A6AXXZ$$V@thread@std@@AAAXA6AXXZ@Z|
	DCD	0x0
	DCD	0x0
	DCD	0x3
	DCD	imagerel |$ipstate3$??$_Start@A6AXXZ$$V@thread@std@@AAAXA6AXXZ@Z|
	DCD	0xffffffe0
	DCD	0x0
	DCD	0x1
|__unwindtable$??$_Start@A6AXXZ$$V@thread@std@@AAAXA6AXXZ@Z| DCD 0xffffffff
	DCD	imagerel |__unwind$6|
|$ipstate3$??$_Start@A6AXXZ$$V@thread@std@@AAAXA6AXXZ@Z| DCD imagerel |$M13|
	DCD	0xffffffff
	DCD	imagerel |$M14|
	DCD	0x0
	DCD	imagerel |$M15|
	DCD	0xffffffff
;	COMDAT .rdata
.rdata	SEGMENT
|__ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| DCD 0x19930522
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x1
	DCD	imagerel |$ipstate2$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
	DCD	0xffffffe0
	DCD	0x0
	DCD	0x5
|$ipstate2$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| DCD imagerel |$M9|
	DCD	0xffffffff
;	COMDAT .rdata
.rdata	SEGMENT
|__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z| DCD 0x19930522
	DCD	0x1
	DCD	imagerel |__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z|
	DCD	0x0
	DCD	0x0
	DCD	0x3
	DCD	imagerel |$ipstate3$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z|
	DCD	0xffffffe0
	DCD	0x0
	DCD	0x1
|__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z| DCD 0xffffffff
	DCD	imagerel |__unwind$6|
|$ipstate3$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z| DCD imagerel |$M13|
	DCD	0xffffffff
	DCD	imagerel |$M14|
	DCD	0x0
	DCD	imagerel |$M15|
	DCD	0xffffffff
;	COMDAT .rdata
.rdata	SEGMENT
|__ehfuncinfo$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| DCD 0x19930522
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x1
	DCD	imagerel |$ipstate2$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
	DCD	0xffffffe0
	DCD	0x0
	DCD	0x5
|$ipstate2$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| DCD imagerel |$M7|
	DCD	0xffffffff
	.rdata
	%	2
|__ehfuncinfo$?DoWork@@YAXXZ| DCD 0x19930522
	DCD	0x1
	DCD	imagerel |__unwindtable$?DoWork@@YAXXZ|
	DCD	0x0
	DCD	0x0
	DCD	0x3
	DCD	imagerel |$ipstate3$?DoWork@@YAXXZ|
	DCD	0xffffffc8
	DCD	0x0
	DCD	0x1
|__unwindtable$?DoWork@@YAXXZ| DCD 0xffffffff
	DCD	imagerel |__unwind$5|
|$ipstate3$?DoWork@@YAXXZ| DCD imagerel |$M16|
	DCD	0xffffffff
	DCD	imagerel |$M17|
	DCD	0x0
	DCD	imagerel |$M18|
	DCD	0xffffffff
|__ehfuncinfo$?notmain@@YAHXZ| DCD 0x19930522
	DCD	0x1
	DCD	imagerel |__unwindtable$?notmain@@YAHXZ|
	DCD	0x0
	DCD	0x0
	DCD	0x3
	DCD	imagerel |$ipstate3$?notmain@@YAHXZ|
	DCD	0xffffffd8
	DCD	0x0
	DCD	0x1
|__unwindtable$?notmain@@YAHXZ| DCD 0xffffffff
	DCD	imagerel |__unwind$3|
|$ipstate3$?notmain@@YAHXZ| DCD imagerel |$M21|
	DCD	0xffffffff
	DCD	imagerel |$M22|
	DCD	0x0
	DCD	imagerel |$M23|
	DCD	0xffffffff
;	COMDAT .rdata
.rdata	SEGMENT
|__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z| DCD 0x19930522
	DCD	0x3
	DCD	imagerel |__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	DCD	0x1
	DCD	imagerel |__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	DCD	0x8
	DCD	imagerel |$ipstate4$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	DCD	0xffffffe0
	DCD	0x0
	DCD	0x1
|__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z| DCD 0xffffffff
	DCD	imagerel |__unwind$21|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
|__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z| DCD 0x1
	DCD	0x1
	DCD	0x2
	DCD	0x1
	DCD	imagerel |__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3|
|__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3| DCD 0x40
	DCD	0x0
	DCD	0x0
	DCD	imagerel |__catch$20|
	%	4
|$ipstate4$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z| DCD imagerel |$M46|
	DCD	0xffffffff
	DCD	imagerel |$M47|
	DCD	0x0
	DCD	imagerel |$M48|
	DCD	0x1
	DCD	imagerel |$M49|
	DCD	0x0
	DCD	imagerel |$M50|
	DCD	0xffffffff
	DCD	imagerel |$M51|
	DCD	0x0
	DCD	imagerel |$M52|
	DCD	0x2
	DCD	imagerel |$M53|
	DCD	0x0
;	COMDAT .rdata
.rdata	SEGMENT
|__ehfuncinfo$??1Timer@@QAA@XZ| DCD 0x19930522
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x1
	DCD	imagerel |$ipstate2$??1Timer@@QAA@XZ|
	DCD	0xffffffd0
	DCD	0x0
	DCD	0x5
|$ipstate2$??1Timer@@QAA@XZ| DCD imagerel |$M12|
	DCD	0xffffffff
;	COMDAT .rdata
.rdata	SEGMENT
|__ehfuncinfo$?get_id@this_thread@std@@YA?AVid@thread@2@XZ| DCD 0x19930522
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x1
	DCD	imagerel |$ipstate2$?get_id@this_thread@std@@YA?AVid@thread@2@XZ|
	DCD	0xffffffe0
	DCD	0x0
	DCD	0x5
|$ipstate2$?get_id@this_thread@std@@YA?AVid@thread@2@XZ| DCD imagerel |$M4|
	DCD	0xffffffff
; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABN@Z
.text$mn	SEGMENT

|??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABN@Z| PROC ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,0>

; 99   :             : _MyRep(static_cast<_Rep>(_Val)) {}

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|
	ldr         r2,[sp,#0x10]
	ldr         r3,[sp,#0x14]
	vldr        d0,[r3]
	vstr        d0,[r2]
	ldr         r3,[sp,#0x10]
	str         r3,[sp]
	ldr         r0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABN@Z|, std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\type_traits
;	COMDAT ??$forward@AAPAV?$tuple@P6AXXZ@std@@@std@@YAAAPAV?$tuple@P6AXXZ@0@AAPAV10@@Z
.text$mn	SEGMENT

|??$forward@AAPAV?$tuple@P6AXXZ@std@@@std@@YAAAPAV?$tuple@P6AXXZ@0@AAPAV10@@Z| PROC ; std::forward<std::tuple<void (__cdecl*)(void)> * &>

; 1426 : _NODISCARD _MSVC_INTRINSIC constexpr _Ty&& forward(remove_reference_t<_Ty>& _Arg) noexcept {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 1427 :     return static_cast<_Ty&&>(_Arg);

	ldr         r3,[sp,#0x10]
	str         r3,[sp]

; 1428 : }

	ldr         r0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$forward@AAPAV?$tuple@P6AXXZ@std@@@std@@YAAAPAV?$tuple@P6AXXZ@0@AAPAV10@@Z|, std::forward<std::tuple<void (__cdecl*)(void)> * &>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\tuple
;	COMDAT ??$?0ABQ6AXXZ@?$_Tuple_val@P6AXXZ@std@@QAA@ABQ6AXXZ@Z
.text$mn	SEGMENT

|??$?0ABQ6AXXZ@?$_Tuple_val@P6AXXZ@std@@QAA@ABQ6AXXZ@Z| PROC ; std::_Tuple_val<void (__cdecl*)(void)>::_Tuple_val<void (__cdecl*)(void)><void (__cdecl*const &)(void)>

; 144  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) {}

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|
	ldr         r0,[sp,#0x14]
	bl          |??$forward@ABQ6AXXZ@std@@YAABQ6AXXZABQ6AXXZ@Z|
	str         r0,[sp]
	ldr         r2,[sp,#0x10]
	ldr         r3,[sp]
	ldr         r3,[r3]
	str         r3,[r2]
	ldr         r3,[sp,#0x10]
	str         r3,[sp,#4]
	ldr         r0,[sp,#4]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$?0ABQ6AXXZ@?$_Tuple_val@P6AXXZ@std@@QAA@ABQ6AXXZ@Z|, std::_Tuple_val<void (__cdecl*)(void)>::_Tuple_val<void (__cdecl*)(void)><void (__cdecl*const &)(void)>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAA@U_Exact_args_t@1@@Z
.text$mn	SEGMENT

|??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAA@U_Exact_args_t@1@@Z| PROC ; std::tuple<>::tuple<><std::_Exact_args_t,0>

; 199  :     constexpr tuple(_Tag) noexcept /* strengthened */ {}

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|
	ldr         r3,[sp,#0x10]
	str         r3,[sp]
	ldr         r0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAA@U_Exact_args_t@1@@Z|, std::tuple<>::tuple<><std::_Exact_args_t,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\type_traits
;	COMDAT ??$forward@ABQ6AXXZ@std@@YAABQ6AXXZABQ6AXXZ@Z
.text$mn	SEGMENT

|??$forward@ABQ6AXXZ@std@@YAABQ6AXXZABQ6AXXZ@Z| PROC	; std::forward<void (__cdecl*const &)(void)>

; 1426 : _NODISCARD _MSVC_INTRINSIC constexpr _Ty&& forward(remove_reference_t<_Ty>& _Arg) noexcept {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 1427 :     return static_cast<_Ty&&>(_Arg);

	ldr         r3,[sp,#0x10]
	str         r3,[sp]

; 1428 : }

	ldr         r0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$forward@ABQ6AXXZ@std@@YAABQ6AXXZABQ6AXXZ@Z|, std::forward<void (__cdecl*const &)(void)>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
.text$mn	SEGMENT

|??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| PROC ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,0>

; 422  :         is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x80
|$M10|

; 423  :         // convert duration to another duration; truncate
; 424  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 425  : 
; 426  :         using _ToRep = typename _To::rep;
; 427  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 428  : 
; 429  :         constexpr bool _Num_is_one = _CF::num == 1;

	movs        r3,#1
	strb        r3,[sp]

; 430  :         constexpr bool _Den_is_one = _CF::den == 1;

	movs        r3,#1
	strb        r3,[sp,#1]

; 431  : 
; 432  :         if (_Den_is_one) {
; 433  :             if (_Num_is_one) {
; 434  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

	ldr         r0,[sp,#0x88]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x24]
	str         r0,[sp,#0x20]
	ldr         r0,[sp,#0x20]
	ldr         r1,[sp,#0x24]
	bl          __i64tod
	vstr        d0,[sp,#0x40]
	add         r1,sp,#0x40
	add         r0,sp,#0x60
	bl          |??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABN@Z|
	str         r0,[sp,#0x10]
	ldr         r3,[sp,#0x10]
	vldr        d0,[r3]
	vstr        d0,[sp,#8]
	b           |$LN1@duration_c|

; 435  :             } else {

	b           |$LN5@duration_c|

; 436  :                 return static_cast<_To>(

	ldr         r0,[sp,#0x88]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x2C]
	str         r0,[sp,#0x28]
	ldr         r0,[sp,#0x28]
	ldr         r1,[sp,#0x2C]
	bl          __i64tod
	vmov.f64    d1,d0
	vmov.f64    d0,#1
	vmul.f64    d0,d1,d0
	vstr        d0,[sp,#0x48]
	add         r1,sp,#0x48
	add         r0,sp,#0x68
	bl          |??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABN@Z|
	str         r0,[sp,#0x14]
	ldr         r3,[sp,#0x14]
	vldr        d0,[r3]
	vstr        d0,[sp,#8]
	b           |$LN1@duration_c|
|$LN5@duration_c|

; 437  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 438  :             }
; 439  :         } else {

	b           |$LN3@duration_c|

; 440  :             if (_Num_is_one) {
; 441  :                 return static_cast<_To>(

	ldr         r0,[sp,#0x88]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x34]
	str         r0,[sp,#0x30]
	ldr         r0,[sp,#0x30]
	ldr         r1,[sp,#0x34]
	bl          __i64tod
	vmov.f64    d1,d0
	vmov.f64    d0,#1
	vdiv.f64    d0,d1,d0
	vstr        d0,[sp,#0x50]
	add         r1,sp,#0x50
	add         r0,sp,#0x70
	bl          |??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABN@Z|
	str         r0,[sp,#0x18]
	ldr         r3,[sp,#0x18]
	vldr        d0,[r3]
	vstr        d0,[sp,#8]
	b           |$LN1@duration_c|

; 442  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 443  :             } else {

	b           |$LN7@duration_c|

; 444  :                 return static_cast<_To>(static_cast<_ToRep>(

	ldr         r0,[sp,#0x88]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x3C]
	str         r0,[sp,#0x38]
	ldr         r0,[sp,#0x38]
	ldr         r1,[sp,#0x3C]
	bl          __i64tod
	vmov.f64    d1,d0
	vmov.f64    d0,#1
	vmul.f64    d1,d1,d0
	vmov.f64    d0,#1
	vdiv.f64    d0,d1,d0
	vstr        d0,[sp,#0x58]
	add         r1,sp,#0x58
	add         r0,sp,#0x78
	bl          |??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABN@Z|
	str         r0,[sp,#0x1C]
	ldr         r3,[sp,#0x1C]
	vldr        d0,[r3]
	vstr        d0,[sp,#8]
|$LN7@duration_c|
|$LN3@duration_c|
|$LN1@duration_c|

; 445  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 446  :             }
; 447  :         }
; 448  :     }

	vldr        d0,[sp,#8]
|$M9|
	add         sp,sp,#0x80
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M11|

	ENDP  ; |??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|, std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@NU?$ratio@$00$00@std@@@01@@Z
.text$mn	SEGMENT

|??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@NU?$ratio@$00$00@std@@@01@@Z| PROC ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,double,std::ratio<1,1>,0>

; 422  :         is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x78
|$M12|

; 423  :         // convert duration to another duration; truncate
; 424  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 425  : 
; 426  :         using _ToRep = typename _To::rep;
; 427  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 428  : 
; 429  :         constexpr bool _Num_is_one = _CF::num == 1;

	movs        r3,#0
	strb        r3,[sp]

; 430  :         constexpr bool _Den_is_one = _CF::den == 1;

	movs        r3,#1
	strb        r3,[sp,#1]

; 431  : 
; 432  :         if (_Den_is_one) {
; 433  :             if (_Num_is_one) {

	b           |$LN4@duration_c|

; 434  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

	ldr         r0,[sp,#0x80]
	bl          |?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QBANXZ|
	vstr        d0,[sp,#0x20]
	add         r1,sp,#0x20
	add         r0,sp,#0x58
	bl          |??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABN@Z|
	str         r0,[sp,#0x10]
	ldr         r3,[sp,#0x10]
	vldr        d0,[r3]
	vstr        d0,[sp,#8]
	b           |$LN1@duration_c|

; 435  :             } else {

	b           |$LN5@duration_c|
|$LN4@duration_c|

; 436  :                 return static_cast<_To>(

	ldr         r0,[sp,#0x80]
	bl          |?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QBANXZ|
	vstr        d0,[sp,#0x28]
	vldr        d1,[sp,#0x28]
	vldr        d0,|$LN11@duration_c|		; 1000000000
	vmul.f64    d0,d1,d0
	vstr        d0,[sp,#0x30]
	add         r1,sp,#0x30
	add         r0,sp,#0x60
	bl          |??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABN@Z|
	str         r0,[sp,#0x14]
	ldr         r3,[sp,#0x14]
	vldr        d0,[r3]
	vstr        d0,[sp,#8]
	b           |$LN1@duration_c|
|$LN5@duration_c|

; 437  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 438  :             }
; 439  :         } else {

	b           |$LN3@duration_c|

; 440  :             if (_Num_is_one) {

	b           |$LN6@duration_c|

; 441  :                 return static_cast<_To>(

	ldr         r0,[sp,#0x80]
	bl          |?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QBANXZ|
	vstr        d0,[sp,#0x38]
	vldr        d1,[sp,#0x38]
	vmov.f64    d0,#1
	vdiv.f64    d0,d1,d0
	vstr        d0,[sp,#0x40]
	add         r1,sp,#0x40
	add         r0,sp,#0x68
	bl          |??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABN@Z|
	str         r0,[sp,#0x18]
	ldr         r3,[sp,#0x18]
	vldr        d0,[r3]
	vstr        d0,[sp,#8]
	b           |$LN1@duration_c|

; 442  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 443  :             } else {

	b           |$LN7@duration_c|
|$LN6@duration_c|

; 444  :                 return static_cast<_To>(static_cast<_ToRep>(

	ldr         r0,[sp,#0x80]
	bl          |?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QBANXZ|
	vstr        d0,[sp,#0x48]
	vldr        d1,[sp,#0x48]
	vldr        d0,|$LN11@duration_c|		; 1000000000
	vmul.f64    d1,d1,d0
	vmov.f64    d0,#1
	vdiv.f64    d0,d1,d0
	vstr        d0,[sp,#0x50]
	add         r1,sp,#0x50
	add         r0,sp,#0x70
	bl          |??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABN@Z|
	str         r0,[sp,#0x1C]
	ldr         r3,[sp,#0x1C]
	vldr        d0,[r3]
	vstr        d0,[sp,#8]
|$LN7@duration_c|
|$LN3@duration_c|
|$LN1@duration_c|

; 445  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 446  :             }
; 447  :         }
; 448  :     }

	vldr        d0,[sp,#8]
|$M9|
	add         sp,sp,#0x78
	pop         {r11}
	ldr         pc,[sp],#0xC
|$LN10@duration_c|
|$LN11@duration_c|
	DCD         0x0
	DCD         0x41cdcd65
|$M13|

	ENDP  ; |??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@NU?$ratio@$00$00@std@@@01@@Z|, std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,double,std::ratio<1,1>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\type_traits
;	COMDAT ??$forward@PAV?$tuple@P6AXXZ@std@@@std@@YA$$QAPAV?$tuple@P6AXXZ@0@AAPAV10@@Z
.text$mn	SEGMENT

|??$forward@PAV?$tuple@P6AXXZ@std@@@std@@YA$$QAPAV?$tuple@P6AXXZ@0@AAPAV10@@Z| PROC ; std::forward<std::tuple<void (__cdecl*)(void)> *>

; 1426 : _NODISCARD _MSVC_INTRINSIC constexpr _Ty&& forward(remove_reference_t<_Ty>& _Arg) noexcept {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 1427 :     return static_cast<_Ty&&>(_Arg);

	ldr         r3,[sp,#0x10]
	str         r3,[sp]

; 1428 : }

	ldr         r0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$forward@PAV?$tuple@P6AXXZ@std@@@std@@YA$$QAPAV?$tuple@P6AXXZ@0@AAPAV10@@Z|, std::forward<std::tuple<void (__cdecl*)(void)> *>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$?0AAPAV?$tuple@P6AXXZ@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAA@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6AXXZ@1@@Z
.text$mn	SEGMENT

|??$?0AAPAV?$tuple@P6AXXZ@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAA@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6AXXZ@1@@Z| PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1><std::tuple<void (__cdecl*)(void)> * &>

; 1375 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push        {r0-r3}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|
	ldr         r0,[sp,#0x18]
	bl          |??$forward@AAPAV?$tuple@P6AXXZ@std@@@std@@YAAAPAV?$tuple@P6AXXZ@0@AAPAV10@@Z|
	str         r0,[sp]
	ldr         r2,[sp,#0x10]
	ldr         r3,[sp]
	ldr         r3,[r3]
	str         r3,[r2]
	ldr         r3,[sp,#0x10]
	str         r3,[sp,#4]
	ldr         r0,[sp,#4]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0x14
|$M5|

	ENDP  ; |??$?0AAPAV?$tuple@P6AXXZ@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAA@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6AXXZ@1@@Z|, std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1><std::tuple<void (__cdecl*)(void)> * &>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@ABQ6AXXZ$$V$0A@@?$tuple@P6AXXZ@std@@QAA@U_Exact_args_t@1@ABQ6AXXZ@Z
.text$mn	SEGMENT

|??$?0U_Exact_args_t@std@@ABQ6AXXZ$$V$0A@@?$tuple@P6AXXZ@std@@QAA@U_Exact_args_t@1@ABQ6AXXZ@Z| PROC ; std::tuple<void (__cdecl*)(void)>::tuple<void (__cdecl*)(void)><std::_Exact_args_t,void (__cdecl*const &)(void),0>

; 239  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...), _Myfirst(_STD forward<_This2>(_This_arg)) {}

	push        {r0-r3}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x10
|$M4|
	ldrb        r1,[sp]
	ldr         r0,[sp,#0x18]
	bl          |??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAA@U_Exact_args_t@1@@Z|
	ldr         r0,[sp,#0x20]
	bl          |??$forward@ABQ6AXXZ@std@@YAABQ6AXXZABQ6AXXZ@Z|
	str         r0,[sp,#4]
	ldr         r1,[sp,#4]
	ldr         r0,[sp,#0x18]
	bl          |??$?0ABQ6AXXZ@?$_Tuple_val@P6AXXZ@std@@QAA@ABQ6AXXZ@Z|
	ldr         r3,[sp,#0x18]
	str         r3,[sp,#8]
	ldr         r0,[sp,#8]
|$M3|
	add         sp,sp,#0x10
	pop         {r11}
	ldr         pc,[sp],#0x14
|$M5|

	ENDP  ; |??$?0U_Exact_args_t@std@@ABQ6AXXZ$$V$0A@@?$tuple@P6AXXZ@std@@QAA@U_Exact_args_t@1@ABQ6AXXZ@Z|, std::tuple<void (__cdecl*)(void)>::tuple<void (__cdecl*)(void)><std::_Exact_args_t,void (__cdecl*const &)(void),0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
.text$mn	SEGMENT

|??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| PROC ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000000000>,0>

; 107  :             : _MyRep(_CHRONO duration_cast<duration>(_Dur).count()) {}

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x20
|$M4|
	ldr         r0,[sp,#0x2C]
	bl          |??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|
	vstr        d0,[sp,#8]
	vldr        d0,[sp,#8]
	vstr        d0,[sp,#0x10]
	add         r0,sp,#0x10
	bl          |?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBANXZ|
	vstr        d0,[sp,#0x18]
	ldr         r3,[sp,#0x28]
	vldr        d0,[sp,#0x18]
	vstr        d0,[r3]
	ldr         r3,[sp,#0x28]
	str         r3,[sp]
	ldr         r0,[sp]
|$M3|
	add         sp,sp,#0x20
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|, std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000000000>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0NU?$ratio@$00$00@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@NU?$ratio@$00$00@std@@@12@@Z
.text$mn	SEGMENT

|??$?0NU?$ratio@$00$00@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@NU?$ratio@$00$00@std@@@12@@Z| PROC ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,std::ratio<1,1>,0>

; 107  :             : _MyRep(_CHRONO duration_cast<duration>(_Dur).count()) {}

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x20
|$M4|
	ldr         r0,[sp,#0x2C]
	bl          |??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@NU?$ratio@$00$00@std@@@01@@Z|
	vstr        d0,[sp,#8]
	vldr        d0,[sp,#8]
	vstr        d0,[sp,#0x10]
	add         r0,sp,#0x10
	bl          |?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBANXZ|
	vstr        d0,[sp,#0x18]
	ldr         r3,[sp,#0x28]
	vldr        d0,[sp,#0x18]
	vstr        d0,[r3]
	ldr         r3,[sp,#0x28]
	str         r3,[sp]
	ldr         r0,[sp]
|$M3|
	add         sp,sp,#0x20
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$?0NU?$ratio@$00$00@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@NU?$ratio@$00$00@std@@@12@@Z|, std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,std::ratio<1,1>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z
.text$mn	SEGMENT

|??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z| PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000>,0>

; 422  :         is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x50
|$M10|

; 423  :         // convert duration to another duration; truncate
; 424  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 425  : 
; 426  :         using _ToRep = typename _To::rep;
; 427  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 428  : 
; 429  :         constexpr bool _Num_is_one = _CF::num == 1;

	movs        r3,#0
	strb        r3,[sp]

; 430  :         constexpr bool _Den_is_one = _CF::den == 1;

	movs        r3,#1
	strb        r3,[sp,#1]

; 431  : 
; 432  :         if (_Den_is_one) {
; 433  :             if (_Num_is_one) {

	b           |$LN4@duration_c|

; 434  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

	ldr         r0,[sp,#0x5C]
	bl          |?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x14]
	str         r0,[sp,#0x10]
	ldr         r3,[sp,#0x10]
	str         r3,[sp,#0x30]
	ldr         r3,[sp,#0x14]
	str         r3,[sp,#0x34]
	add         r1,sp,#0x30
	ldr         r0,[sp,#0x58]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z|
	ldr         r3,[sp,#0x58]
	str         r3,[sp,#4]
	b           |$LN1@duration_c|

; 435  :             } else {

	b           |$LN5@duration_c|
|$LN4@duration_c|

; 436  :                 return static_cast<_To>(

	ldr         r0,[sp,#0x5C]
	bl          |?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x1C]
	str         r0,[sp,#0x18]
	ldr         r3,[sp,#0x18]
	ldr         r1,[sp,#0x1C]
	str         r3,[sp,#8]
	ldr         r2,[sp,#8]
	movs        r3,#0
	mul         r2,r2,r3
	movs        r3,#0x64
	mul         r3,r1,r3
	adds        r1,r2,r3
	ldr         r2,[sp,#8]
	movs        r3,#0x64
	umull       r2,r3,r2,r3
	add         r3,r3,r1
	str         r2,[sp,#0x38]
	str         r3,[sp,#0x3C]
	add         r1,sp,#0x38
	ldr         r0,[sp,#0x58]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z|
	ldr         r3,[sp,#0x58]
	str         r3,[sp,#4]
	b           |$LN1@duration_c|
|$LN5@duration_c|

; 437  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 438  :             }
; 439  :         } else {

	b           |$LN3@duration_c|

; 440  :             if (_Num_is_one) {

	b           |$LN6@duration_c|

; 441  :                 return static_cast<_To>(

	ldr         r0,[sp,#0x5C]
	bl          |?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x24]
	str         r0,[sp,#0x20]
	ldr         r3,[sp,#0x20]
	str         r3,[sp,#0x40]
	ldr         r3,[sp,#0x24]
	str         r3,[sp,#0x44]
	add         r1,sp,#0x40
	ldr         r0,[sp,#0x58]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z|
	ldr         r3,[sp,#0x58]
	str         r3,[sp,#4]
	b           |$LN1@duration_c|

; 442  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 443  :             } else {

	b           |$LN7@duration_c|
|$LN6@duration_c|

; 444  :                 return static_cast<_To>(static_cast<_ToRep>(

	ldr         r0,[sp,#0x5C]
	bl          |?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x2C]
	str         r0,[sp,#0x28]
	ldr         r3,[sp,#0x28]
	ldr         r1,[sp,#0x2C]
	str         r3,[sp,#0xC]
	ldr         r2,[sp,#0xC]
	movs        r3,#0
	mul         r2,r2,r3
	movs        r3,#0x64
	mul         r3,r1,r3
	adds        r1,r2,r3
	ldr         r2,[sp,#0xC]
	movs        r3,#0x64
	umull       r2,r3,r2,r3
	add         r3,r3,r1
	str         r2,[sp,#0x48]
	str         r3,[sp,#0x4C]
	add         r1,sp,#0x48
	ldr         r0,[sp,#0x58]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z|
	ldr         r3,[sp,#0x58]
	str         r3,[sp,#4]
|$LN7@duration_c|
|$LN3@duration_c|
|$LN1@duration_c|

; 445  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 446  :             }
; 447  :         }
; 448  :     }

	ldr         r0,[sp,#4]
|$M9|
	add         sp,sp,#0x50
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M11|

	ENDP  ; |??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z|, std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\type_traits
;	COMDAT ??$invoke@P6AXXZ@std@@YAX$$QAP6AXXZ@Z
.text$mn	SEGMENT

|??$invoke@P6AXXZ@std@@YAX$$QAP6AXXZ@Z| PROC		; std::invoke<void (__cdecl*)(void)>

; 1563 :     -> decltype(static_cast<_Callable&&>(_Obj)()) {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
|$M4|

; 1564 :     return static_cast<_Callable&&>(_Obj)();

	ldr         r3,[sp,#8]
	ldr         r3,[r3]
	blx         r3
|$M3|

; 1565 : }

	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$invoke@P6AXXZ@std@@YAX$$QAP6AXXZ@Z|, std::invoke<void (__cdecl*)(void)>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\type_traits
;	COMDAT ??$move@AAP6AXXZ@std@@YA$$QAP6AXXZAAP6AXXZ@Z
.text$mn	SEGMENT

|??$move@AAP6AXXZ@std@@YA$$QAP6AXXZAAP6AXXZ@Z| PROC	; std::move<void (__cdecl*&)(void)>

; 1437 : _NODISCARD _MSVC_INTRINSIC constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 1438 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	ldr         r3,[sp,#0x10]
	str         r3,[sp]

; 1439 : }

	ldr         r0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$move@AAP6AXXZ@std@@YA$$QAP6AXXZAAP6AXXZ@Z|, std::move<void (__cdecl*&)(void)>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\tuple
;	COMDAT ??$get@$0A@P6AXXZ@std@@YAAAP6AXXZAAV?$tuple@P6AXXZ@0@@Z
.text$mn	SEGMENT

|??$get@$0A@P6AXXZ@std@@YAAAP6AXXZAAV?$tuple@P6AXXZ@0@@Z| PROC ; std::get<0,void (__cdecl*)(void)>

; 742  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 743  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 744  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

	ldr         r3,[sp,#0x10]
	str         r3,[sp]

; 745  : }

	ldr         r0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$get@$0A@P6AXXZ@std@@YAAAP6AXXZAAV?$tuple@P6AXXZ@0@@Z|, std::get<0,void (__cdecl*)(void)>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAA@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6AXXZ@std@@@1@$$QAPAV?$tuple@P6AXXZ@1@@Z
.text$mn	SEGMENT

|??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAA@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6AXXZ@std@@@1@$$QAPAV?$tuple@P6AXXZ@1@@Z| PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1><std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *>

; 1380 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push        {r0-r3}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|
	ldr         r0,[sp,#0x18]
	bl          |??$forward@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXXZ@std@@@0@AAU10@@Z|
	ldr         r0,[sp,#0x1C]
	bl          |??$forward@PAV?$tuple@P6AXXZ@std@@@std@@YA$$QAPAV?$tuple@P6AXXZ@0@AAPAV10@@Z|
	str         r0,[sp]
	ldr         r2,[sp,#0x10]
	ldr         r3,[sp]
	ldr         r3,[r3]
	str         r3,[r2]
	ldr         r3,[sp,#0x10]
	str         r3,[sp,#4]
	ldr         r0,[sp,#4]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0x14
|$M5|

	ENDP  ; |??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAA@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6AXXZ@std@@@1@$$QAPAV?$tuple@P6AXXZ@1@@Z|, std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1><std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\type_traits
;	COMDAT ??$forward@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXXZ@std@@@0@AAU10@@Z
.text$mn	SEGMENT

|??$forward@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXXZ@std@@@0@AAU10@@Z| PROC ; std::forward<std::default_delete<std::tuple<void (__cdecl*)(void)> > >

; 1426 : _NODISCARD _MSVC_INTRINSIC constexpr _Ty&& forward(remove_reference_t<_Ty>& _Arg) noexcept {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 1427 :     return static_cast<_Ty&&>(_Arg);

	ldr         r3,[sp,#0x10]
	str         r3,[sp]

; 1428 : }

	ldr         r0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$forward@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXXZ@std@@@0@AAU10@@Z|, std::forward<std::default_delete<std::tuple<void (__cdecl*)(void)> > >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory
;	COMDAT ??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@PAV?$tuple@P6AXXZ@1@@Z
.text$mn	SEGMENT

|??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@PAV?$tuple@P6AXXZ@1@@Z| PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > ><std::default_delete<std::tuple<void (__cdecl*)(void)> >,0>

; 3119 :     _CONSTEXPR23 explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t{}, _Ptr) {}

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|
	add         r2,sp,#0x14
	ldrb        r1,[sp]
	ldr         r0,[sp,#0x10]
	bl          |??$?0AAPAV?$tuple@P6AXXZ@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAA@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6AXXZ@1@@Z|
	ldr         r3,[sp,#0x10]
	str         r3,[sp,#4]
	ldr         r0,[sp,#4]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@PAV?$tuple@P6AXXZ@1@@Z|, std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > ><std::default_delete<std::tuple<void (__cdecl*)(void)> >,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\tuple
;	COMDAT ??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QAA@ABQ6AXXZ@Z
.text$mn	SEGMENT

|??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QAA@ABQ6AXXZ@Z| PROC ; std::tuple<void (__cdecl*)(void)>::tuple<void (__cdecl*)(void)><void (__cdecl*)(void),0>

; 277  :         : tuple(_Exact_args_t{}, _This_arg, _Rest_arg...) {}

|$M4|
	push        {r0,r1}
	push        {r7,r11,lr}
	add         r11,sp,#4
	sub         sp,sp,#0x14
	mov         r7,sp
|$M5|
	mvn         r3,#1
	strd        r3,r3,[r7,#8]
	ldr         r2,[r7,#0x24]
	ldrb        r1,[r7]
	ldr         r0,[r7,#0x20]
	bl          |??$?0U_Exact_args_t@std@@ABQ6AXXZ$$V$0A@@?$tuple@P6AXXZ@std@@QAA@U_Exact_args_t@1@ABQ6AXXZ@Z|
	ldr         r3,[r7,#0x20]
	str         r3,[r7,#4]
	ldr         r0,[r7,#4]
|$M3|
	add         sp,sp,#0x14
	pop         {r7,r11}
	ldr         pc,[sp],#0xC
|$M6|

	ENDP  ; |??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QAA@ABQ6AXXZ@Z|, std::tuple<void (__cdecl*)(void)>::tuple<void (__cdecl*)(void)><void (__cdecl*)(void),0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
.text$mn	SEGMENT

|??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,0>

; 422  :         is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x58
|$M12|

; 423  :         // convert duration to another duration; truncate
; 424  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 425  : 
; 426  :         using _ToRep = typename _To::rep;
; 427  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 428  : 
; 429  :         constexpr bool _Num_is_one = _CF::num == 1;

	movs        r3,#1
	strb        r3,[sp]

; 430  :         constexpr bool _Den_is_one = _CF::den == 1;

	movs        r3,#0
	strb        r3,[sp,#1]

; 431  : 
; 432  :         if (_Den_is_one) {

	b           |$LN2@duration_c|

; 433  :             if (_Num_is_one) {
; 434  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

	ldr         r0,[sp,#0x64]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0xC]
	str         r0,[sp,#8]
	ldr         r3,[sp,#8]
	str         r3,[sp,#0x28]
	ldr         r3,[sp,#0xC]
	str         r3,[sp,#0x2C]
	add         r1,sp,#0x28
	ldr         r0,[sp,#0x60]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@AB_J@Z|
	ldr         r3,[sp,#0x60]
	str         r3,[sp,#4]
	b           |$LN1@duration_c|

; 435  :             } else {

	b           |$LN5@duration_c|

; 436  :                 return static_cast<_To>(

	ldr         r0,[sp,#0x64]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x14]
	str         r0,[sp,#0x10]
	ldr         r3,[sp,#0x10]
	str         r3,[sp,#0x30]
	ldr         r3,[sp,#0x14]
	str         r3,[sp,#0x34]
	add         r1,sp,#0x30
	ldr         r0,[sp,#0x60]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@AB_J@Z|
	ldr         r3,[sp,#0x60]
	str         r3,[sp,#4]
	b           |$LN1@duration_c|
|$LN5@duration_c|

; 437  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 438  :             }
; 439  :         } else {

	b           |$LN3@duration_c|
|$LN2@duration_c|

; 440  :             if (_Num_is_one) {
; 441  :                 return static_cast<_To>(

	ldr         r0,[sp,#0x64]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x1C]
	str         r0,[sp,#0x18]
	ldr         r0,|$LN11@duration_c|		; =0x3b9aca00
	movs        r1,#0
	ldr         r2,[sp,#0x18]
	ldr         r3,[sp,#0x1C]
	bl          __rt_sdiv64
	str         r3,[sp,#0x4C]
	str         r2,[sp,#0x48]
	str         r0,[sp,#0x38]
	str         r1,[sp,#0x3C]
	add         r1,sp,#0x38
	ldr         r0,[sp,#0x60]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@AB_J@Z|
	ldr         r3,[sp,#0x60]
	str         r3,[sp,#4]
	b           |$LN1@duration_c|

; 442  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 443  :             } else {

	b           |$LN7@duration_c|

; 444  :                 return static_cast<_To>(static_cast<_ToRep>(

	ldr         r0,[sp,#0x64]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x24]
	str         r0,[sp,#0x20]
	ldr         r0,|$LN11@duration_c|		; =0x3b9aca00
	movs        r1,#0
	ldr         r2,[sp,#0x20]
	ldr         r3,[sp,#0x24]
	bl          __rt_sdiv64
	str         r3,[sp,#0x54]
	str         r2,[sp,#0x50]
	str         r0,[sp,#0x40]
	str         r1,[sp,#0x44]
	add         r1,sp,#0x40
	ldr         r0,[sp,#0x60]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@AB_J@Z|
	ldr         r3,[sp,#0x60]
	str         r3,[sp,#4]
|$LN7@duration_c|
|$LN3@duration_c|
|$LN1@duration_c|

; 445  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 446  :             }
; 447  :         }
; 448  :     }

	ldr         r0,[sp,#4]
|$M9|
	add         sp,sp,#0x58
	pop         {r11}
	ldr         pc,[sp],#0xC
|$LN10@duration_c|
|$LN11@duration_c|
	DCD         0x3b9aca00
|$M13|

	ENDP  ; |??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|, std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@@Z
.text$mn	SEGMENT

|??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@@Z| PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,0>

; 422  :         is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x48
|$M10|

; 423  :         // convert duration to another duration; truncate
; 424  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 425  : 
; 426  :         using _ToRep = typename _To::rep;
; 427  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 428  : 
; 429  :         constexpr bool _Num_is_one = _CF::num == 1;

	movs        r3,#1
	strb        r3,[sp]

; 430  :         constexpr bool _Den_is_one = _CF::den == 1;

	movs        r3,#1
	strb        r3,[sp,#1]

; 431  : 
; 432  :         if (_Den_is_one) {
; 433  :             if (_Num_is_one) {
; 434  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

	ldr         r0,[sp,#0x54]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0xC]
	str         r0,[sp,#8]
	ldr         r3,[sp,#8]
	str         r3,[sp,#0x28]
	ldr         r3,[sp,#0xC]
	str         r3,[sp,#0x2C]
	add         r1,sp,#0x28
	ldr         r0,[sp,#0x50]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z|
	ldr         r3,[sp,#0x50]
	str         r3,[sp,#4]
	b           |$LN1@duration_c|

; 435  :             } else {

	b           |$LN5@duration_c|

; 436  :                 return static_cast<_To>(

	ldr         r0,[sp,#0x54]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x14]
	str         r0,[sp,#0x10]
	ldr         r3,[sp,#0x10]
	str         r3,[sp,#0x30]
	ldr         r3,[sp,#0x14]
	str         r3,[sp,#0x34]
	add         r1,sp,#0x30
	ldr         r0,[sp,#0x50]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z|
	ldr         r3,[sp,#0x50]
	str         r3,[sp,#4]
	b           |$LN1@duration_c|
|$LN5@duration_c|

; 437  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 438  :             }
; 439  :         } else {

	b           |$LN3@duration_c|

; 440  :             if (_Num_is_one) {
; 441  :                 return static_cast<_To>(

	ldr         r0,[sp,#0x54]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x1C]
	str         r0,[sp,#0x18]
	ldr         r3,[sp,#0x18]
	str         r3,[sp,#0x38]
	ldr         r3,[sp,#0x1C]
	str         r3,[sp,#0x3C]
	add         r1,sp,#0x38
	ldr         r0,[sp,#0x50]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z|
	ldr         r3,[sp,#0x50]
	str         r3,[sp,#4]
	b           |$LN1@duration_c|

; 442  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 443  :             } else {

	b           |$LN7@duration_c|

; 444  :                 return static_cast<_To>(static_cast<_ToRep>(

	ldr         r0,[sp,#0x54]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x24]
	str         r0,[sp,#0x20]
	ldr         r3,[sp,#0x20]
	str         r3,[sp,#0x40]
	ldr         r3,[sp,#0x24]
	str         r3,[sp,#0x44]
	add         r1,sp,#0x40
	ldr         r0,[sp,#0x50]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z|
	ldr         r3,[sp,#0x50]
	str         r3,[sp,#4]
|$LN7@duration_c|
|$LN3@duration_c|
|$LN1@duration_c|

; 445  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 446  :             }
; 447  :         }
; 448  :     }

	ldr         r0,[sp,#4]
|$M9|
	add         sp,sp,#0x48
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M11|

	ENDP  ; |??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@@Z|, std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NABV?$duration@NU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
.text$mn	SEGMENT

|??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NABV?$duration@NU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| PROC ; std::chrono::operator<<double,std::ratio<1,1>,__int64,std::ratio<1,1000000000> >

; 383  :             is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x30
|$M6|

; 384  :         using _CT = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 385  :         return _CT(_Left).count() < _CT(_Right).count();

	ldr         r1,[sp,#0x38]
	add         r0,sp,#0x20
	bl          |??$?0NU?$ratio@$00$00@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@NU?$ratio@$00$00@std@@@12@@Z|
	str         r0,[sp,#4]
	ldr         r0,[sp,#4]
	bl          |?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBANXZ|
	vstr        d0,[sp,#0x10]
	ldr         r1,[sp,#0x3C]
	add         r0,sp,#0x28
	bl          |??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|
	str         r0,[sp,#8]
	ldr         r0,[sp,#8]
	bl          |?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBANXZ|
	vstr        d0,[sp,#0x18]
	vldr        d1,[sp,#0x10]
	vldr        d0,[sp,#0x18]
	vcmpe.f64   d1,d0
	vmrs        apsr_nzcv,fpscr
	bcs         |$LN3@operator|
	movs        r3,#1
	str         r3,[sp]
	b           |$LN4@operator|
|$LN3@operator|
	movs        r3,#0
	str         r3,[sp]
|$LN4@operator|
	ldr         r3,[sp]
	uxtb        r3,r3
	strb        r3,[sp,#0xC]

; 386  :     }

	ldrb        r0,[sp,#0xC]
|$M5|
	add         sp,sp,#0x30
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M7|

	ENDP  ; |??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NABV?$duration@NU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|, std::chrono::operator<<double,std::ratio<1,1>,__int64,std::ratio<1,1000000000> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0_JU?$ratio@$00$0JIJGIA@@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z
.text$mn	SEGMENT

|??$?0_JU?$ratio@$00$0JIJGIA@@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z| PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,0>

; 107  :             : _MyRep(_CHRONO duration_cast<duration>(_Dur).count()) {}

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x20
|$M4|
	ldr         r1,[sp,#0x2C]
	add         r0,sp,#0x18
	bl          |??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z|
	str         r0,[sp,#4]
	ldr         r0,[sp,#4]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x14]
	str         r0,[sp,#0x10]
	ldr         r3,[sp,#0x28]
	str         r3,[sp]
	ldr         r2,[sp,#0x10]
	ldr         r3,[sp]
	str         r2,[r3]
	ldr         r2,[sp,#0x14]
	ldr         r3,[sp]
	str         r2,[r3,#4]
	ldr         r3,[sp,#0x28]
	str         r3,[sp,#8]
	ldr         r0,[sp,#8]
|$M3|
	add         sp,sp,#0x20
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$?0_JU?$ratio@$00$0JIJGIA@@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z|, std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\utility
;	COMDAT ??$exchange@PAV?$tuple@P6AXXZ@std@@$$T@std@@YAPAV?$tuple@P6AXXZ@0@AAPAV10@$$QA$$T@Z
.text$mn	SEGMENT

|??$exchange@PAV?$tuple@P6AXXZ@std@@$$T@std@@YAPAV?$tuple@P6AXXZ@0@AAPAV10@$$QA$$T@Z| PROC ; std::exchange<std::tuple<void (__cdecl*)(void)> *,std::nullptr_t>

; 652  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 653  :     // assign _New_val to _Val, return previous _Val
; 654  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	ldr         r3,[sp,#0x10]
	ldr         r3,[r3]
	str         r3,[sp]

; 655  :     _Val         = static_cast<_Other&&>(_New_val);

	ldr         r3,[sp,#0x14]
	ldr         r2,[r3]
	ldr         r3,[sp,#0x10]
	str         r2,[r3]

; 656  :     return _Old_val;

	ldr         r3,[sp]
	str         r3,[sp,#4]

; 657  : }

	ldr         r0,[sp,#4]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$exchange@PAV?$tuple@P6AXXZ@std@@$$T@std@@YAPAV?$tuple@P6AXXZ@0@AAPAV10@$$QA$$T@Z|, std::exchange<std::tuple<void (__cdecl*)(void)> *,std::nullptr_t>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPAX@Z
.text$mn	SEGMENT

|??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPAX@Z| PROC ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void)>,0>

; 51   :     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept /* terminates */ {

|$M4|
	push        {r0,r1}
	push        {r7,r11,lr}
	add         r11,sp,#4
	sub         sp,sp,#0x24
	mov         r7,sp
|$M5|
	mvn         r3,#1
	strd        r3,r3,[r7,#0x18]

; 52   :         // adapt invoke of user's callable object to _beginthreadex's thread procedure
; 53   :         const unique_ptr<_Tuple> _FnVals(static_cast<_Tuple*>(_RawVals));

	ldr         r1,[r7,#0x30]
	mov         r0,r7
	bl          |??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@PAV?$tuple@P6AXXZ@1@@Z|

; 54   :         _Tuple& _Tup = *_FnVals.get(); // avoid ADL, handle incomplete types

	mov         r0,r7
	bl          |?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QBAPAV?$tuple@P6AXXZ@2@XZ|
	str         r0,[r7,#4]

; 55   :         _STD invoke(_STD move(_STD get<_Indices>(_Tup))...);

	ldr         r0,[r7,#4]
	bl          |??$get@$0A@P6AXXZ@std@@YAAAP6AXXZAAV?$tuple@P6AXXZ@0@@Z|
	str         r0,[r7,#8]
	ldr         r0,[r7,#8]
	bl          |??$move@AAP6AXXZ@std@@YA$$QAP6AXXZAAP6AXXZ@Z|
	str         r0,[r7,#0xC]
	ldr         r0,[r7,#0xC]
	bl          |??$invoke@P6AXXZ@std@@YAX$$QAP6AXXZ@Z|

; 56   :         _Cnd_do_broadcast_at_thread_exit(); // TRANSITION, ABI

	bl          _Cnd_do_broadcast_at_thread_exit

; 57   :         return 0;

	movs        r3,#0
	str         r3,[r7,#0x10]
	mov         r0,r7
	bl          |??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@XZ|
	ldr         r3,[r7,#0x10]
	str         r3,[r7,#0x14]

; 58   :     }

	ldr         r0,[r7,#0x14]
|$M3|
	add         sp,sp,#0x24
	pop         {r7,r11}
	ldr         pc,[sp],#0xC
|$M6|

	ENDP  ; |??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPAX@Z|, std::thread::_Invoke<std::tuple<void (__cdecl*)(void)>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory
;	COMDAT ??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@$$QAV01@@Z
.text$mn	SEGMENT

|??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@$$QAV01@@Z| PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > ><std::default_delete<std::tuple<void (__cdecl*)(void)> >,0>

; 3135 :         : _Mypair(_One_then_variadic_args_t{}, _STD forward<_Dx>(_Right.get_deleter()), _Right.release()) {}

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x18
|$M4|
	ldr         r0,[sp,#0x24]
	bl          |?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAAPAV?$tuple@P6AXXZ@2@XZ|
	str         r0,[sp,#8]
	ldr         r0,[sp,#0x24]
	bl          |?get_deleter@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAAAAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ|
	str         r0,[sp,#4]
	ldr         r0,[sp,#4]
	bl          |??$forward@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6AXXZ@std@@@0@AAU10@@Z|
	str         r0,[sp,#0xC]
	add         r3,sp,#8
	ldr         r2,[sp,#0xC]
	ldrb        r1,[sp]
	ldr         r0,[sp,#0x20]
	bl          |??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAA@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6AXXZ@std@@@1@$$QAPAV?$tuple@P6AXXZ@1@@Z|
	ldr         r3,[sp,#0x20]
	str         r3,[sp,#0x10]
	ldr         r0,[sp,#0x10]
|$M3|
	add         sp,sp,#0x18
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@$$QAV01@@Z|, std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > ><std::default_delete<std::tuple<void (__cdecl*)(void)> >,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAAAAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ
.text$mn	SEGMENT

|?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAAAAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ| PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Get_first

; 1382 :     constexpr _Ty1& _Get_first() noexcept {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 1383 :         return *this;

	ldr         r3,[sp,#0x10]
	str         r3,[sp]

; 1384 :     }

	ldr         r0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAAAAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ|, std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Get_first

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory
;	COMDAT ?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAAPAV?$tuple@P6AXXZ@2@XZ
.text$mn	SEGMENT

|?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAAPAV?$tuple@P6AXXZ@2@XZ| PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::release

; 3205 :     _CONSTEXPR23 pointer release() noexcept {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x10
|$M4|

; 3206 :         return _STD exchange(_Mypair._Myval2, nullptr);

	movs        r3,#0
	str         r3,[sp]
	mov         r1,sp
	ldr         r0,[sp,#0x18]
	bl          |??$exchange@PAV?$tuple@P6AXXZ@std@@$$T@std@@YAPAV?$tuple@P6AXXZ@0@AAPAV10@$$QA$$T@Z|
	str         r0,[sp,#4]
	ldr         r3,[sp,#4]
	str         r3,[sp,#8]

; 3207 :     }

	ldr         r0,[sp,#8]
|$M3|
	add         sp,sp,#0x10
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAAPAV?$tuple@P6AXXZ@2@XZ|, std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::release

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory
;	COMDAT ?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QBAPAV?$tuple@P6AXXZ@2@XZ
.text$mn	SEGMENT

|?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QBAPAV?$tuple@P6AXXZ@2@XZ| PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::get

; 3197 :     _NODISCARD _CONSTEXPR23 pointer get() const noexcept {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 3198 :         return _Mypair._Myval2;

	ldr         r3,[sp,#0x10]
	ldr         r3,[r3]
	str         r3,[sp]

; 3199 :     }

	ldr         r0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QBAPAV?$tuple@P6AXXZ@2@XZ|, std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::get

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory
;	COMDAT ?get_deleter@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAAAAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ
.text$mn	SEGMENT

|?get_deleter@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAAAAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ| PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::get_deleter

; 3181 :     _NODISCARD _CONSTEXPR23 _Dx& get_deleter() noexcept {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 3182 :         return _Mypair._Get_first();

	ldr         r0,[sp,#0x10]
	bl          |?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAAAAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ|
	str         r0,[sp]
	ldr         r3,[sp]
	str         r3,[sp,#4]

; 3183 :     }

	ldr         r0,[sp,#4]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |?get_deleter@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAAAAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ|, std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::get_deleter

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory
;	COMDAT ??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@XZ
.text$mn	SEGMENT

|??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@XZ| PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::~unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >

; 3175 :     _CONSTEXPR23 ~unique_ptr() noexcept {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M5|

; 3176 :         if (_Mypair._Myval2) {

	ldr         r3,[sp,#0x10]
	ldr         r3,[r3]
	cmp         r3,#0
	beq         |$LN2@unique_ptr|

; 3177 :             _Mypair._Get_first()(_Mypair._Myval2);

	ldr         r0,[sp,#0x10]
	bl          |?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PAV?$tuple@P6AXXZ@2@$00@std@@QAAAAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ|
	str         r0,[sp]
	ldr         r3,[sp,#0x10]
	ldr         r1,[r3]
	ldr         r0,[sp]
	bl          |??R?$default_delete@V?$tuple@P6AXXZ@std@@@std@@QBAXPAV?$tuple@P6AXXZ@1@@Z|
|$LN2@unique_ptr|
|$M4|

; 3178 :         }
; 3179 :     }

	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M6|

	ENDP  ; |??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@XZ|, std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::~unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory
;	COMDAT ??R?$default_delete@V?$tuple@P6AXXZ@std@@@std@@QBAXPAV?$tuple@P6AXXZ@1@@Z
.text$mn	SEGMENT

|??R?$default_delete@V?$tuple@P6AXXZ@std@@@std@@QBAXPAV?$tuple@P6AXXZ@1@@Z| PROC ; std::default_delete<std::tuple<void (__cdecl*)(void)> >::operator()

; 3064 :     _CONSTEXPR23 void operator()(_Ty* _Ptr) const noexcept /* strengthened */ { // delete a pointer

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 3065 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 3066 :         delete _Ptr;

	ldr         r3,[sp,#0x14]
	str         r3,[sp]
	movs        r1,#4
	ldr         r0,[sp]
	bl          |??3@YAXPAXI@Z|
|$M3|

; 3067 :     }

	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??R?$default_delete@V?$tuple@P6AXXZ@std@@@std@@QBAXPAV?$tuple@P6AXXZ@1@@Z|, std::default_delete<std::tuple<void (__cdecl*)(void)> >::operator()

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory
;	COMDAT ??$make_unique@V?$tuple@P6AXXZ@std@@A6AXXZ$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@0@A6AXXZ@Z
.text$mn	SEGMENT

|??$make_unique@V?$tuple@P6AXXZ@std@@A6AXXZ$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@0@A6AXXZ@Z| PROC ; std::make_unique<std::tuple<void (__cdecl*)(void)>,void (__cdecl&)(void),0>

; 3392 : _NODISCARD_SMART_PTR_ALLOC _CONSTEXPR23 unique_ptr<_Ty> make_unique(_Types&&... _Args) { // make a unique_ptr

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x28
|$M9|
	movs        r3,#0
	str         r3,[sp,#8]

; 3393 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

	movs        r0,#4
	bl          |??2@YAPAXI@Z|
	str         r0,[sp]
	ldr         r3,[sp]
	cmp         r3,#0
	beq         |$LN3@make_uniqu|
	ldr         r0,[sp,#0x34]
	bl          |??$forward@A6AXXZ@std@@YAA6AXXZA6AXXZ@Z|
	str         r0,[sp,#0xC]
	add         r1,sp,#0xC
	ldr         r0,[sp]
	bl          |??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QAA@ABQ6AXXZ@Z|
	str         r0,[sp,#4]
	b           |$LN4@make_uniqu|
|$LN3@make_uniqu|
	movs        r3,#0
	str         r3,[sp,#4]
|$LN4@make_uniqu|
	ldr         r1,[sp,#4]
	add         r0,sp,#0x18
	bl          |??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@PAV?$tuple@P6AXXZ@1@@Z|
	str         r0,[sp,#0x10]
	ldr         r3,[sp,#0x10]
	str         r3,[sp,#0x14]
	ldr         r1,[sp,#0x14]
	ldr         r0,[sp,#0x30]
	bl          |??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@$$QAV01@@Z|
	str         r0,[sp,#0x20]
	ldr         r3,[sp,#8]
	orr         r3,r3,#1
	str         r3,[sp,#8]
	add         r0,sp,#0x18
	bl          |??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@XZ|
	ldr         r3,[sp,#0x30]
	str         r3,[sp,#0x1C]

; 3394 : }

	ldr         r0,[sp,#0x1C]
|$M8|
	add         sp,sp,#0x28
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M10|

	ENDP  ; |??$make_unique@V?$tuple@P6AXXZ@std@@A6AXXZ$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@0@A6AXXZ@Z|, std::make_unique<std::tuple<void (__cdecl*)(void)>,void (__cdecl&)(void),0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAAUxtime@@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z
.text$mn	SEGMENT

|??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAAUxtime@@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z| PROC ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >

; 699  :     is_arithmetic_v<_Rep>) {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x68
|$M12|

; 700  :     // Convert duration to xtime, maximum 10 days from now, returns whether clamping occurred.
; 701  :     // If clamped, timeouts will be transformed into spurious non-timeout wakes, due to ABI restrictions where
; 702  :     // the other side of the DLL boundary overflows int32_t milliseconds.
; 703  :     // Every function calling this one is TRANSITION, ABI
; 704  :     constexpr _CHRONO nanoseconds _Ten_days{_CHRONO hours{24} * 10};

	ldr         r3,|$LN9@To_xtime_1|		; =0xad160000
	str         r3,[sp,#0x28]
	ldr         r3,|$LN8@To_xtime_1|		; =0x311cd
	str         r3,[sp,#0x2C]

; 705  :     constexpr _CHRONO duration<double> _Ten_days_d{_Ten_days};

	vldr        d0,|$LN7@To_xtime_1|		; 864000
	vstr        d0,[sp,#0x40]

; 706  :     _CHRONO nanoseconds _Tx0 = _CHRONO system_clock::now().time_since_epoch();

	add         r0,sp,#0x50
	bl          |?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ|
	str         r0,[sp,#8]
	add         r1,sp,#0x58
	ldr         r0,[sp,#8]
	bl          |?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ|
	str         r0,[sp,#0xC]
	ldr         r1,[sp,#0xC]
	add         r0,sp,#0x18
	bl          |??$?0_JU?$ratio@$00$0JIJGIA@@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z|

; 707  :     const bool _Clamped      = _Ten_days_d < _Rel_time;

	ldr         r1,[sp,#0x74]
	add         r0,sp,#0x40
	bl          |??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NABV?$duration@NU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|
	strb        r0,[sp]

; 708  :     if (_Clamped) {

	ldrb        r3,[sp]
	cmp         r3,#0
	beq         |$LN2@To_xtime_1|

; 709  :         _Tx0 += _Ten_days;

	add         r1,sp,#0x28
	add         r0,sp,#0x18
	bl          |??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAAAAV012@ABV012@@Z|

; 710  :     } else {

	b           |$LN3@To_xtime_1|
|$LN2@To_xtime_1|

; 711  :         _Tx0 += _CHRONO duration_cast<_CHRONO nanoseconds>(_Rel_time);

	ldr         r1,[sp,#0x74]
	add         r0,sp,#0x60
	bl          |??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@@Z|
	str         r0,[sp,#0x10]
	ldr         r1,[sp,#0x10]
	add         r0,sp,#0x18
	bl          |??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAAAAV012@ABV012@@Z|
|$LN3@To_xtime_1|

; 712  :     }
; 713  : 
; 714  :     const auto _Whole_seconds = _CHRONO duration_cast<_CHRONO seconds>(_Tx0);

	add         r1,sp,#0x18
	add         r0,sp,#0x30
	bl          |??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|

; 715  :     _Xt.sec                   = _Whole_seconds.count();

	add         r0,sp,#0x30
	bl          |?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x24]
	str         r0,[sp,#0x20]
	ldr         r3,[sp,#0x70]
	str         r3,[sp,#4]
	ldr         r2,[sp,#0x20]
	ldr         r3,[sp,#4]
	str         r2,[r3]
	ldr         r2,[sp,#0x24]
	ldr         r3,[sp,#4]
	str         r2,[r3,#4]

; 716  :     _Tx0 -= _Whole_seconds;

	add         r1,sp,#0x30
	add         r0,sp,#0x48
	bl          |??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$00@std@@@12@@Z|
	add         r1,sp,#0x48
	add         r0,sp,#0x18
	bl          |??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAAAAV012@ABV012@@Z|

; 717  :     _Xt.nsec = static_cast<long>(_Tx0.count());

	add         r0,sp,#0x18
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x3C]
	str         r0,[sp,#0x38]
	ldr         r2,[sp,#0x38]
	ldr         r3,[sp,#0x70]
	adds        r3,r3,#8
	str         r2,[r3]

; 718  :     return _Clamped;

	ldrb        r3,[sp]
	strb        r3,[sp,#0x14]

; 719  : }

	ldrb        r0,[sp,#0x14]
|$M5|
	add         sp,sp,#0x68
	pop         {r11}
	ldr         pc,[sp],#0xC
|$LN10@To_xtime_1|
|$M11|
	__debugbreak
|$LN6@To_xtime_1|
|$LN7@To_xtime_1|
	DCD         0x0
	DCD         0x412a5e00
|$LN8@To_xtime_1|
	DCD         0x311cd
|$LN9@To_xtime_1|
	DCD         0xad160000
|$M13|

	ENDP  ; |??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAAUxtime@@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z|, std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
.text$mn	SEGMENT

|??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z| PROC ; std::chrono::operator<=<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; 579  :             is_arithmetic_v<typename _Duration1::rep>&& is_arithmetic_v<typename _Duration2::rep>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x10
|$M6|

; 580  :         return !(_Right < _Left);

	ldr         r1,[sp,#0x18]
	ldr         r0,[sp,#0x1C]
	bl          |??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|
	strb        r0,[sp]
	ldrb        r3,[sp]
	cmp         r3,#0
	bne         |$LN3@operator|
	movs        r3,#1
	str         r3,[sp,#4]
	b           |$LN4@operator|
|$LN3@operator|
	movs        r3,#0
	str         r3,[sp,#4]
|$LN4@operator|
	ldr         r3,[sp,#4]
	uxtb        r3,r3
	strb        r3,[sp,#8]

; 581  :     }

	ldrb        r0,[sp,#8]
|$M5|
	add         sp,sp,#0x10
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M7|

	ENDP  ; |??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|, std::chrono::operator<=<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z
.text$mn	SEGMENT

|??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z| PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1>,0>

; 422  :         is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x50
|$M14|

; 423  :         // convert duration to another duration; truncate
; 424  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 425  : 
; 426  :         using _ToRep = typename _To::rep;
; 427  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 428  : 
; 429  :         constexpr bool _Num_is_one = _CF::num == 1;

	movs        r3,#0
	strb        r3,[sp]

; 430  :         constexpr bool _Den_is_one = _CF::den == 1;

	movs        r3,#1
	strb        r3,[sp,#1]

; 431  : 
; 432  :         if (_Den_is_one) {
; 433  :             if (_Num_is_one) {

	b           |$LN4@duration_c|

; 434  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

	ldr         r0,[sp,#0x5C]
	bl          |?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x14]
	str         r0,[sp,#0x10]
	ldr         r3,[sp,#0x10]
	str         r3,[sp,#0x30]
	ldr         r3,[sp,#0x14]
	str         r3,[sp,#0x34]
	add         r1,sp,#0x30
	ldr         r0,[sp,#0x58]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z|
	ldr         r3,[sp,#0x58]
	str         r3,[sp,#4]
	b           |$LN1@duration_c|

; 435  :             } else {

	b           |$LN5@duration_c|
|$LN4@duration_c|

; 436  :                 return static_cast<_To>(

	ldr         r0,[sp,#0x5C]
	bl          |?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x1C]
	str         r0,[sp,#0x18]
	ldr         r3,[sp,#0x18]
	ldr         r1,[sp,#0x1C]
	str         r3,[sp,#8]
	ldr         r2,[sp,#8]
	movs        r3,#0
	mul         r2,r2,r3
	ldr         r3,|$LN11@duration_c|		; =0x3b9aca00
	mul         r3,r1,r3
	adds        r1,r2,r3
	ldr         r2,[sp,#8]
	ldr         r3,|$LN11@duration_c|		; =0x3b9aca00
	umull       r2,r3,r2,r3
	add         r3,r3,r1
	str         r2,[sp,#0x38]
	str         r3,[sp,#0x3C]
	add         r1,sp,#0x38
	ldr         r0,[sp,#0x58]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z|
	ldr         r3,[sp,#0x58]
	str         r3,[sp,#4]
	b           |$LN1@duration_c|
|$LN5@duration_c|

; 437  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 438  :             }
; 439  :         } else {

	b           |$LN3@duration_c|

; 440  :             if (_Num_is_one) {

	b           |$LN6@duration_c|

; 441  :                 return static_cast<_To>(

	ldr         r0,[sp,#0x5C]
	bl          |?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x24]
	str         r0,[sp,#0x20]
	ldr         r3,[sp,#0x20]
	str         r3,[sp,#0x40]
	ldr         r3,[sp,#0x24]
	str         r3,[sp,#0x44]
	add         r1,sp,#0x40
	ldr         r0,[sp,#0x58]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z|
	ldr         r3,[sp,#0x58]
	str         r3,[sp,#4]
	b           |$LN1@duration_c|

; 442  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 443  :             } else {

	b           |$LN7@duration_c|
|$LN6@duration_c|

; 444  :                 return static_cast<_To>(static_cast<_ToRep>(

	ldr         r0,[sp,#0x5C]
	bl          |?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x2C]
	str         r0,[sp,#0x28]
	ldr         r3,[sp,#0x28]
	ldr         r1,[sp,#0x2C]
	str         r3,[sp,#0xC]
	ldr         r2,[sp,#0xC]
	movs        r3,#0
	mul         r2,r2,r3
	ldr         r3,|$LN11@duration_c|		; =0x3b9aca00
	mul         r3,r1,r3
	adds        r1,r2,r3
	ldr         r2,[sp,#0xC]
	ldr         r3,|$LN11@duration_c|		; =0x3b9aca00
	umull       r2,r3,r2,r3
	add         r3,r3,r1
	str         r2,[sp,#0x48]
	str         r3,[sp,#0x4C]
	add         r1,sp,#0x48
	ldr         r0,[sp,#0x58]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z|
	ldr         r3,[sp,#0x58]
	str         r3,[sp,#4]
|$LN7@duration_c|
|$LN3@duration_c|
|$LN1@duration_c|

; 445  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 446  :             }
; 447  :         }
; 448  :     }

	ldr         r0,[sp,#4]
|$M9|
	add         sp,sp,#0x50
	pop         {r11}
	ldr         pc,[sp],#0xC
|$LN12@duration_c|
|$M13|
	__debugbreak
|$LN10@duration_c|
|$LN11@duration_c|
	DCD         0x3b9aca00
|$M15|

	ENDP  ; |??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z|, std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z
.text$mn	SEGMENT

|??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z| PROC ; std::chrono::operator<<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >

; 383  :             is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x40
|$M7|

; 384  :         using _CT = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 385  :         return _CT(_Left).count() < _CT(_Right).count();

	ldr         r1,[sp,#0x48]
	add         r0,sp,#0x30
	movs        r2,#8
	bl          memcpy
	add         r0,sp,#0x30
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x14]
	str         r0,[sp,#0x10]
	ldr         r1,[sp,#0x4C]
	add         r0,sp,#0x38
	movs        r2,#8
	bl          memcpy
	add         r0,sp,#0x38
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x1C]
	str         r0,[sp,#0x18]
	ldr         r3,[sp,#0x10]
	str         r3,[sp,#0x20]
	ldr         r3,[sp,#0x14]
	str         r3,[sp,#0x24]
	ldr         r3,[sp,#0x18]
	str         r3,[sp,#0x28]
	ldr         r3,[sp,#0x1C]
	str         r3,[sp,#0x2C]
	ldr         r3,[sp,#0x20]
	str         r3,[sp,#4]
	ldr         r3,[sp,#0x28]
	str         r3,[sp,#8]
	ldr         r2,[sp,#0x24]
	ldr         r3,[sp,#0x2C]
	cmp         r2,r3
	bgt         |$LN3@operator|
	blt         |$LN5@operator|
	ldr         r2,[sp,#4]
	ldr         r3,[sp,#8]
	cmp         r2,r3
	bcs         |$LN3@operator|
|$LN5@operator|
	movs        r3,#1
	str         r3,[sp]
	b           |$LN4@operator|
|$LN3@operator|
	movs        r3,#0
	str         r3,[sp]
|$LN4@operator|
	ldr         r3,[sp]
	uxtb        r3,r3
	strb        r3,[sp,#0xC]

; 386  :     }

	ldrb        r0,[sp,#0xC]
|$M6|
	add         sp,sp,#0x40
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M8|

	ENDP  ; |??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z|, std::chrono::operator<<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$00@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z
.text$mn	SEGMENT

|??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$00@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z| PROC ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1> >

; 290  :             is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) /* strengthened */ {

	push        {r0-r3}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x30
|$M4|

; 291  :         using _CD = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 292  :         return _CD(_CD(_Left).count() - _CD(_Right).count());

	ldr         r1,[sp,#0x3C]
	add         r0,sp,#0x20
	movs        r2,#8
	bl          memcpy
	add         r0,sp,#0x20
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0xC]
	str         r0,[sp,#8]
	ldr         r1,[sp,#0x40]
	add         r0,sp,#0x28
	bl          |??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$00@std@@@12@@Z|
	str         r0,[sp]
	ldr         r0,[sp]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x14]
	str         r0,[sp,#0x10]
	ldr         r0,[sp,#8]
	ldr         r1,[sp,#0xC]
	ldr         r2,[sp,#0x10]
	ldr         r3,[sp,#0x14]
	subs        r2,r0,r2
	sbc         r3,r1,r3
	str         r2,[sp,#0x18]
	str         r3,[sp,#0x1C]
	add         r1,sp,#0x18
	ldr         r0,[sp,#0x38]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z|
	ldr         r3,[sp,#0x38]
	str         r3,[sp,#4]

; 293  :     }

	ldr         r0,[sp,#4]
|$M3|
	add         sp,sp,#0x30
	pop         {r11}
	ldr         pc,[sp],#0x14
|$M5|

	ENDP  ; |??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$00@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z|, std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?M_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z
.text$mn	SEGMENT

|??$?M_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z| PROC ; std::chrono::operator<<__int64,std::ratio<1,1>,__int64,std::ratio<1,1> >

; 383  :             is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x40
|$M7|

; 384  :         using _CT = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 385  :         return _CT(_Left).count() < _CT(_Right).count();

	ldr         r1,[sp,#0x48]
	add         r0,sp,#0x30
	movs        r2,#8
	bl          memcpy
	add         r0,sp,#0x30
	bl          |?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x14]
	str         r0,[sp,#0x10]
	ldr         r1,[sp,#0x4C]
	add         r0,sp,#0x38
	movs        r2,#8
	bl          memcpy
	add         r0,sp,#0x38
	bl          |?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x1C]
	str         r0,[sp,#0x18]
	ldr         r3,[sp,#0x10]
	str         r3,[sp,#0x20]
	ldr         r3,[sp,#0x14]
	str         r3,[sp,#0x24]
	ldr         r3,[sp,#0x18]
	str         r3,[sp,#0x28]
	ldr         r3,[sp,#0x1C]
	str         r3,[sp,#0x2C]
	ldr         r3,[sp,#0x20]
	str         r3,[sp,#4]
	ldr         r3,[sp,#0x28]
	str         r3,[sp,#8]
	ldr         r2,[sp,#0x24]
	ldr         r3,[sp,#0x2C]
	cmp         r2,r3
	bgt         |$LN3@operator|
	blt         |$LN5@operator|
	ldr         r2,[sp,#4]
	ldr         r3,[sp,#8]
	cmp         r2,r3
	bcs         |$LN3@operator|
|$LN5@operator|
	movs        r3,#1
	str         r3,[sp]
	b           |$LN4@operator|
|$LN3@operator|
	movs        r3,#0
	str         r3,[sp]
|$LN4@operator|
	ldr         r3,[sp]
	uxtb        r3,r3
	strb        r3,[sp,#0xC]

; 386  :     }

	ldrb        r0,[sp,#0xC]
|$M6|
	add         sp,sp,#0x40
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M8|

	ENDP  ; |??$?M_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z|, std::chrono::operator<<__int64,std::ratio<1,1>,__int64,std::ratio<1,1> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QAA@ABM@Z
.text$mn	SEGMENT

|??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QAA@ABM@Z| PROC ; std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><float,0>

; 99   :             : _MyRep(static_cast<_Rep>(_Val)) {}

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|
	ldr         r2,[sp,#0x10]
	ldr         r3,[sp,#0x14]
	vldr        s0,[r3]
	vstr        s0,[r2]
	ldr         r3,[sp,#0x10]
	str         r3,[sp]
	ldr         r0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QAA@ABM@Z|, std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><float,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ??$_Start@A6AXXZ$$V@thread@std@@AAAXA6AXXZ@Z
.text$mn	SEGMENT

|??$_Start@A6AXXZ$$V@thread@std@@AAAXA6AXXZ@Z| PROC	; std::thread::_Start<void (__cdecl&)(void)>

; 68   :     void _Start(_Fn&& _Fx, _Args&&... _Ax) {

|$M13|
	push        {r0,r1}
	push        {r4,r7,r11,lr}
	add         r11,sp,#8
	sub         sp,sp,#0x30
	mov         r7,sp
	sub         sp,sp,#8
|$M16|
	mvn         r3,#1
	strd        r3,r3,[r7,#0x28]

; 69   :         using _Tuple                 = tuple<decay_t<_Fn>, decay_t<_Args>...>;
; 70   :         auto _Decay_copied           = _STD make_unique<_Tuple>(_STD forward<_Fn>(_Fx), _STD forward<_Args>(_Ax)...);

	ldr         r0,[r7,#0x44]
	bl          |??$forward@A6AXXZ@std@@YAA6AXXZA6AXXZ@Z|
	str         r0,[r7,#4]
	ldr         r1,[r7,#4]
	adds        r0,r7,#0x10
	bl          |??$make_unique@V?$tuple@P6AXXZ@std@@A6AXXZ$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@0@A6AXXZ@Z|
	str         r0,[r7,#8]
	ldr         r3,[r7,#8]
	str         r3,[r7,#0xC]
	ldr         r1,[r7,#0xC]
	mov         r0,r7
	bl          |??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@$$QAV01@@Z|
	str         r0,[r7,#0x20]
|$M14|
	adds        r0,r7,#0x10
	bl          |??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@XZ|

; 71   :         constexpr auto _Invoker_proc = _Get_invoke<_Tuple>(make_index_sequence<1 + sizeof...(_Args)>{});

	ldr         r3,|$LN12@Start|			; =|??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPAX@Z|
	str         r3,[r7,#0x18]

; 72   : 
; 73   :         _Thr._Hnd =

	mov         r0,r7
	bl          |?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QBAPAV?$tuple@P6AXXZ@2@XZ|
	str         r0,[r7,#0x14]
	ldr         r3,[r7,#0x40]
	adds        r3,r3,#4
	str         r3,[sp,#4]
	movs        r3,#0
	str         r3,[sp]
	ldr         r3,[r7,#0x14]
	ldr         r2,[r7,#0x18]
	movs        r1,#0
	movs        r0,#0
	ldr         r4,|$LN11@Start|			; =|__imp__beginthreadex|
	ldr         r4,[r4]
	blx         r4
	str         r0,[r7,#0x1C]
	ldr         r2,[r7,#0x40]
	ldr         r3,[r7,#0x1C]
	str         r3,[r2]

; 74   :             reinterpret_cast<void*>(_CSTD _beginthreadex(nullptr, 0, _Invoker_proc, _Decay_copied.get(), 0, &_Thr._Id));
; 75   : 
; 76   :         if (_Thr._Hnd) { // ownership transferred to the thread

	ldr         r3,[r7,#0x40]
	ldr         r3,[r3]
	cmp         r3,#0
	beq         |$LN2@Start|

; 77   :             (void) _Decay_copied.release();

	mov         r0,r7
	bl          |?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAAPAV?$tuple@P6AXXZ@2@XZ|

; 78   :         } else { // failed to start thread

	b           |$LN3@Start|
|$LN2@Start|

; 79   :             _Thr._Id = 0;

	ldr         r3,[r7,#0x40]
	adds        r2,r3,#4
	movs        r3,#0
	str         r3,[r2]

; 80   :             _Throw_Cpp_error(_RESOURCE_UNAVAILABLE_TRY_AGAIN);

	movs        r0,#6
	bl          |?_Throw_Cpp_error@std@@YAXH@Z|
|$LN3@Start|
|$M15|

; 81   :         }
; 82   :     }

	mov         r0,r7
	bl          |??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@XZ|
|$LN7@Start|
|$M8|
	add         sp,sp,#0x38
	pop         {r4,r7,r11}
	ldr         pc,[sp],#0xC
|$LN10@Start|
|$LN11@Start|
	DCD         |__imp__beginthreadex|
|$LN12@Start|
	DCD         |??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPAX@Z|
|$M17|
;	COMDAT .text$x
.text$x	SEGMENT
|__unwind$6|
	push        {r4,lr}
|$M18|
	mov         r0,r7
	bl          |??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QAA@XZ|
|$M9|
	pop         {r4,pc}
|$M19|

	ENDP  ; |??$_Start@A6AXXZ$$V@thread@std@@AAAXA6AXXZ@Z|, std::thread::_Start<void (__cdecl&)(void)>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\type_traits
;	COMDAT ??$forward@A6AXXZ@std@@YAA6AXXZA6AXXZ@Z
.text$mn	SEGMENT

|??$forward@A6AXXZ@std@@YAA6AXXZA6AXXZ@Z| PROC		; std::forward<void (__cdecl&)(void)>

; 1426 : _NODISCARD _MSVC_INTRINSIC constexpr _Ty&& forward(remove_reference_t<_Ty>& _Arg) noexcept {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 1427 :     return static_cast<_Ty&&>(_Arg);

	ldr         r3,[sp,#0x10]
	str         r3,[sp]

; 1428 : }

	ldr         r0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$forward@A6AXXZ@std@@YAA6AXXZA6AXXZ@Z|, std::forward<void (__cdecl&)(void)>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z
.text$mn	SEGMENT

|??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z| PROC ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; 186  :     void sleep_until(const chrono::time_point<_Clock, _Duration>& _Abs_time) {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	bl          __security_push_cookie
	sub         sp,sp,#0x2C
|$M8|
|$LN2@sleep_unti|

; 187  : #if _HAS_CXX20
; 188  :         static_assert(chrono::is_clock_v<_Clock>, "Clock type required");
; 189  : #endif // _HAS_CXX20
; 190  :         for (;;) {
; 191  :             const auto _Now = _Clock::now();

	add         r0,sp,#8
	bl          |?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ|

; 192  :             if (_Abs_time <= _Now) {

	add         r1,sp,#8
	ldr         r0,[sp,#0x38]
	bl          |??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|
	strb        r0,[sp]
	ldrb        r3,[sp]
	cmp         r3,#0
	beq         |$LN5@sleep_unti|

; 193  :                 return;

	b           |$LN1@sleep_unti|
|$LN5@sleep_unti|

; 194  :             }
; 195  : 
; 196  :             _CSTD xtime _Tgt;
; 197  :             (void) _To_xtime_10_day_clamped(_Tgt, _Abs_time - _Now);

	add         r2,sp,#8
	ldr         r1,[sp,#0x38]
	add         r0,sp,#0x10
	bl          |??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|
	str         r0,[sp,#4]
	ldr         r1,[sp,#4]
	add         r0,sp,#0x18
	bl          |??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAAUxtime@@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z|

; 198  :             _Thrd_sleep(&_Tgt);

	add         r0,sp,#0x18
	bl          _Thrd_sleep

; 199  :         }

	b           |$LN2@sleep_unti|
|$LN1@sleep_unti|
|$M7|

; 200  :     }

	add         sp,sp,#0x2C
	bl          __security_pop_cookie
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M9|

	ENDP  ; |??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z|, std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$00@std@@@12@@Z
.text$mn	SEGMENT

|??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$00@std@@@12@@Z| PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,0>

; 107  :             : _MyRep(_CHRONO duration_cast<duration>(_Dur).count()) {}

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x20
|$M4|
	ldr         r1,[sp,#0x2C]
	add         r0,sp,#0x18
	bl          |??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z|
	str         r0,[sp,#4]
	ldr         r0,[sp,#4]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x14]
	str         r0,[sp,#0x10]
	ldr         r3,[sp,#0x28]
	str         r3,[sp]
	ldr         r2,[sp,#0x10]
	ldr         r3,[sp]
	str         r2,[r3]
	ldr         r2,[sp,#0x14]
	ldr         r3,[sp]
	str         r2,[r3,#4]
	ldr         r3,[sp,#0x28]
	str         r3,[sp,#8]
	ldr         r0,[sp,#8]
|$M3|
	add         sp,sp,#0x20
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$00@std@@@12@@Z|, std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
.text$mn	SEGMENT

|??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z| PROC ; std::chrono::operator<<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; 572  :             is_arithmetic_v<typename _Duration1::rep>&& is_arithmetic_v<typename _Duration2::rep>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x20
|$M4|

; 573  :         return _Left.time_since_epoch() < _Right.time_since_epoch();

	add         r1,sp,#0x10
	ldr         r0,[sp,#0x2C]
	bl          |?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ|
	str         r0,[sp,#4]
	add         r1,sp,#0x18
	ldr         r0,[sp,#0x28]
	bl          |?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ|
	str         r0,[sp,#8]
	ldr         r1,[sp,#4]
	ldr         r0,[sp,#8]
	bl          |??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z|
	strb        r0,[sp]
	ldrb        r3,[sp]
	strb        r3,[sp,#0xC]

; 574  :     }

	ldrb        r0,[sp,#0xC]
|$M3|
	add         sp,sp,#0x20
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|, std::chrono::operator<<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$00@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@ABV201@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z
.text$mn	SEGMENT

|??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$00@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@ABV201@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z| PROC ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1> >

; 541  :             is_arithmetic_v<typename _Duration::rep>&& is_arithmetic_v<_Rep>) /* strengthened */ {

	push        {r0-r3}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x20
|$M4|

; 542  :         using _RT = time_point<_Clock, common_type_t<_Duration, duration<_Rep, _Period>>>;
; 543  :         return _RT(_Left.time_since_epoch() - _Right);

	add         r1,sp,#0x10
	ldr         r0,[sp,#0x2C]
	bl          |?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ|
	str         r0,[sp]
	ldr         r2,[sp,#0x30]
	ldr         r1,[sp]
	add         r0,sp,#0x18
	bl          |??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$00@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z|
	str         r0,[sp,#4]
	ldr         r1,[sp,#4]
	ldr         r0,[sp,#0x28]
	bl          |??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|
	ldr         r3,[sp,#0x28]
	str         r3,[sp,#8]

; 544  :     }

	ldr         r0,[sp,#8]
|$M3|
	add         sp,sp,#0x20
	pop         {r11}
	ldr         pc,[sp],#0x14
|$M5|

	ENDP  ; |??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$00@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@ABV201@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z|, std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?O_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z
.text$mn	SEGMENT

|??$?O_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z| PROC ; std::chrono::operator><__int64,std::ratio<1,1>,__int64,std::ratio<1,1> >

; 398  :             is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 399  :         return _Right < _Left;

	ldr         r1,[sp,#0x10]
	ldr         r0,[sp,#0x14]
	bl          |??$?M_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z|
	strb        r0,[sp]
	ldrb        r3,[sp]
	strb        r3,[sp,#4]

; 400  :     }

	ldrb        r0,[sp,#4]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$?O_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z|, std::chrono::operator><__int64,std::ratio<1,1>,__int64,std::ratio<1,1> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PABV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z
.text$mn	SEGMENT

|??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PABV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z| PROC ; std::_To_absolute_time<__int64,std::ratio<1,1> >

; 159  : _NODISCARD auto _To_absolute_time(const chrono::duration<_Rep, _Period>& _Rel_time) noexcept {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x40
|$M7|

; 160  :     constexpr auto _Zero                 = chrono::duration<_Rep, _Period>::zero();

	movs        r3,#0
	str         r3,[sp,#0x20]
	movs        r3,#0
	str         r3,[sp,#0x24]

; 161  :     const auto _Now                      = chrono::steady_clock::now();

	add         r0,sp,#0x28
	bl          |?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ|

; 162  :     decltype(_Now + _Rel_time) _Abs_time = _Now; // return common type

	add         r0,sp,#0x10
	add         r1,sp,#0x28
	movs        r2,#8
	bl          memcpy

; 163  :     if (_Rel_time > _Zero) {

	add         r1,sp,#0x20
	ldr         r0,[sp,#0x4C]
	bl          |??$?O_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z|
	strb        r0,[sp]
	ldrb        r3,[sp]
	cmp         r3,#0
	beq         |$LN2@To_absolut|

; 164  :         constexpr auto _Forever = (chrono::steady_clock::time_point::max)();

	mvn         r3,#0
	str         r3,[sp,#0x18]
	mvn         r3,#0x80000000
	str         r3,[sp,#0x1C]

; 165  :         if (_Abs_time < _Forever - _Rel_time) {

	ldr         r2,[sp,#0x4C]
	add         r1,sp,#0x18
	add         r0,sp,#0x38
	bl          |??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$00@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@ABV201@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z|
	str         r0,[sp,#4]
	ldr         r1,[sp,#4]
	add         r0,sp,#0x10
	bl          |??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|
	strb        r0,[sp,#1]
	ldrb        r3,[sp,#1]
	cmp         r3,#0
	beq         |$LN3@To_absolut|

; 166  :             _Abs_time += _Rel_time;

	ldr         r1,[sp,#0x4C]
	add         r0,sp,#0x30
	bl          |??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$00@std@@@12@@Z|
	add         r1,sp,#0x30
	add         r0,sp,#0x10
	bl          |??Y?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAAAAV012@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|

; 167  :         } else {

	b           |$LN4@To_absolut|
|$LN3@To_absolut|

; 168  :             _Abs_time = _Forever;

	add         r0,sp,#0x10
	add         r1,sp,#0x18
	movs        r2,#8
	bl          memcpy
|$LN4@To_absolut|
|$LN2@To_absolut|

; 169  :         }
; 170  :     }
; 171  :     return _Abs_time;

	ldr         r0,[sp,#0x48]
	add         r1,sp,#0x10
	movs        r2,#8
	bl          memcpy
	ldr         r3,[sp,#0x48]
	str         r3,[sp,#8]

; 172  : }

	ldr         r0,[sp,#8]
|$M6|
	add         sp,sp,#0x40
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M8|

	ENDP  ; |??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PABV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z|, std::_To_absolute_time<__int64,std::ratio<1,1> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
.text$mn	SEGMENT

|??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| PROC ; std::chrono::duration_cast<std::chrono::duration<float,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,0>

; 422  :         is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x58
|$M14|

; 423  :         // convert duration to another duration; truncate
; 424  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 425  : 
; 426  :         using _ToRep = typename _To::rep;
; 427  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 428  : 
; 429  :         constexpr bool _Num_is_one = _CF::num == 1;

	movs        r3,#1
	strb        r3,[sp,#4]

; 430  :         constexpr bool _Den_is_one = _CF::den == 1;

	movs        r3,#0
	strb        r3,[sp,#5]

; 431  : 
; 432  :         if (_Den_is_one) {

	b           |$LN2@duration_c|

; 433  :             if (_Num_is_one) {
; 434  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

	ldr         r0,[sp,#0x60]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x2C]
	str         r0,[sp,#0x28]
	ldr         r0,[sp,#0x28]
	ldr         r1,[sp,#0x2C]
	bl          __i64tos
	vstr        s0,[sp,#8]
	add         r1,sp,#8
	add         r0,sp,#0x48
	bl          |??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QAA@ABM@Z|
	str         r0,[sp,#0xC]
	ldr         r3,[sp,#0xC]
	vldr        s0,[r3]
	vstr        s0,[sp]
	b           |$LN1@duration_c|

; 435  :             } else {

	b           |$LN5@duration_c|

; 436  :                 return static_cast<_To>(

	ldr         r0,[sp,#0x60]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x34]
	str         r0,[sp,#0x30]
	ldr         r0,[sp,#0x30]
	ldr         r1,[sp,#0x34]
	bl          __i64tos
	vmov.f32    s1,s0
	vmov.f32    s0,#1
	vmul.f32    s0,s1,s0
	vstr        s0,[sp,#0x10]
	add         r1,sp,#0x10
	add         r0,sp,#0x4C
	bl          |??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QAA@ABM@Z|
	str         r0,[sp,#0x14]
	ldr         r3,[sp,#0x14]
	vldr        s0,[r3]
	vstr        s0,[sp]
	b           |$LN1@duration_c|
|$LN5@duration_c|

; 437  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 438  :             }
; 439  :         } else {

	b           |$LN3@duration_c|
|$LN2@duration_c|

; 440  :             if (_Num_is_one) {
; 441  :                 return static_cast<_To>(

	ldr         r0,[sp,#0x60]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x3C]
	str         r0,[sp,#0x38]
	ldr         r0,[sp,#0x38]
	ldr         r1,[sp,#0x3C]
	bl          __i64tos
	vmov.f32    s1,s0
	vldr        s0,|$LN11@duration_c|		; 1e+09
	vdiv.f32    s0,s1,s0
	vstr        s0,[sp,#0x18]
	add         r1,sp,#0x18
	add         r0,sp,#0x50
	bl          |??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QAA@ABM@Z|
	str         r0,[sp,#0x1C]
	ldr         r3,[sp,#0x1C]
	vldr        s0,[r3]
	vstr        s0,[sp]
	b           |$LN1@duration_c|

; 442  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 443  :             } else {

	b           |$LN7@duration_c|

; 444  :                 return static_cast<_To>(static_cast<_ToRep>(

	ldr         r0,[sp,#0x60]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x44]
	str         r0,[sp,#0x40]
	ldr         r0,[sp,#0x40]
	ldr         r1,[sp,#0x44]
	bl          __i64tos
	vmov.f32    s1,s0
	vmov.f32    s0,#1
	vmul.f32    s1,s1,s0
	vldr        s0,|$LN11@duration_c|		; 1e+09
	vdiv.f32    s0,s1,s0
	vstr        s0,[sp,#0x20]
	add         r1,sp,#0x20
	add         r0,sp,#0x54
	bl          |??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QAA@ABM@Z|
	str         r0,[sp,#0x24]
	ldr         r3,[sp,#0x24]
	vldr        s0,[r3]
	vstr        s0,[sp]
|$LN7@duration_c|
|$LN3@duration_c|
|$LN1@duration_c|

; 445  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 446  :             }
; 447  :         }
; 448  :     }

	vldr        s0,[sp]
|$M9|
	add         sp,sp,#0x58
	pop         {r11}
	ldr         pc,[sp],#0xC
|$LN12@duration_c|
|$M13|
	__debugbreak
|$LN10@duration_c|
|$LN11@duration_c|
	DCD         0x4e6e6b28
|$M15|

	ENDP  ; |??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|, std::chrono::duration_cast<std::chrono::duration<float,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@0@Z
.text$mn	SEGMENT

|??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@0@Z| PROC ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >

; 290  :             is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) /* strengthened */ {

	push        {r0-r3}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x30
|$M4|

; 291  :         using _CD = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 292  :         return _CD(_CD(_Left).count() - _CD(_Right).count());

	ldr         r1,[sp,#0x3C]
	add         r0,sp,#0x20
	movs        r2,#8
	bl          memcpy
	add         r0,sp,#0x20
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0xC]
	str         r0,[sp,#8]
	ldr         r1,[sp,#0x40]
	add         r0,sp,#0x28
	movs        r2,#8
	bl          memcpy
	add         r0,sp,#0x28
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|
	str         r1,[sp,#0x14]
	str         r0,[sp,#0x10]
	ldr         r0,[sp,#8]
	ldr         r1,[sp,#0xC]
	ldr         r2,[sp,#0x10]
	ldr         r3,[sp,#0x14]
	subs        r2,r0,r2
	sbc         r3,r1,r3
	str         r2,[sp,#0x18]
	str         r3,[sp,#0x1C]
	add         r1,sp,#0x18
	ldr         r0,[sp,#0x38]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z|
	ldr         r3,[sp,#0x38]
	str         r3,[sp]

; 293  :     }

	ldr         r0,[sp]
|$M3|
	add         sp,sp,#0x30
	pop         {r11}
	ldr         pc,[sp],#0x14
|$M5|

	ENDP  ; |??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@0@Z|, std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBA_NXZ
.text$mn	SEGMENT

|??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBA_NXZ| PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool

; 123  :         explicit __CLR_OR_THIS_CALL operator bool() const {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 124  :             return _Ok;

	ldr         r3,[sp,#0x10]
	adds        r3,r3,#4
	ldrb        r3,[r3]
	strb        r3,[sp]

; 125  :         }

	ldrb        r0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBA_NXZ|, std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ
.text$mn	SEGMENT

|??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry

; 108  :         __CLR_OR_THIS_CALL ~sentry() noexcept {

|$M9|
	push        {r0,r1}
	push        {r7,r11,lr}
	add         r11,sp,#4
	sub         sp,sp,#0x14
	mov         r7,sp
|$M10|
	mvn         r3,#1
	strd        r3,r3,[r7,#8]

; 109  : #if !_HAS_EXCEPTIONS
; 110  :             const bool _Zero_uncaught_exceptions = true;
; 111  : #elif _HAS_DEPRECATED_UNCAUGHT_EXCEPTION
; 112  :             const bool _Zero_uncaught_exceptions = !_STD uncaught_exception(); // TRANSITION, ArchivedOS-12000909

	bl          |?uncaught_exception@std@@YA_NXZ|
	strb        r0,[r7,#1]
	ldrb        r3,[r7,#1]
	cmp         r3,#0
	bne         |$LN4@sentry|
	movs        r3,#1
	strb        r3,[r7]
	b           |$LN5@sentry|
|$LN4@sentry|
	movs        r3,#0
	strb        r3,[r7]
|$LN5@sentry|
	ldrb        r3,[r7]
	strb        r3,[r7,#2]

; 113  : #else // ^^^ _HAS_DEPRECATED_UNCAUGHT_EXCEPTION / !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION vvv
; 114  :             const bool _Zero_uncaught_exceptions = _STD uncaught_exceptions() == 0;
; 115  : #endif // !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION
; 116  : 
; 117  :             if (_Zero_uncaught_exceptions) {

	ldrb        r3,[r7,#2]
	cmp         r3,#0
	beq         |$LN2@sentry|

; 118  :                 this->_Myostr._Osfx();

	ldr         r3,[r7,#0x20]
	ldr         r0,[r3]
	ldr         r3,|$LN8@sentry|			; =|__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAXXZ|
	ldr         r3,[r3]
	blx         r3
|$LN2@sentry|

; 119  :             }
; 120  :         }

	ldr         r0,[r7,#0x20]
	bl          |??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
|$M6|
	add         sp,sp,#0x14
	pop         {r7,r11}
	ldr         pc,[sp],#0xC
|$LN7@sentry|
|$LN8@sentry|
	DCD         |__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAXXZ|
|$M11|

	ENDP  ; |??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|, std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z
.text$mn	SEGMENT

|??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z| PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry

; 91   :         explicit __CLR_OR_THIS_CALL sentry(basic_ostream& _Ostr) : _Sentry_base(_Ostr) {

|$M13|
	push        {r0,r1}
	push        {r7,r11,lr}
	add         r11,sp,#4
	sub         sp,sp,#0x1C
	mov         r7,sp
|$M16|
	mvn         r3,#1
	strd        r3,r3,[r7,#0x10]
	ldr         r1,[r7,#0x2C]
	ldr         r0,[r7,#0x28]
	bl          |??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z|
	str         r0,[r7,#0xC]
|$M14|

; 92   :             if (!_Ostr.good()) {

	ldr         r3,[r7,#0x2C]
	ldr         r3,[r3]
	adds        r3,r3,#4
	ldr         r2,[r7,#0x2C]
	ldr         r3,[r3]
	adds        r0,r2,r3
	ldr         r3,|$LN10@sentry|			; =|__imp_?good@ios_base@std@@QBA_NXZ|
	ldr         r3,[r3]
	blx         r3
	strb        r0,[r7]
	ldrb        r3,[r7]
	cmp         r3,#0
	bne         |$LN2@sentry|

; 93   :                 _Ok = false;

	ldr         r3,[r7,#0x28]
	adds        r2,r3,#4
	movs        r3,#0
	strb        r3,[r2]

; 94   :                 return;

	b           |$LN1@sentry|
|$LN2@sentry|

; 95   :             }
; 96   : 
; 97   :             const auto _Tied = _Ostr.tie();

	ldr         r3,[r7,#0x2C]
	ldr         r3,[r3]
	adds        r3,r3,#4
	ldr         r2,[r7,#0x2C]
	ldr         r3,[r3]
	adds        r0,r2,r3
	ldr         r3,|$LN12@sentry|			; =|__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBAPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ|
	ldr         r3,[r3]
	blx         r3
	str         r0,[r7,#4]

; 98   :             if (!_Tied || _Tied == &_Ostr) {

	ldr         r3,[r7,#4]
	cmp         r3,#0
	beq         |$LN4@sentry|
	ldr         r2,[r7,#4]
	ldr         r3,[r7,#0x2C]
	cmp         r2,r3
	bne         |$LN3@sentry|
|$LN4@sentry|

; 99   :                 _Ok = true;

	ldr         r3,[r7,#0x28]
	adds        r2,r3,#4
	movs        r3,#1
	strb        r3,[r2]

; 100  :                 return;

	b           |$LN1@sentry|
|$LN3@sentry|

; 101  :             }
; 102  : 
; 103  :             _Tied->flush();

	ldr         r0,[r7,#4]
	ldr         r3,|$LN11@sentry|			; =|__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV12@XZ|
	ldr         r3,[r3]
	blx         r3

; 104  :             _Ok = _Ostr.good(); // store test only after flushing tie

	ldr         r3,[r7,#0x2C]
	ldr         r3,[r3]
	adds        r3,r3,#4
	ldr         r2,[r7,#0x2C]
	ldr         r3,[r3]
	adds        r0,r2,r3
	ldr         r3,|$LN10@sentry|			; =|__imp_?good@ios_base@std@@QBA_NXZ|
	ldr         r3,[r3]
	blx         r3
	strb        r0,[r7,#1]
	ldr         r3,[r7,#0x28]
	adds        r2,r3,#4
	ldrb        r3,[r7,#1]
	strb        r3,[r2]
|$LN1@sentry|
|$M15|

; 105  :         }

	ldr         r3,[r7,#0x28]
	str         r3,[r7,#8]
	ldr         r0,[r7,#8]
|$M7|
	add         sp,sp,#0x1C
	pop         {r7,r11}
	ldr         pc,[sp],#0xC
|$LN9@sentry|
|$LN10@sentry|
	DCD         |__imp_?good@ios_base@std@@QBA_NXZ|
|$LN11@sentry|
	DCD         |__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV12@XZ|
|$LN12@sentry|
	DCD         |__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBAPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ|
|$M17|
;	COMDAT .text$x
.text$x	SEGMENT
|__unwind$6|
	push        {r4,lr}
|$M18|
	ldr         r0,[r7,#0x28]
	bl          |??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
|$M8|
	pop         {r4,pc}
|$M19|

	ENDP  ; |??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z|, std::basic_ostream<char,std::char_traits<char> >::sentry::sentry

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ
.text$mn	SEGMENT

|??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base

; 77   :         __CLR_OR_THIS_CALL ~_Sentry_base() noexcept { // destroy after unlocking

|$M7|
	push        {r0,r1}
	push        {r7,r11,lr}
	add         r11,sp,#4
	sub         sp,sp,#0x14
	mov         r7,sp
|$M8|
	mvn         r3,#1
	strd        r3,r3,[r7,#8]

; 78   :             const auto _Rdbuf = _Myostr.rdbuf();

	ldr         r3,[r7,#0x20]
	ldr         r3,[r3]
	str         r3,[r7,#4]
	ldr         r3,[r7,#4]
	ldr         r3,[r3]
	adds        r3,r3,#4
	ldr         r2,[r7,#4]
	ldr         r3,[r3]
	adds        r0,r2,r3
	ldr         r3,|$LN6@Sentry_bas|		; =|__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBAPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ|
	ldr         r3,[r3]
	blx         r3
	str         r0,[r7]

; 79   :             if (_Rdbuf) {

	ldr         r3,[r7]
	cmp         r3,#0
	beq         |$LN2@Sentry_bas|

; 80   :                 _Rdbuf->_Unlock();

	ldr         r3,[r7]
	ldr         r3,[r3]
	adds        r3,r3,#8
	ldr         r0,[r7]
	ldr         r3,[r3]
	blx         r3
|$LN2@Sentry_bas|
|$M4|

; 81   :             }
; 82   :         }

	add         sp,sp,#0x14
	pop         {r7,r11}
	ldr         pc,[sp],#0xC
|$LN5@Sentry_bas|
|$LN6@Sentry_bas|
	DCD         |__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBAPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ|
|$M9|

	ENDP  ; |??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|, std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z
.text$mn	SEGMENT

|??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z| PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base

; 70   :         __CLR_OR_THIS_CALL _Sentry_base(basic_ostream& _Ostr) : _Myostr(_Ostr) { // lock the stream buffer, if there

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x10
|$M7|
	ldr         r2,[sp,#0x18]
	ldr         r3,[sp,#0x1C]
	str         r3,[r2]

; 71   :             const auto _Rdbuf = _Myostr.rdbuf();

	ldr         r3,[sp,#0x18]
	ldr         r3,[r3]
	str         r3,[sp,#4]
	ldr         r3,[sp,#4]
	ldr         r3,[r3]
	adds        r3,r3,#4
	ldr         r2,[sp,#4]
	ldr         r3,[r3]
	adds        r0,r2,r3
	ldr         r3,|$LN6@Sentry_bas|		; =|__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBAPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ|
	ldr         r3,[r3]
	blx         r3
	str         r0,[sp]

; 72   :             if (_Rdbuf) {

	ldr         r3,[sp]
	cmp         r3,#0
	beq         |$LN2@Sentry_bas|

; 73   :                 _Rdbuf->_Lock();

	ldr         r3,[sp]
	ldr         r3,[r3]
	adds        r3,r3,#4
	ldr         r0,[sp]
	ldr         r3,[r3]
	blx         r3
|$LN2@Sentry_bas|

; 74   :             }
; 75   :         }

	ldr         r3,[sp,#0x18]
	str         r3,[sp,#8]
	ldr         r0,[sp,#8]
|$M4|
	add         sp,sp,#0x10
	pop         {r11}
	ldr         pc,[sp],#0xC
|$LN5@Sentry_bas|
|$LN6@Sentry_bas|
	DCD         |__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBAPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ|
|$M8|

	ENDP  ; |??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z|, std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?zero@?$duration_values@_J@chrono@std@@SA_JXZ
.text$mn	SEGMENT

|?zero@?$duration_values@_J@chrono@std@@SA_JXZ| PROC	; std::chrono::duration_values<__int64>::zero

; 39   :         _NODISCARD static constexpr _Rep zero() noexcept {

	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 40   :             // get zero value
; 41   :             return _Rep(0);

	movs        r3,#0
	str         r3,[sp]

; 42   :         }

	movs        r3,#0
	str         r3,[sp,#4]
	ldr         r0,[sp]
	ldr         r1,[sp,#4]
|$M3|
	add         sp,sp,#8
	pop         {r11,pc}
|$M5|

	ENDP  ; |?zero@?$duration_values@_J@chrono@std@@SA_JXZ|, std::chrono::duration_values<__int64>::zero

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0H$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@ABH@Z
.text$mn	SEGMENT

|??$?0H$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@ABH@Z| PROC ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><int,0>

; 99   :             : _MyRep(static_cast<_Rep>(_Val)) {}

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|
	ldr         r3,[sp,#0x14]
	ldr         r1,[r3]
	ldr         r3,[sp,#0x14]
	ldr         r3,[r3]
	asrs        r2,r3,#0x1F
	ldr         r3,[sp,#0x10]
	str         r3,[sp]
	ldr         r3,[sp]
	str         r1,[r3]
	ldr         r3,[sp]
	str         r2,[r3,#4]
	ldr         r3,[sp,#0x10]
	str         r3,[sp,#4]
	ldr         r0,[sp,#4]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$?0H$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@ABH@Z|, std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><int,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ??$?0A6AXXZ$$V$0A@@thread@std@@QAA@A6AXXZ@Z
.text$mn	SEGMENT

|??$?0A6AXXZ$$V$0A@@thread@std@@QAA@A6AXXZ@Z| PROC	; std::thread::thread<void (__cdecl&)(void),0>

; 87   :     _NODISCARD_CTOR_THREAD explicit thread(_Fn&& _Fx, _Args&&... _Ax) {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 88   :         _Start(_STD forward<_Fn>(_Fx), _STD forward<_Args>(_Ax)...);

	ldr         r0,[sp,#0x14]
	bl          |??$forward@A6AXXZ@std@@YAA6AXXZA6AXXZ@Z|
	str         r0,[sp]
	ldr         r1,[sp]
	ldr         r0,[sp,#0x10]
	bl          |??$_Start@A6AXXZ$$V@thread@std@@AAAXA6AXXZ@Z|

; 89   :     }

	ldr         r3,[sp,#0x10]
	str         r3,[sp,#4]
	ldr         r0,[sp,#4]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$?0A6AXXZ$$V$0A@@thread@std@@QAA@A6AXXZ@Z|, std::thread::thread<void (__cdecl&)(void),0>

; Function compile flags: /Odtp
; File D:\data\code\gaming-studio-practices\ThreadsMulti\src\Main.cpp
	.text$mn

|?notmain@@YAHXZ| PROC					; notmain

; 42   : {

|$M21|
	push        {r7,r11,lr}
	add         r11,sp,#4
	sub         sp,sp,#0x94
	mov         r7,sp
|$M24|
	mvn         r3,#1
	strd        r3,r3,[r7,#0x78]

; 43   : 
; 44   : 	std::cout << "Started thread id = " << std::this_thread::get_id() << std::endl;

	adds        r0,r7,#0x58
	bl          |?get_id@this_thread@std@@YA?AVid@thread@2@XZ|
	str         r0,[r7]
	ldr         r1,|$LN20@notmain|			; =|$SG38498|
	ldr         r3,|$LN9@notmain|			; =|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	ldr         r0,[r3]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	str         r0,[r7,#8]
	ldr         r3,[r7]
	str         r3,[r7,#4]
	ldr         r3,[r7,#4]
	ldr         r1,[r3]
	ldr         r0,[r7,#8]
	bl          |??$?6DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@Vid@thread@0@@Z|
	str         r0,[r7,#0xC]
	ldr         r1,|$LN8@notmain|			; =|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r0,[r7,#0xC]
	ldr         r3,|$LN7@notmain|			; =|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	ldr         r3,[r3]
	blx         r3

; 45   : 	std::thread worker (DoWork);

	ldr         r1,|$LN19@notmain|			; =|?DoWork@@YAXXZ|
	adds        r0,r7,#0x50
	bl          |??$?0A6AXXZ$$V$0A@@thread@std@@QAA@A6AXXZ@Z|
	str         r0,[r7,#0x5C]
|$M22|

; 46   : 
; 47   : 	std::cin.get(); 

	ldr         r3,|$LN15@notmain|			; =|__imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A|
	ldr         r0,[r3]
	ldr         r3,|$LN14@notmain|			; =|__imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAAHXZ|
	ldr         r3,[r3]
	blx         r3

; 48   : 	s_Finished = true; 

	ldr         r2,|$LN18@notmain|			; =|?s_Finished@@3_NA|
	movs        r3,#1
	strb        r3,[r2]

; 49   : 
; 50   : 	worker.join(); // wait for the thread to finish before exiting the program (otherwise the program will terminate before the thread has finished)

	adds        r0,r7,#0x50
	bl          |?join@thread@std@@QAAXXZ|

; 51   : 
; 52   : 	std::cout << "Finished." << std::endl;

	ldr         r1,|$LN17@notmain|			; =|$SG38499|
	ldr         r3,|$LN9@notmain|			; =|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	ldr         r0,[r3]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	str         r0,[r7,#0x10]
	ldr         r1,|$LN8@notmain|			; =|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r0,[r7,#0x10]
	ldr         r3,|$LN7@notmain|			; =|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	ldr         r3,[r3]
	blx         r3

; 53   : 
; 54   : 
; 55   : 	std::cout << "Press enter to start measurement...";

	ldr         r1,|$LN16@notmain|			; =|$SG38500|
	ldr         r3,|$LN9@notmain|			; =|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	ldr         r0,[r3]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|

; 56   : 	std::cin.get();

	ldr         r3,|$LN15@notmain|			; =|__imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A|
	ldr         r0,[r3]
	ldr         r3,|$LN14@notmain|			; =|__imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAAHXZ|
	ldr         r3,[r3]
	blx         r3

; 57   : 
; 58   : 	auto start = std::chrono::high_resolution_clock::now();

	adds        r0,r7,#0x68
	bl          |?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ|

; 59   : 
; 60   : 	// sleep for 1 second
; 61   : 	std::this_thread::sleep_for(std::chrono::seconds(1));

	movs        r3,#1
	str         r3,[r7,#0x14]
	adds        r1,r7,#0x14
	adds        r0,r7,#0x80
	bl          |??$?0H$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@ABH@Z|
	str         r0,[r7,#0x18]
	ldr         r0,[r7,#0x18]
	bl          |??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXABV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z|

; 62   : 
; 63   : 	auto end = std::chrono::high_resolution_clock::now();

	adds        r0,r7,#0x70
	bl          |?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ|

; 64   : 	std::chrono::duration<float> duration = end - start;

	adds        r2,r7,#0x68
	adds        r1,r7,#0x70
	adds        r0,r7,#0x88
	bl          |??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|
	str         r0,[r7,#0x1C]
	ldr         r1,[r7,#0x1C]
	adds        r0,r7,#0x20
	bl          |??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|

; 65   : 
; 66   : 	// print duration to console
; 67   : 	std::cout << "Duration: " << duration.count() << " seconds" << std::endl;

	adds        r0,r7,#0x20
	bl          |?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QBAMXZ|
	vstr        s0,[r7,#0x24]
	ldr         r1,|$LN13@notmain|			; =|$SG38502|
	ldr         r3,|$LN9@notmain|			; =|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	ldr         r0,[r3]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	str         r0,[r7,#0x28]
	vldr        s0,[r7,#0x24]
	ldr         r0,[r7,#0x28]
	ldr         r3,|$LN12@notmain|			; =|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@M@Z|
	ldr         r3,[r3]
	blx         r3
	str         r0,[r7,#0x2C]
	ldr         r1,|$LN11@notmain|			; =|$SG38501|
	ldr         r0,[r7,#0x2C]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	str         r0,[r7,#0x30]
	ldr         r1,|$LN8@notmain|			; =|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r0,[r7,#0x30]
	ldr         r3,|$LN7@notmain|			; =|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	ldr         r3,[r3]
	blx         r3

; 68   : 
; 69   : 	std::cout << "Finished thread id = " << std::this_thread::get_id() << std::endl;

	adds        r0,r7,#0x60
	bl          |?get_id@this_thread@std@@YA?AVid@thread@2@XZ|
	str         r0,[r7,#0x34]
	ldr         r1,|$LN10@notmain|			; =|$SG38503|
	ldr         r3,|$LN9@notmain|			; =|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	ldr         r0,[r3]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	str         r0,[r7,#0x3C]
	ldr         r3,[r7,#0x34]
	str         r3,[r7,#0x38]
	ldr         r3,[r7,#0x38]
	ldr         r1,[r3]
	ldr         r0,[r7,#0x3C]
	bl          |??$?6DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@Vid@thread@0@@Z|
	str         r0,[r7,#0x40]
	ldr         r1,|$LN8@notmain|			; =|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r0,[r7,#0x40]
	ldr         r3,|$LN7@notmain|			; =|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	ldr         r3,[r3]
	blx         r3

; 70   : 	return 0;

	movs        r3,#0
	str         r3,[r7,#0x44]
|$M23|
	adds        r0,r7,#0x50
	bl          |??1thread@std@@QAA@XZ|
	ldr         r3,[r7,#0x44]
	str         r3,[r7,#0x48]

; 71   : }

	ldr         r0,[r7,#0x48]
|$M4|
	add         sp,sp,#0x94
	pop         {r7,r11,pc}
|$LN6@notmain|
|$LN7@notmain|
	DCD         |__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
|$LN8@notmain|
	DCD         |??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
|$LN9@notmain|
	DCD         |__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
|$LN10@notmain|
	DCD         |$SG38503|
|$LN11@notmain|
	DCD         |$SG38501|
|$LN12@notmain|
	DCD         |__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@M@Z|
|$LN13@notmain|
	DCD         |$SG38502|
|$LN14@notmain|
	DCD         |__imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAAHXZ|
|$LN15@notmain|
	DCD         |__imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A|
|$LN16@notmain|
	DCD         |$SG38500|
|$LN17@notmain|
	DCD         |$SG38499|
|$LN18@notmain|
	DCD         |?s_Finished@@3_NA|
|$LN19@notmain|
	DCD         |?DoWork@@YAXXZ|
|$LN20@notmain|
	DCD         |$SG38498|
|$M25|
	.text$x
|__unwind$3|
	push        {r4,lr}
|$M26|
	adds        r0,r7,#0x50
	bl          |??1thread@std@@QAA@XZ|
|$M5|
	pop         {r4,pc}
|$M27|

	ENDP  ; |?notmain@@YAHXZ|, notmain

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXABV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z
.text$mn	SEGMENT

|??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXABV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z| PROC ; std::this_thread::sleep_for<__int64,std::ratio<1,1> >

; 203  :     void sleep_for(const chrono::duration<_Rep, _Period>& _Rel_time) {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x10
|$M4|

; 204  :         sleep_until(_To_absolute_time(_Rel_time));

	ldr         r1,[sp,#0x18]
	add         r0,sp,#8
	bl          |??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PABV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z|
	str         r0,[sp]
	ldr         r0,[sp]
	bl          |??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z|
|$M3|

; 205  :     }

	add         sp,sp,#0x10
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXABV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z|, std::this_thread::sleep_for<__int64,std::ratio<1,1> >

; Function compile flags: /Odtp
; File D:\data\code\gaming-studio-practices\ThreadsMulti\src\Main.cpp
	.text$mn

|?DoWork@@YAXXZ| PROC					; DoWork

; 25   : {

|$M16|
	push        {r7,r11,lr}
	add         r11,sp,#4
	sub         sp,sp,#0x64
	mov         r7,sp
|$M19|
	mvn         r3,#1
	strd        r3,r3,[r7,#0x38]

; 26   : 	Timer timer;

	adds        r0,r7,#0x48
	bl          |??0Timer@@QAA@XZ|
	str         r0,[r7,#0x28]
|$M17|

; 27   : 	using namespace std::chrono_literals;
; 28   : 	std::cout << "Started thread id = " << std::this_thread::get_id() << std::endl;

	adds        r0,r7,#0x2C
	bl          |?get_id@this_thread@std@@YA?AVid@thread@2@XZ|
	str         r0,[r7]
	ldr         r1,|$LN15@DoWork|			; =|$SG38432|
	ldr         r3,|$LN11@DoWork|			; =|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	ldr         r0,[r3]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	str         r0,[r7,#8]
	ldr         r3,[r7]
	str         r3,[r7,#4]
	ldr         r3,[r7,#4]
	ldr         r1,[r3]
	ldr         r0,[r7,#8]
	bl          |??$?6DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@Vid@thread@0@@Z|
	str         r0,[r7,#0xC]
	ldr         r1,|$LN10@DoWork|			; =|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r0,[r7,#0xC]
	ldr         r3,|$LN9@DoWork|			; =|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	ldr         r3,[r3]
	blx         r3
|$LN2@DoWork|

; 29   : 
; 30   : 	while (!s_Finished)

	ldr         r3,|$LN14@DoWork|			; =|?s_Finished@@3_NA|
	ldrb        r3,[r3]
	cmp         r3,#0
	bne         |$LN3@DoWork|

; 31   : 	{
; 32   : 		std::cout << "Working..." << std::endl;

	ldr         r1,|$LN13@DoWork|			; =|$SG38433|
	ldr         r3,|$LN11@DoWork|			; =|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	ldr         r0,[r3]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	str         r0,[r7,#0x10]
	ldr         r1,|$LN10@DoWork|			; =|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r0,[r7,#0x10]
	ldr         r3,|$LN9@DoWork|			; =|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	ldr         r3,[r3]
	blx         r3

; 33   : 
; 34   : 		// sleep for 1 second (1000 milliseconds)
; 35   :         std::this_thread::sleep_for(1s);

	movs        r2,#1
	movs        r3,#0
	adds        r0,r7,#0x40
	bl          |??__Ks@chrono_literals@literals@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@chrono@3@_K@Z|
	str         r0,[r7,#0x14]
	ldr         r0,[r7,#0x14]
	bl          |??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXABV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z|

; 36   : 	}

	b           |$LN2@DoWork|
|$LN3@DoWork|

; 37   : 
; 38   : 	std::cout << "Finished thread id = " << std::this_thread::get_id() << std::endl;

	adds        r0,r7,#0x30
	bl          |?get_id@this_thread@std@@YA?AVid@thread@2@XZ|
	str         r0,[r7,#0x18]
	ldr         r1,|$LN12@DoWork|			; =|$SG38434|
	ldr         r3,|$LN11@DoWork|			; =|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	ldr         r0,[r3]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	str         r0,[r7,#0x20]
	ldr         r3,[r7,#0x18]
	str         r3,[r7,#0x1C]
	ldr         r3,[r7,#0x1C]
	ldr         r1,[r3]
	ldr         r0,[r7,#0x20]
	bl          |??$?6DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@Vid@thread@0@@Z|
	str         r0,[r7,#0x24]
	ldr         r1,|$LN10@DoWork|			; =|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r0,[r7,#0x24]
	ldr         r3,|$LN9@DoWork|			; =|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	ldr         r3,[r3]
	blx         r3
|$M18|

; 39   : }

	adds        r0,r7,#0x48
	bl          |??1Timer@@QAA@XZ|
|$M6|
	add         sp,sp,#0x64
	pop         {r7,r11,pc}
|$LN8@DoWork|
|$LN9@DoWork|
	DCD         |__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
|$LN10@DoWork|
	DCD         |??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
|$LN11@DoWork|
	DCD         |__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
|$LN12@DoWork|
	DCD         |$SG38434|
|$LN13@DoWork|
	DCD         |$SG38433|
|$LN14@DoWork|
	DCD         |?s_Finished@@3_NA|
|$LN15@DoWork|
	DCD         |$SG38432|
|$M20|
	.text$x
|__unwind$5|
	push        {r4,lr}
|$M21|
	adds        r0,r7,#0x48
	bl          |??1Timer@@QAA@XZ|
|$M7|
	pop         {r4,pc}
|$M22|

	ENDP  ; |?DoWork@@YAXXZ|, DoWork

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
;	COMDAT ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z
.text$mn	SEGMENT

|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z| PROC ; std::endl<char,std::char_traits<char> >

; 1005 :     basic_ostream<_Elem, _Traits>& _Ostr) { // insert newline and flush stream

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M10|

; 1006 :     _Ostr.put(_Ostr.widen('\n'));

	movs        r1,#0xA
	ldr         r3,[sp,#0x10]
	ldr         r3,[r3]
	adds        r3,r3,#4
	ldr         r2,[sp,#0x10]
	ldr         r3,[r3]
	adds        r0,r2,r3
	ldr         r3,|$LN7@endl|			; =|__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBADD@Z|
	ldr         r3,[r3]
	blx         r3
	strb        r0,[sp]
	ldrsb       r1,[sp]
	ldr         r0,[sp,#0x10]
	ldr         r3,|$LN6@endl|			; =|__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV12@D@Z|
	ldr         r3,[r3]
	blx         r3

; 1007 :     _Ostr.flush();

	ldr         r0,[sp,#0x10]
	ldr         r3,|$LN5@endl|			; =|__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV12@XZ|
	ldr         r3,[r3]
	blx         r3

; 1008 :     return _Ostr;

	ldr         r3,[sp,#0x10]
	str         r3,[sp,#4]

; 1009 : }

	ldr         r0,[sp,#4]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$LN8@endl|
|$M9|
	__debugbreak
|$LN4@endl|
|$LN5@endl|
	DCD         |__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV12@XZ|
|$LN6@endl|
	DCD         |__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV12@D@Z|
|$LN7@endl|
	DCD         |__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBADD@Z|
|$M11|

	ENDP  ; |??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|, std::endl<char,std::char_traits<char> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ??$?6DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@Vid@thread@0@@Z
.text$mn	SEGMENT

|??$?6DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@Vid@thread@0@@Z| PROC ; std::operator<<<char,std::char_traits<char> >

; 273  : basic_ostream<_Ch, _Tr>& operator<<(basic_ostream<_Ch, _Tr>& _Str, thread::id _Id) {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M8|

; 274  :     return _Str << _Id._Id;

	ldr         r1,[sp,#0x14]
	ldr         r0,[sp,#0x10]
	ldr         r3,|$LN5@operator|			; =|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	ldr         r3,[r3]
	blx         r3
	str         r0,[sp]
	ldr         r3,[sp]
	str         r3,[sp,#4]

; 275  : }

	ldr         r0,[sp,#4]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$LN6@operator|
|$M7|
	__debugbreak
|$LN4@operator|
|$LN5@operator|
	DCD         |__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
|$M9|

	ENDP  ; |??$?6DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@Vid@thread@0@@Z|, std::operator<<<char,std::char_traits<char> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
.text$mn	SEGMENT

|??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z| PROC ; std::operator<<<std::char_traits<char> >

; 761  : basic_ostream<char, _Traits>& operator<<(basic_ostream<char, _Traits>& _Ostr, const char* _Val) {

|$M46|
	push        {r0,r1}
	push        {r4,r7,r11,lr}
	add         r11,sp,#8
	sub         sp,sp,#0xE8
	mov         r7,sp
|$M54|
	mvn         r3,#1
	strd        r3,r3,[r7,#0xE0]

; 762  :     // insert NTBS into char stream
; 763  :     using _Elem = char;
; 764  :     using _Myos = basic_ostream<_Elem, _Traits>;
; 765  : 
; 766  :     ios_base::iostate _State = ios_base::goodbit;

	movs        r3,#0
	str         r3,[r7]

; 767  :     streamsize _Count        = static_cast<streamsize>(_Traits::length(_Val));

	ldr         r0,[r7,#0xFC]
	bl          |?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z|
	str         r0,[r7,#0x6C]
	ldr         r3,[r7,#0x6C]
	str         r3,[r7,#0x18]
	movs        r3,#0
	str         r3,[r7,#0x1C]

; 768  :     streamsize _Pad          = _Ostr.width() <= 0 || _Ostr.width() <= _Count ? 0 : _Ostr.width() - _Count;

	ldr         r3,[r7,#0xF8]
	ldr         r3,[r3]
	adds        r3,r3,#4
	ldr         r2,[r7,#0xF8]
	ldr         r3,[r3]
	adds        r0,r2,r3
	ldr         r3,|$LN43@operator|			; =|__imp_?width@ios_base@std@@QBA_JXZ|
	ldr         r3,[r3]
	blx         r3
	str         r1,[r7,#0x7C]
	str         r0,[r7,#0x78]
	ldr         r3,[r7,#0x78]
	str         r3,[r7,#0x80]
	ldr         r3,[r7,#0x7C]
	str         r3,[r7,#0x84]
	ldr         r3,[r7,#0x80]
	str         r3,[r7,#0x70]
	ldr         r3,[r7,#0x84]
	cmp         r3,#0
	blt         |$LN17@operator|
	bgt         |$LN24@operator|
	ldr         r3,[r7,#0x70]
	cmp         r3,#0
	bls         |$LN17@operator|
|$LN24@operator|
	ldr         r3,[r7,#0xF8]
	ldr         r3,[r3]
	adds        r3,r3,#4
	ldr         r2,[r7,#0xF8]
	ldr         r3,[r3]
	adds        r0,r2,r3
	ldr         r3,|$LN43@operator|			; =|__imp_?width@ios_base@std@@QBA_JXZ|
	ldr         r3,[r3]
	blx         r3
	str         r1,[r7,#0x8C]
	str         r0,[r7,#0x88]
	ldr         r3,[r7,#0x88]
	str         r3,[r7,#0x90]
	ldr         r3,[r7,#0x8C]
	str         r3,[r7,#0x94]
	ldr         r3,[r7,#0x18]
	str         r3,[r7,#0x98]
	ldr         r3,[r7,#0x1C]
	str         r3,[r7,#0x9C]
	ldr         r3,[r7,#0x90]
	str         r3,[r7,#0x74]
	ldr         r3,[r7,#0x98]
	str         r3,[r7,#0x28]
	ldr         r2,[r7,#0x94]
	ldr         r3,[r7,#0x9C]
	cmp         r2,r3
	blt         |$LN17@operator|
	bgt         |$LN25@operator|
	ldr         r2,[r7,#0x74]
	ldr         r3,[r7,#0x28]
	cmp         r2,r3
	bls         |$LN17@operator|
|$LN25@operator|
	ldr         r3,[r7,#0xF8]
	ldr         r3,[r3]
	adds        r3,r3,#4
	ldr         r2,[r7,#0xF8]
	ldr         r3,[r3]
	adds        r0,r2,r3
	ldr         r3,|$LN43@operator|			; =|__imp_?width@ios_base@std@@QBA_JXZ|
	ldr         r3,[r3]
	blx         r3
	str         r1,[r7,#0xA4]
	str         r0,[r7,#0xA0]
	ldr         r0,[r7,#0xA0]
	ldr         r1,[r7,#0xA4]
	ldr         r2,[r7,#0x18]
	ldr         r3,[r7,#0x1C]
	subs        r2,r0,r2
	sbc         r3,r1,r3
	str         r2,[r7,#0x20]
	str         r3,[r7,#0x24]
	b           |$LN18@operator|
|$LN17@operator|
	movs        r3,#0
	str         r3,[r7,#0x20]
	movs        r3,#0
	str         r3,[r7,#0x24]
|$LN18@operator|
	ldr         r3,[r7,#0x20]
	str         r3,[r7,#0x10]
	ldr         r3,[r7,#0x24]
	str         r3,[r7,#0x14]

; 769  :     const typename _Myos::sentry _Ok(_Ostr);

	ldr         r1,[r7,#0xF8]
	adds        r0,r7,#0xD0
	bl          |??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z|
	str         r0,[r7,#0xD8]
|$M47|

; 770  : 
; 771  :     if (!_Ok) {

	adds        r0,r7,#0xD0
	bl          |??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBA_NXZ|
	strb        r0,[r7,#8]
	ldrb        r3,[r7,#8]
	cmp         r3,#0
	bne         |$LN8@operator|

; 772  :         _State |= ios_base::badbit;

	ldr         r3,[r7]
	orr         r3,r3,#4
	str         r3,[r7]

; 773  :     } else { // state okay, insert

	b           |$LN9@operator|
|$LN8@operator|
|$M48|

; 774  :         _TRY_IO_BEGIN
; 775  :         if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left) {

	ldr         r3,[r7,#0xF8]
	ldr         r3,[r3]
	adds        r3,r3,#4
	ldr         r2,[r7,#0xF8]
	ldr         r3,[r3]
	adds        r0,r2,r3
	ldr         r3,|$LN42@operator|			; =|__imp_?flags@ios_base@std@@QBAHXZ|
	ldr         r3,[r3]
	blx         r3
	str         r0,[r7,#0x2C]
	ldr         r3,[r7,#0x2C]
	and         r3,r3,#0x1C0
	cmp         r3,#0x40
	beq         |$LN11@operator|

; 776  :             for (; 0 < _Pad; --_Pad) { // pad on left

	b           |$LN4@operator|
|$LN2@operator|
	ldr         r2,[r7,#0x10]
	ldr         r1,[r7,#0x14]
	movs        r3,#0
	subs        r2,r2,#1
	sbc         r3,r1,r3
	str         r2,[r7,#0x10]
	str         r3,[r7,#0x14]
|$LN4@operator|
	ldr         r3,[r7,#0x10]
	str         r3,[r7,#0xA8]
	ldr         r3,[r7,#0x14]
	str         r3,[r7,#0xAC]
	ldr         r3,[r7,#0xA8]
	str         r3,[r7,#0x30]
	ldr         r3,[r7,#0xAC]
	cmp         r3,#0
	blt         |$LN3@operator|
	bgt         |$LN26@operator|
	ldr         r3,[r7,#0x30]
	cmp         r3,#0
	bls         |$LN3@operator|
|$LN26@operator|

; 777  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	ldr         r3,[r7,#0xF8]
	ldr         r3,[r3]
	adds        r3,r3,#4
	ldr         r2,[r7,#0xF8]
	ldr         r3,[r3]
	adds        r0,r2,r3
	ldr         r3,|$LN40@operator|			; =|__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBADXZ|
	ldr         r3,[r3]
	blx         r3
	strb        r0,[r7,#4]
	ldr         r3,[r7,#0xF8]
	ldr         r3,[r3]
	adds        r3,r3,#4
	ldr         r2,[r7,#0xF8]
	ldr         r3,[r3]
	adds        r0,r2,r3
	ldr         r3,|$LN39@operator|			; =|__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBAPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ|
	ldr         r3,[r3]
	blx         r3
	str         r0,[r7,#0x34]
	ldrsb       r1,[r7,#4]
	ldr         r0,[r7,#0x34]
	ldr         r3,|$LN38@operator|			; =|__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAAHD@Z|
	ldr         r3,[r3]
	blx         r3
	str         r0,[r7,#0x38]
	ldr         r3,[r7,#0x38]
	str         r3,[r7,#0x3C]
	bl          |?eof@?$_Narrow_char_traits@DH@std@@SAHXZ|
	str         r0,[r7,#0x40]
	adds        r1,r7,#0x3C
	adds        r0,r7,#0x40
	bl          |?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z|
	strb        r0,[r7,#5]
	ldrb        r3,[r7,#5]
	cmp         r3,#0
	beq         |$LN12@operator|

; 778  :                     _State |= ios_base::badbit; // insertion failed, quit

	ldr         r3,[r7]
	orr         r3,r3,#4
	str         r3,[r7]

; 779  :                     break;

	b           |$LN3@operator|
|$LN12@operator|

; 780  :                 }
; 781  :             }

	b           |$LN2@operator|
|$LN3@operator|
|$LN11@operator|

; 782  :         }
; 783  : 
; 784  :         if (_State == ios_base::goodbit && _Ostr.rdbuf()->sputn(_Val, _Count) != _Count) {

	ldr         r3,[r7]
	cmp         r3,#0
	bne         |$LN13@operator|
	ldr         r3,[r7,#0xF8]
	ldr         r3,[r3]
	adds        r3,r3,#4
	ldr         r2,[r7,#0xF8]
	ldr         r3,[r3]
	adds        r0,r2,r3
	ldr         r3,|$LN39@operator|			; =|__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBAPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ|
	ldr         r3,[r3]
	blx         r3
	str         r0,[r7,#0x44]
	ldr         r2,[r7,#0x18]
	ldr         r3,[r7,#0x1C]
	ldr         r1,[r7,#0xFC]
	ldr         r0,[r7,#0x44]
	ldr         r4,|$LN41@operator|			; =|__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAA_JPBD_J@Z|
	ldr         r4,[r4]
	blx         r4
	str         r1,[r7,#0xB4]
	str         r0,[r7,#0xB0]
	ldr         r3,[r7,#0xB0]
	str         r3,[r7,#0xB8]
	ldr         r3,[r7,#0xB4]
	str         r3,[r7,#0xBC]
	ldr         r3,[r7,#0x18]
	str         r3,[r7,#0xC0]
	ldr         r3,[r7,#0x1C]
	str         r3,[r7,#0xC4]
	ldr         r3,[r7,#0xBC]
	str         r3,[r7,#0x48]
	ldr         r3,[r7,#0xC4]
	str         r3,[r7,#0x4C]
	ldr         r2,[r7,#0xB8]
	ldr         r3,[r7,#0xC0]
	cmp         r2,r3
	bne         |$LN27@operator|
	ldr         r2,[r7,#0x48]
	ldr         r3,[r7,#0x4C]
	cmp         r2,r3
	beq         |$LN13@operator|
|$LN27@operator|

; 785  :             _State |= ios_base::badbit;

	ldr         r3,[r7]
	orr         r3,r3,#4
	str         r3,[r7]
|$LN13@operator|

; 786  :         }
; 787  : 
; 788  :         if (_State == ios_base::goodbit) {

	ldr         r3,[r7]
	cmp         r3,#0
	bne         |$LN14@operator|

; 789  :             for (; 0 < _Pad; --_Pad) { // pad on right

	b           |$LN7@operator|
|$LN5@operator|
	ldr         r2,[r7,#0x10]
	ldr         r1,[r7,#0x14]
	movs        r3,#0
	subs        r2,r2,#1
	sbc         r3,r1,r3
	str         r2,[r7,#0x10]
	str         r3,[r7,#0x14]
|$LN7@operator|
	ldr         r3,[r7,#0x10]
	str         r3,[r7,#0xC8]
	ldr         r3,[r7,#0x14]
	str         r3,[r7,#0xCC]
	ldr         r3,[r7,#0xC8]
	str         r3,[r7,#0x50]
	ldr         r3,[r7,#0xCC]
	cmp         r3,#0
	blt         |$LN6@operator|
	bgt         |$LN28@operator|
	ldr         r3,[r7,#0x50]
	cmp         r3,#0
	bls         |$LN6@operator|
|$LN28@operator|

; 790  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	ldr         r3,[r7,#0xF8]
	ldr         r3,[r3]
	adds        r3,r3,#4
	ldr         r2,[r7,#0xF8]
	ldr         r3,[r3]
	adds        r0,r2,r3
	ldr         r3,|$LN40@operator|			; =|__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBADXZ|
	ldr         r3,[r3]
	blx         r3
	strb        r0,[r7,#6]
	ldr         r3,[r7,#0xF8]
	ldr         r3,[r3]
	adds        r3,r3,#4
	ldr         r2,[r7,#0xF8]
	ldr         r3,[r3]
	adds        r0,r2,r3
	ldr         r3,|$LN39@operator|			; =|__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBAPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ|
	ldr         r3,[r3]
	blx         r3
	str         r0,[r7,#0x54]
	ldrsb       r1,[r7,#6]
	ldr         r0,[r7,#0x54]
	ldr         r3,|$LN38@operator|			; =|__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAAHD@Z|
	ldr         r3,[r3]
	blx         r3
	str         r0,[r7,#0x58]
	ldr         r3,[r7,#0x58]
	str         r3,[r7,#0x5C]
	bl          |?eof@?$_Narrow_char_traits@DH@std@@SAHXZ|
	str         r0,[r7,#0x60]
	adds        r1,r7,#0x5C
	adds        r0,r7,#0x60
	bl          |?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z|
	strb        r0,[r7,#7]
	ldrb        r3,[r7,#7]
	cmp         r3,#0
	beq         |$LN15@operator|

; 791  :                     _State |= ios_base::badbit; // insertion failed, quit

	ldr         r3,[r7]
	orr         r3,r3,#4
	str         r3,[r7]

; 792  :                     break;

	b           |$LN6@operator|
|$LN15@operator|

; 793  :                 }
; 794  :             }

	b           |$LN5@operator|
|$LN6@operator|
|$LN14@operator|

; 795  :         }
; 796  : 
; 797  :         _Ostr.width(0);

	movs        r2,#0
	movs        r3,#0
	ldr         r1,[r7,#0xF8]
	ldr         r1,[r1]
	adds        r1,r1,#4
	ldr         r0,[r7,#0xF8]
	ldr         r1,[r1]
	add         r0,r0,r1
	ldr         r1,|$LN37@operator|			; =|__imp_?width@ios_base@std@@QAA_J_J@Z|
	ldr         r1,[r1]
	blx         r1
|$M49|
	b           |$LN22@operator|
|$LN23@operator|
|$LN22@operator|
|$LN9@operator|

; 799  :     }
; 800  : 
; 801  :     _Ostr.setstate(_State);

	movs        r2,#0
	ldr         r1,[r7]
	ldr         r3,[r7,#0xF8]
	ldr         r3,[r3]
	adds        r3,r3,#4
	ldr         r0,[r7,#0xF8]
	ldr         r3,[r3]
	add         r0,r0,r3
	ldr         r3,|$LN36@operator|			; =|__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAAXH_N@Z|
	ldr         r3,[r3]
	blx         r3

; 802  :     return _Ostr;

	ldr         r3,[r7,#0xF8]
	str         r3,[r7,#0x64]
|$M50|
	adds        r0,r7,#0xD0
	bl          |??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
	ldr         r3,[r7,#0x64]
	str         r3,[r7,#0x68]

; 803  : }

	ldr         r0,[r7,#0x68]
|$M29|
	add         sp,sp,#0xE8
	pop         {r4,r7,r11}
	ldr         pc,[sp],#0xC
|$LN44@operator|
|$M45|
|$M51|
	__debugbreak
|$LN35@operator|
|$LN36@operator|
	DCD         |__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAAXH_N@Z|
|$LN37@operator|
	DCD         |__imp_?width@ios_base@std@@QAA_J_J@Z|
|$LN38@operator|
	DCD         |__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAAHD@Z|
|$LN39@operator|
	DCD         |__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBAPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ|
|$LN40@operator|
	DCD         |__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBADXZ|
|$LN41@operator|
	DCD         |__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAA_JPBD_J@Z|
|$LN42@operator|
	DCD         |__imp_?flags@ios_base@std@@QBAHXZ|
|$LN43@operator|
	DCD         |__imp_?width@ios_base@std@@QBA_JXZ|
|$M55|
;	COMDAT .text$x
.text$x	SEGMENT
|__catch$20|

; 798  :         _CATCH_IO_(ios_base, _Ostr)

	push        {r4,lr}
|$M56|
|$M52|
	movs        r2,#1
	movs        r1,#4
	ldr         r3,[r7,#0xF8]
	ldr         r3,[r3]
	adds        r3,r3,#4
	ldr         r0,[r7,#0xF8]
	ldr         r3,[r3]
	add         r0,r0,r3
	ldr         r3,|$LN34@operator|			; =|__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAAXH_N@Z|
	ldr         r3,[r3]
	blx         r3
|$M53|
	ldr         r0,|$LN33@operator|			; =|$LN23@operator|
|$M30|
	pop         {r4,pc}
|$LN32@operator|
|$LN33@operator|
	DCD         |$LN23@operator|
|$LN34@operator|
	DCD         |__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAAXH_N@Z|
|$M57|
|__unwind$21|
	push        {r4,lr}
|$M58|
	adds        r0,r7,#0xD0
	bl          |??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
|$M31|
	pop         {r4,pc}
|$M59|

	ENDP  ; |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|, std::operator<<<std::char_traits<char> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
.text$mn	SEGMENT

|??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| PROC ; std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><__int64,std::ratio<1,1000000000>,0>

; 107  :             : _MyRep(_CHRONO duration_cast<duration>(_Dur).count()) {}

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x10
|$M4|
	ldr         r0,[sp,#0x1C]
	bl          |??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|
	vstr        s0,[sp]
	vldr        s0,[sp]
	vstr        s0,[sp,#4]
	add         r0,sp,#4
	bl          |?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QBAMXZ|
	vstr        s0,[sp,#8]
	ldr         r3,[sp,#0x18]
	vldr        s0,[sp,#8]
	vstr        s0,[r3]
	ldr         r3,[sp,#0x18]
	str         r3,[sp,#0xC]
	ldr         r0,[sp,#0xC]
|$M3|
	add         sp,sp,#0x10
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|, std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><__int64,std::ratio<1,1000000000>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
.text$mn	SEGMENT

|??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z| PROC ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; 549  :             is_arithmetic_v<typename _Duration1::rep>&& is_arithmetic_v<typename _Duration2::rep>) /* strengthened */ {

	push        {r0-r3}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x20
|$M4|

; 550  :         return _Left.time_since_epoch() - _Right.time_since_epoch();

	add         r1,sp,#0x10
	ldr         r0,[sp,#0x30]
	bl          |?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ|
	str         r0,[sp]
	add         r1,sp,#0x18
	ldr         r0,[sp,#0x2C]
	bl          |?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ|
	str         r0,[sp,#4]
	ldr         r2,[sp]
	ldr         r1,[sp,#4]
	ldr         r0,[sp,#0x28]
	bl          |??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV201@0@Z|
	ldr         r3,[sp,#0x28]
	str         r3,[sp,#8]

; 551  :     }

	ldr         r0,[sp,#8]
|$M3|
	add         sp,sp,#0x20
	pop         {r11}
	ldr         pc,[sp],#0x14
|$M5|

	ENDP  ; |??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|, std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; Function compile flags: /Odtp
; File D:\data\code\gaming-studio-practices\ThreadsMulti\src\Main.cpp
;	COMDAT ??1Timer@@QAA@XZ
.text$mn	SEGMENT

|??1Timer@@QAA@XZ| PROC					; Timer::~Timer

; 16   : 	{

|$M12|
	push        {r0,r1}
	push        {r7,r11,lr}
	add         r11,sp,#4
	sub         sp,sp,#0x3C
	mov         r7,sp
|$M13|
	mvn         r3,#1
	strd        r3,r3,[r7,#0x20]

; 17   : 		end = std::chrono::high_resolution_clock::now();

	adds        r0,r7,#0x28
	bl          |?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ|
	str         r0,[r7]
	ldr         r1,[r7]
	ldr         r3,[r7,#0x48]
	add         r0,r3,#8
	movs        r2,#8
	bl          memcpy

; 18   : 		duration = end - start;

	ldr         r2,[r7,#0x48]
	ldr         r3,[r7,#0x48]
	add         r1,r3,#8
	adds        r0,r7,#0x30
	bl          |??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|
	str         r0,[r7,#4]
	ldr         r1,[r7,#4]
	adds        r0,r7,#8
	bl          |??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|
	ldr         r3,[r7,#0x48]
	adds        r3,r3,#0x10
	vldr        s0,[r7,#8]
	vstr        s0,[r3]

; 19   : 		float ms = duration.count() * 1000.0f;

	ldr         r3,[r7,#0x48]
	add         r0,r3,#0x10
	bl          |?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QBAMXZ|
	vstr        s0,[r7,#0xC]
	vldr        s1,[r7,#0xC]
	vldr        s0,|$LN11@Timer|			; 1000
	vmul.f32    s0,s1,s0
	vstr        s0,[r7,#0x10]

; 20   : 		std::cout << "Timer took " << ms << "ms" << std::endl;

	ldr         r1,|$LN10@Timer|			; =|??_C@_0M@LKHJFMHJ@Timer?5took?5@|
	ldr         r3,|$LN9@Timer|			; =|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	ldr         r0,[r3]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	str         r0,[r7,#0x14]
	vldr        s0,[r7,#0x10]
	ldr         r0,[r7,#0x14]
	ldr         r3,|$LN8@Timer|			; =|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@M@Z|
	ldr         r3,[r3]
	blx         r3
	str         r0,[r7,#0x18]
	ldr         r1,|$LN7@Timer|			; =|??_C@_02EEKDFEKL@ms@|
	ldr         r0,[r7,#0x18]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	str         r0,[r7,#0x1C]
	ldr         r1,|$LN6@Timer|			; =|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r0,[r7,#0x1C]
	ldr         r3,|$LN5@Timer|			; =|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	ldr         r3,[r3]
	blx         r3
|$M3|

; 21   : 	}

	add         sp,sp,#0x3C
	pop         {r7,r11}
	ldr         pc,[sp],#0xC
|$LN4@Timer|
|$LN5@Timer|
	DCD         |__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
|$LN6@Timer|
	DCD         |??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
|$LN7@Timer|
	DCD         |??_C@_02EEKDFEKL@ms@|
|$LN8@Timer|
	DCD         |__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@M@Z|
|$LN9@Timer|
	DCD         |__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
|$LN10@Timer|
	DCD         |??_C@_0M@LKHJFMHJ@Timer?5took?5@|
|$LN11@Timer|
	DCD         0x447a0000
|$M14|

	ENDP  ; |??1Timer@@QAA@XZ|, Timer::~Timer

; Function compile flags: /Odtp
; File D:\data\code\gaming-studio-practices\ThreadsMulti\src\Main.cpp
;	COMDAT ??0Timer@@QAA@XZ
.text$mn	SEGMENT

|??0Timer@@QAA@XZ| PROC					; Timer::Timer

; 11   : 	Timer()

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x10
|$M4|
	ldr         r0,[sp,#0x18]
	bl          |??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAA@XZ|
	ldr         r3,[sp,#0x18]
	add         r0,r3,#8
	bl          |??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAA@XZ|

; 10   : 	std::chrono::duration<float> duration{};

	movs        r2,#4
	movs        r1,#0
	ldr         r3,[sp,#0x18]
	add         r0,r3,#0x10
	bl          memset

; 12   : 	{
; 13   : 		start = std::chrono::high_resolution_clock::now();

	add         r0,sp,#8
	bl          |?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ|
	str         r0,[sp]
	ldr         r1,[sp]
	ldr         r0,[sp,#0x18]
	movs        r2,#8
	bl          memcpy

; 14   : 	}

	ldr         r3,[sp,#0x18]
	str         r3,[sp,#4]
	ldr         r0,[sp,#4]
|$M3|
	add         sp,sp,#0x10
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??0Timer@@QAA@XZ|, Timer::Timer

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QBAMXZ
.text$mn	SEGMENT

|?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QBAMXZ| PROC ; std::chrono::duration<float,std::ratio<1,1> >::count

; 109  :         _NODISCARD constexpr _Rep count() const noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 110  :             return _MyRep;

	ldr         r3,[sp,#0x10]
	vldr        s0,[r3]
	vstr        s0,[sp]

; 111  :         }

	vldr        s0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QBAMXZ|, std::chrono::duration<float,std::ratio<1,1> >::count

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ??0id@thread@std@@AAA@I@Z
.text$mn	SEGMENT

|??0id@thread@std@@AAA@I@Z| PROC			; std::thread::id::id

; 213  :     id(_Thrd_id_t _Other_id) : _Id(_Other_id) {}

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|
	ldr         r2,[sp,#0x10]
	ldr         r3,[sp,#0x14]
	str         r3,[r2]
	ldr         r3,[sp,#0x10]
	str         r3,[sp]
	ldr         r0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??0id@thread@std@@AAA@I@Z|, std::thread::id::id

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ?get_id@this_thread@std@@YA?AVid@thread@2@XZ
.text$mn	SEGMENT

|?get_id@this_thread@std@@YA?AVid@thread@2@XZ| PROC	; std::this_thread::get_id

; 234  : _EXPORT_STD _NODISCARD inline thread::id this_thread::get_id() noexcept {

|$M4|
	push        {r0,r1}
	push        {r7,r11,lr}
	add         r11,sp,#4
	sub         sp,sp,#0x14
	mov         r7,sp
|$M5|
	mvn         r3,#1
	strd        r3,r3,[r7,#8]

; 235  :     return _Thrd_id();

	bl          _Thrd_id
	str         r0,[r7]
	ldr         r1,[r7]
	ldr         r0,[r7,#0x20]
	bl          |??0id@thread@std@@AAA@I@Z|
	ldr         r3,[r7,#0x20]
	str         r3,[r7,#4]

; 236  : }

	ldr         r0,[r7,#4]
|$M3|
	add         sp,sp,#0x14
	pop         {r7,r11}
	ldr         pc,[sp],#0xC
|$M6|

	ENDP  ; |?get_id@this_thread@std@@YA?AVid@thread@2@XZ|, std::this_thread::get_id

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ?join@thread@std@@QAAXXZ
.text$mn	SEGMENT

|?join@thread@std@@QAAXXZ| PROC				; std::thread::join

; 119  :     void join() {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x18
|$M8|

; 120  :         if (!joinable()) {

	ldr         r0,[sp,#0x20]
	bl          |?joinable@thread@std@@QBA_NXZ|
	strb        r0,[sp]
	ldrb        r3,[sp]
	cmp         r3,#0
	bne         |$LN2@join|

; 121  :             _Throw_Cpp_error(_INVALID_ARGUMENT);

	movs        r0,#1
	bl          |?_Throw_Cpp_error@std@@YAXH@Z|
|$LN2@join|

; 122  :         }
; 123  : 
; 124  :         if (_Thr._Id == _Thrd_id()) {

	bl          _Thrd_id
	str         r0,[sp,#4]
	ldr         r3,[sp,#0x20]
	adds        r3,r3,#4
	ldr         r2,[r3]
	ldr         r3,[sp,#4]
	cmp         r2,r3
	bne         |$LN3@join|

; 125  :             _Throw_Cpp_error(_RESOURCE_DEADLOCK_WOULD_OCCUR);

	movs        r0,#5
	bl          |?_Throw_Cpp_error@std@@YAXH@Z|
|$LN3@join|

; 126  :         }
; 127  : 
; 128  :         if (_Thrd_join(_Thr, nullptr) != _Thrd_success) {

	movs        r2,#0
	ldr         r3,[sp,#0x20]
	str         r3,[sp,#8]
	ldr         r3,[sp,#8]
	ldr         r0,[r3]
	ldr         r1,[r3,#4]
	bl          _Thrd_join
	str         r0,[sp,#0xC]
	ldr         r3,[sp,#0xC]
	cmp         r3,#0
	beq         |$LN4@join|

; 129  :             _Throw_Cpp_error(_NO_SUCH_PROCESS);

	movs        r0,#2
	bl          |?_Throw_Cpp_error@std@@YAXH@Z|
|$LN4@join|

; 130  :         }
; 131  : 
; 132  :         _Thr = {};

	movs        r2,#8
	movs        r1,#0
	add         r0,sp,#0x10
	bl          memset
	ldr         r0,[sp,#0x20]
	add         r1,sp,#0x10
	movs        r2,#8
	bl          memcpy
|$LN6@join|
|$M7|

; 133  :     }

	add         sp,sp,#0x18
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M9|

	ENDP  ; |?join@thread@std@@QAAXXZ|, std::thread::join

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ?joinable@thread@std@@QBA_NXZ
.text$mn	SEGMENT

|?joinable@thread@std@@QBA_NXZ| PROC			; std::thread::joinable

; 115  :     _NODISCARD bool joinable() const noexcept {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M6|

; 116  :         return _Thr._Id != 0;

	ldr         r3,[sp,#0x10]
	adds        r3,r3,#4
	ldr         r3,[r3]
	cmp         r3,#0
	beq         |$LN3@joinable|
	movs        r3,#1
	str         r3,[sp]
	b           |$LN4@joinable|
|$LN3@joinable|
	movs        r3,#0
	str         r3,[sp]
|$LN4@joinable|
	ldr         r3,[sp]
	uxtb        r3,r3
	strb        r3,[sp,#4]

; 117  :     }

	ldrb        r0,[sp,#4]
|$M5|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M7|

	ENDP  ; |?joinable@thread@std@@QBA_NXZ|, std::thread::joinable

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread
;	COMDAT ??1thread@std@@QAA@XZ
.text$mn	SEGMENT

|??1thread@std@@QAA@XZ| PROC				; std::thread::~thread

; 91   :     ~thread() noexcept {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M8|

; 92   :         if (joinable()) {

	ldr         r0,[sp,#0x10]
	bl          |?joinable@thread@std@@QBA_NXZ|
	strb        r0,[sp]
	ldrb        r3,[sp]
	cmp         r3,#0
	beq         |$LN2@thread|

; 93   :             _STD terminate();

	ldr         r3,|$LN7@thread|			; =|__imp_terminate|
	ldr         r3,[r3]
	blx         r3
|$LN2@thread|
|$LN4@thread|
|$M5|

; 94   :         }
; 95   :     }

	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$LN6@thread|
|$LN7@thread|
	DCD         |__imp_terminate|
|$M9|

	ENDP  ; |??1thread@std@@QAA@XZ|, std::thread::~thread

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBANXZ
.text$mn	SEGMENT

|?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBANXZ| PROC ; std::chrono::duration<double,std::ratio<1,1000000000> >::count

; 109  :         _NODISCARD constexpr _Rep count() const noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 110  :             return _MyRep;

	ldr         r3,[sp,#0x10]
	vldr        d0,[r3]
	vstr        d0,[sp]

; 111  :         }

	vldr        d0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBANXZ|, std::chrono::duration<double,std::ratio<1,1000000000> >::count

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QBANXZ
.text$mn	SEGMENT

|?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QBANXZ| PROC ; std::chrono::duration<double,std::ratio<1,1> >::count

; 109  :         _NODISCARD constexpr _Rep count() const noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 110  :             return _MyRep;

	ldr         r3,[sp,#0x10]
	vldr        d0,[r3]
	vstr        d0,[sp]

; 111  :         }

	vldr        d0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QBANXZ|, std::chrono::duration<double,std::ratio<1,1> >::count

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0_K$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@AB_K@Z
.text$mn	SEGMENT

|??$?0_K$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@AB_K@Z| PROC ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><unsigned __int64,0>

; 99   :             : _MyRep(static_cast<_Rep>(_Val)) {}

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|
	ldr         r3,[sp,#0x10]
	str         r3,[sp]
	ldr         r3,[sp,#0x14]
	ldr         r2,[r3]
	ldr         r3,[sp]
	str         r2,[r3]
	ldr         r3,[sp,#0x14]
	ldr         r2,[r3,#4]
	ldr         r3,[sp]
	str         r2,[r3,#4]
	ldr         r3,[sp,#0x10]
	str         r3,[sp,#4]
	ldr         r0,[sp,#4]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$?0_K$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@AB_K@Z|, std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><unsigned __int64,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??__Ks@chrono_literals@literals@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@chrono@3@_K@Z
.text$mn	SEGMENT

|??__Ks@chrono_literals@literals@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@chrono@3@_K@Z| PROC ; std::literals::chrono_literals::operator "" s

; 744  :         /* strengthened */ {

	push        {r0-r3}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 745  :             return _CHRONO seconds(_Val);

	add         r1,sp,#0x18
	ldr         r0,[sp,#0x10]
	bl          |??$?0_K$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@AB_K@Z|
	ldr         r3,[sp,#0x10]
	str         r3,[sp]

; 746  :         }

	ldr         r0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0x14
|$M5|

	ENDP  ; |??__Ks@chrono_literals@literals@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@chrono@3@_K@Z|, std::literals::chrono_literals::operator "" s

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z
.text$mn	SEGMENT

|??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z| PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>

; 99   :             : _MyRep(static_cast<_Rep>(_Val)) {}

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|
	ldr         r3,[sp,#0x10]
	str         r3,[sp]
	ldr         r3,[sp,#0x14]
	ldr         r2,[r3]
	ldr         r3,[sp]
	str         r2,[r3]
	ldr         r3,[sp,#0x14]
	ldr         r2,[r3,#4]
	ldr         r3,[sp]
	str         r2,[r3,#4]
	ldr         r3,[sp,#0x10]
	str         r3,[sp,#4]
	ldr         r0,[sp,#4]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z|, std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??Y?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAAAAV012@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
.text$mn	SEGMENT

|??Y?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAAAAV012@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::operator+=

; 232  :         _CONSTEXPR17 time_point& operator+=(const _Duration& _Dur) noexcept(is_arithmetic_v<rep>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 233  :             _MyDur += _Dur;

	ldr         r1,[sp,#0x14]
	ldr         r0,[sp,#0x10]
	bl          |??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAAAAV012@ABV012@@Z|

; 234  :             return *this;

	ldr         r3,[sp,#0x10]
	str         r3,[sp]

; 235  :         }

	ldr         r0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??Y?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAAAAV012@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|, std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::operator+=

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ
.text$mn	SEGMENT

|?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ| PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch

; 211  :         _NODISCARD constexpr _Duration time_since_epoch() const noexcept(is_arithmetic_v<rep>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 212  :             return _MyDur;

	ldr         r1,[sp,#0x10]
	ldr         r0,[sp,#0x14]
	movs        r2,#8
	bl          memcpy
	ldr         r3,[sp,#0x14]
	str         r3,[sp]

; 213  :         }

	ldr         r0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ|, std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
.text$mn	SEGMENT

|??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; 203  :         constexpr explicit time_point(const _Duration& _Other) noexcept(is_arithmetic_v<rep>) // strengthened

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 204  :             : _MyDur(_Other) {}

	ldr         r1,[sp,#0x14]
	ldr         r0,[sp,#0x10]
	movs        r2,#8
	bl          memcpy
	ldr         r3,[sp,#0x10]
	str         r3,[sp]
	ldr         r0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|, std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAA@XZ
.text$mn	SEGMENT

|??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAA@XZ| PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; 201  :         constexpr time_point() = default;

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 202  : 
; 203  :         constexpr explicit time_point(const _Duration& _Other) noexcept(is_arithmetic_v<rep>) // strengthened
; 204  :             : _MyDur(_Other) {}
; 205  : 
; 206  :         template <class _Duration2, enable_if_t<is_convertible_v<_Duration2, _Duration>, int> = 0>
; 207  :         constexpr time_point(const time_point<_Clock, _Duration2>& _Tp) noexcept(
; 208  :             is_arithmetic_v<rep>&& is_arithmetic_v<typename _Duration2::rep>) // strengthened
; 209  :             : _MyDur(_Tp.time_since_epoch()) {}
; 210  : 
; 211  :         _NODISCARD constexpr _Duration time_since_epoch() const noexcept(is_arithmetic_v<rep>) /* strengthened */ {
; 212  :             return _MyDur;
; 213  :         }
; 214  : 
; 215  : #if _HAS_CXX20
; 216  :         constexpr time_point& operator++() noexcept(is_arithmetic_v<rep>) /* strengthened */ {
; 217  :             ++_MyDur;
; 218  :             return *this;
; 219  :         }
; 220  :         constexpr time_point operator++(int) noexcept(is_arithmetic_v<rep>) /* strengthened */ {
; 221  :             return time_point{_MyDur++};
; 222  :         }
; 223  :         constexpr time_point& operator--() noexcept(is_arithmetic_v<rep>) /* strengthened */ {
; 224  :             --_MyDur;
; 225  :             return *this;
; 226  :         }
; 227  :         constexpr time_point operator--(int) noexcept(is_arithmetic_v<rep>) /* strengthened */ {
; 228  :             return time_point{_MyDur--};
; 229  :         }
; 230  : #endif // _HAS_CXX20
; 231  : 
; 232  :         _CONSTEXPR17 time_point& operator+=(const _Duration& _Dur) noexcept(is_arithmetic_v<rep>) /* strengthened */ {
; 233  :             _MyDur += _Dur;
; 234  :             return *this;
; 235  :         }
; 236  : 
; 237  :         _CONSTEXPR17 time_point& operator-=(const _Duration& _Dur) noexcept(is_arithmetic_v<rep>) /* strengthened */ {
; 238  :             _MyDur -= _Dur;
; 239  :             return *this;
; 240  :         }
; 241  : 
; 242  :         _NODISCARD static constexpr time_point(min)() noexcept {
; 243  :             return time_point((_Duration::min)());
; 244  :         }
; 245  : 
; 246  :         _NODISCARD static constexpr time_point(max)() noexcept {
; 247  :             return time_point((_Duration::max)());
; 248  :         }
; 249  : 
; 250  :     private:
; 251  :         _Duration _MyDur{duration::zero()}; // duration since the epoch

	ldr         r0,[sp,#0x10]
	bl          |?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ|

; 201  :         constexpr time_point() = default;

	ldr         r3,[sp,#0x10]
	str         r3,[sp]
	ldr         r0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAA@XZ|, std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ
.text$mn	SEGMENT

|?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ| PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::zero

; 171  :         _NODISCARD static constexpr duration zero() noexcept {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x18
|$M4|

; 172  :             // get zero value
; 173  :             return duration(duration_values<_Rep>::zero());

	bl          |?zero@?$duration_values@_J@chrono@std@@SA_JXZ|
	str         r1,[sp,#0xC]
	str         r0,[sp,#8]
	ldr         r3,[sp,#8]
	str         r3,[sp,#0x10]
	ldr         r3,[sp,#0xC]
	str         r3,[sp,#0x14]
	add         r1,sp,#0x10
	ldr         r0,[sp,#0x20]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z|
	ldr         r3,[sp,#0x20]
	str         r3,[sp]

; 174  :         }

	ldr         r0,[sp]
|$M3|
	add         sp,sp,#0x18
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ|, std::chrono::duration<__int64,std::ratio<1,1000000000> >::zero

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAAAAV012@ABV012@@Z
.text$mn	SEGMENT

|??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAAAAV012@ABV012@@Z| PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=

; 146  :         _CONSTEXPR17 duration& operator-=(const duration& _Right) noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x10
|$M4|

; 147  :             _MyRep -= _Right._MyRep;

	ldr         r3,[sp,#0x18]
	ldr         r2,[sp,#0x1C]
	str         r3,[sp]
	ldr         r3,[sp]
	ldr         r1,[r3]
	ldr         r3,[sp]
	ldr         r0,[r3,#4]
	str         r2,[sp,#4]
	ldr         r3,[sp,#4]
	ldr         r2,[r3]
	ldr         r3,[sp,#4]
	ldr         r3,[r3,#4]
	subs        r1,r1,r2
	sbc         r2,r0,r3
	ldr         r3,[sp,#0x18]
	str         r3,[sp,#8]
	ldr         r3,[sp,#8]
	str         r1,[r3]
	ldr         r3,[sp,#8]
	str         r2,[r3,#4]

; 148  :             return *this;

	ldr         r3,[sp,#0x18]
	str         r3,[sp,#0xC]

; 149  :         }

	ldr         r0,[sp,#0xC]
|$M3|
	add         sp,sp,#0x10
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAAAAV012@ABV012@@Z|, std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAAAAV012@ABV012@@Z
.text$mn	SEGMENT

|??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAAAAV012@ABV012@@Z| PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=

; 141  :         _CONSTEXPR17 duration& operator+=(const duration& _Right) noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x10
|$M4|

; 142  :             _MyRep += _Right._MyRep;

	ldr         r3,[sp,#0x18]
	ldr         r2,[sp,#0x1C]
	str         r3,[sp]
	ldr         r3,[sp]
	ldr         r1,[r3]
	ldr         r3,[sp]
	ldr         r0,[r3,#4]
	str         r2,[sp,#4]
	ldr         r3,[sp,#4]
	ldr         r2,[r3]
	ldr         r3,[sp,#4]
	ldr         r3,[r3,#4]
	adds        r1,r1,r2
	adc         r2,r0,r3
	ldr         r3,[sp,#0x18]
	str         r3,[sp,#8]
	ldr         r3,[sp,#8]
	str         r1,[r3]
	ldr         r3,[sp,#8]
	str         r2,[r3,#4]

; 143  :             return *this;

	ldr         r3,[sp,#0x18]
	str         r3,[sp,#0xC]

; 144  :         }

	ldr         r0,[sp,#0xC]
|$M3|
	add         sp,sp,#0x10
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAAAAV012@ABV012@@Z|, std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ
.text$mn	SEGMENT

|?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ| PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count

; 109  :         _NODISCARD constexpr _Rep count() const noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x10
|$M4|

; 110  :             return _MyRep;

	ldr         r3,[sp,#0x18]
	str         r3,[sp]
	ldr         r3,[sp]
	ldr         r2,[r3]
	ldr         r3,[sp]
	ldr         r3,[r3,#4]
	str         r2,[sp,#8]

; 111  :         }

	str         r3,[sp,#0xC]
	ldr         r0,[sp,#8]
	ldr         r1,[sp,#0xC]
|$M3|
	add         sp,sp,#0x10
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBA_JXZ|, std::chrono::duration<__int64,std::ratio<1,1000000000> >::count

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
.text$mn	SEGMENT

|?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ| PROC ; std::chrono::steady_clock::now

; 669  :         _NODISCARD static time_point now() noexcept { // get current time

	push        {r0,r1}
	push        {r4,r11,lr}
	add         r11,sp,#4
	sub         sp,sp,#0xA4
|$M14|

; 670  :             const long long _Freq = _Query_perf_frequency(); // doesn't change after system boot

	bl          _Query_perf_frequency
	str         r1,[sp,#0x34]
	str         r0,[sp,#0x30]
	ldr         r3,[sp,#0x30]
	str         r3,[sp]
	ldr         r3,[sp,#0x34]
	str         r3,[sp,#4]

; 671  :             const long long _Ctr  = _Query_perf_counter();

	bl          _Query_perf_counter
	str         r1,[sp,#0x3C]
	str         r0,[sp,#0x38]
	ldr         r3,[sp,#0x38]
	str         r3,[sp,#8]
	ldr         r3,[sp,#0x3C]
	str         r3,[sp,#0xC]

; 672  :             static_assert(period::num == 1, "This assumes period::num == 1.");
; 673  :             // 10 MHz is a very common QPC frequency on modern PCs. Optimizing for
; 674  :             // this specific frequency can double the performance of this function by
; 675  :             // avoiding the expensive frequency conversion path.
; 676  :             constexpr long long _TenMHz = 10'000'000;

	ldr         r3,|$LN11@now|			; =0x989680
	str         r3,[sp,#0x68]
	movs        r3,#0
	str         r3,[sp,#0x6C]

; 677  :             if (_Freq == _TenMHz) {

	ldr         r3,[sp]
	str         r3,[sp,#0x40]
	ldr         r3,[sp,#4]
	str         r3,[sp,#0x44]
	ldr         r3,[sp,#0x44]
	str         r3,[sp,#0x20]
	ldr         r2,[sp,#0x40]
	ldr         r3,|$LN11@now|			; =0x989680
	cmp         r2,r3
	bne         |$LN2@now|
	ldr         r3,[sp,#0x20]
	cmp         r3,#0
	bne         |$LN2@now|

; 678  :                 static_assert(period::den % _TenMHz == 0, "It should never fail.");
; 679  :                 constexpr long long _Multiplier = period::den / _TenMHz;

	movs        r3,#0x64
	str         r3,[sp,#0x70]
	movs        r3,#0
	str         r3,[sp,#0x74]

; 680  :                 return time_point(duration(_Ctr * _Multiplier));

	ldr         r3,[sp,#8]
	ldr         r1,[sp,#0xC]
	str         r3,[sp,#0x10]
	ldr         r2,[sp,#0x10]
	movs        r3,#0
	mul         r2,r2,r3
	movs        r3,#0x64
	mul         r3,r1,r3
	adds        r1,r2,r3
	ldr         r2,[sp,#0x10]
	movs        r3,#0x64
	umull       r2,r3,r2,r3
	add         r3,r3,r1
	str         r2,[sp,#0x58]
	str         r3,[sp,#0x5C]
	add         r1,sp,#0x58
	add         r0,sp,#0x90
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z|
	str         r0,[sp,#0x24]
	ldr         r1,[sp,#0x24]
	ldr         r0,[sp,#0xB0]
	bl          |??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|
	ldr         r3,[sp,#0xB0]
	str         r3,[sp,#0x1C]
	b           |$LN1@now|

; 681  :             } else {

	b           |$LN3@now|
|$LN2@now|

; 682  :                 // Instead of just having "(_Ctr * period::den) / _Freq",
; 683  :                 // the algorithm below prevents overflow when _Ctr is sufficiently large.
; 684  :                 // It assumes that _Freq * period::den does not overflow, which is currently true for nano period.
; 685  :                 // It is not realistic for _Ctr to accumulate to large values from zero with this assumption,
; 686  :                 // but the initial value of _Ctr could be large.
; 687  :                 const long long _Whole = (_Ctr / _Freq) * period::den;

	ldr         r0,[sp]
	ldr         r1,[sp,#4]
	ldr         r2,[sp,#8]
	ldr         r3,[sp,#0xC]
	cmp         r0,#0
	bne         |$LN5@now|
	cmp         r1,#0
	bne         |$LN5@now|
	__brkdiv0
|$LN5@now|
	bl          __rt_sdiv64
	str         r3,[sp,#0x7C]
	str         r2,[sp,#0x78]
	str         r0,[sp,#0x14]
	ldr         r2,[sp,#0x14]
	movs        r3,#0
	mul         r2,r2,r3
	ldr         r3,|$LN10@now|			; =0x3b9aca00
	mul         r3,r1,r3
	adds        r1,r2,r3
	ldr         r2,[sp,#0x14]
	ldr         r3,|$LN10@now|			; =0x3b9aca00
	umull       r2,r3,r2,r3
	add         r3,r3,r1
	str         r2,[sp,#0x48]
	str         r3,[sp,#0x4C]

; 688  :                 const long long _Part  = (_Ctr % _Freq) * period::den / _Freq;

	ldr         r0,[sp]
	ldr         r1,[sp,#4]
	ldr         r2,[sp,#8]
	ldr         r3,[sp,#0xC]
	cmp         r0,#0
	bne         |$LN6@now|
	cmp         r1,#0
	bne         |$LN6@now|
	__brkdiv0
|$LN6@now|
	bl          __rt_sdiv64
	mov         r4,r3
	str         r1,[sp,#0x84]
	str         r0,[sp,#0x80]
	str         r2,[sp,#0x18]
	ldr         r2,[sp,#0x18]
	movs        r3,#0
	mul         r2,r2,r3
	ldr         r3,|$LN10@now|			; =0x3b9aca00
	mul         r3,r4,r3
	adds        r1,r2,r3
	ldr         r2,[sp,#0x18]
	ldr         r3,|$LN10@now|			; =0x3b9aca00
	umull       r2,r3,r2,r3
	add         r3,r3,r1
	ldr         r0,[sp]
	ldr         r1,[sp,#4]
	cmp         r0,#0
	bne         |$LN7@now|
	cmp         r1,#0
	bne         |$LN7@now|
	__brkdiv0
|$LN7@now|
	bl          __rt_sdiv64
	str         r3,[sp,#0x8C]
	str         r2,[sp,#0x88]
	str         r0,[sp,#0x50]
	str         r1,[sp,#0x54]

; 689  :                 return time_point(duration(_Whole + _Part));

	ldr         r0,[sp,#0x48]
	ldr         r1,[sp,#0x4C]
	ldr         r2,[sp,#0x50]
	ldr         r3,[sp,#0x54]
	adds        r2,r2,r0
	adcs        r3,r3,r1
	str         r2,[sp,#0x60]
	str         r3,[sp,#0x64]
	add         r1,sp,#0x60
	add         r0,sp,#0x98
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAA@AB_J@Z|
	str         r0,[sp,#0x28]
	ldr         r1,[sp,#0x28]
	ldr         r0,[sp,#0xB0]
	bl          |??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|
	ldr         r3,[sp,#0xB0]
	str         r3,[sp,#0x1C]
|$LN3@now|
|$LN1@now|

; 690  :             }
; 691  :         }

	ldr         r0,[sp,#0x1C]
|$M8|
	add         sp,sp,#0xA4
	pop         {r4,r11}
	ldr         pc,[sp],#0xC
|$LN12@now|
|$M13|
	__debugbreak
|$LN9@now|
|$LN10@now|
	DCD         0x3b9aca00
|$LN11@now|
	DCD         0x989680
|$M15|

	ENDP  ; |?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ|, std::chrono::steady_clock::now

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@AB_J@Z
.text$mn	SEGMENT

|??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@AB_J@Z| PROC ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,0>

; 99   :             : _MyRep(static_cast<_Rep>(_Val)) {}

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|
	ldr         r3,[sp,#0x10]
	str         r3,[sp]
	ldr         r3,[sp,#0x14]
	ldr         r2,[r3]
	ldr         r3,[sp]
	str         r2,[r3]
	ldr         r3,[sp,#0x14]
	ldr         r2,[r3,#4]
	ldr         r3,[sp]
	str         r2,[r3,#4]
	ldr         r3,[sp,#0x10]
	str         r3,[sp,#4]
	ldr         r0,[sp,#4]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAA@AB_J@Z|, std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QBA_JXZ
.text$mn	SEGMENT

|?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QBA_JXZ| PROC ; std::chrono::duration<__int64,std::ratio<1,1> >::count

; 109  :         _NODISCARD constexpr _Rep count() const noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x10
|$M4|

; 110  :             return _MyRep;

	ldr         r3,[sp,#0x18]
	str         r3,[sp]
	ldr         r3,[sp]
	ldr         r2,[r3]
	ldr         r3,[sp]
	ldr         r3,[r3,#4]
	str         r2,[sp,#8]

; 111  :         }

	str         r3,[sp,#0xC]
	ldr         r0,[sp,#8]
	ldr         r1,[sp,#0xC]
|$M3|
	add         sp,sp,#0x10
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QBA_JXZ|, std::chrono::duration<__int64,std::ratio<1,1> >::count

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??$?0_J$0A@@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QAA@AB_J@Z
.text$mn	SEGMENT

|??$?0_J$0A@@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QAA@AB_J@Z| PROC ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,0>

; 99   :             : _MyRep(static_cast<_Rep>(_Val)) {}

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|
	ldr         r3,[sp,#0x10]
	str         r3,[sp]
	ldr         r3,[sp,#0x14]
	ldr         r2,[r3]
	ldr         r3,[sp]
	str         r2,[r3]
	ldr         r3,[sp,#0x14]
	ldr         r2,[r3,#4]
	ldr         r3,[sp]
	str         r2,[r3,#4]
	ldr         r3,[sp,#0x10]
	str         r3,[sp,#4]
	ldr         r0,[sp,#4]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QAA@AB_J@Z|, std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ
.text$mn	SEGMENT

|?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ| PROC ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch

; 211  :         _NODISCARD constexpr _Duration time_since_epoch() const noexcept(is_arithmetic_v<rep>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 212  :             return _MyDur;

	ldr         r1,[sp,#0x10]
	ldr         r0,[sp,#0x14]
	movs        r2,#8
	bl          memcpy
	ldr         r3,[sp,#0x14]
	str         r3,[sp]

; 213  :         }

	ldr         r0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ|, std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z
.text$mn	SEGMENT

|??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z| PROC ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >

; 203  :         constexpr explicit time_point(const _Duration& _Other) noexcept(is_arithmetic_v<rep>) // strengthened

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 204  :             : _MyDur(_Other) {}

	ldr         r1,[sp,#0x14]
	ldr         r0,[sp,#0x10]
	movs        r2,#8
	bl          memcpy
	ldr         r3,[sp,#0x10]
	str         r3,[sp]
	ldr         r0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z|, std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QBA_JXZ
.text$mn	SEGMENT

|?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QBA_JXZ| PROC ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count

; 109  :         _NODISCARD constexpr _Rep count() const noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x10
|$M4|

; 110  :             return _MyRep;

	ldr         r3,[sp,#0x18]
	str         r3,[sp]
	ldr         r3,[sp]
	ldr         r2,[r3]
	ldr         r3,[sp]
	ldr         r3,[r3,#4]
	str         r2,[sp,#8]

; 111  :         }

	str         r3,[sp,#0xC]
	ldr         r0,[sp,#8]
	ldr         r1,[sp,#0xC]
|$M3|
	add         sp,sp,#0x10
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QBA_JXZ|, std::chrono::duration<__int64,std::ratio<1,10000000> >::count

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp
;	COMDAT ?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ
.text$mn	SEGMENT

|?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ| PROC ; std::chrono::system_clock::now

; 642  :         _NODISCARD static time_point now() noexcept { // get current time

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x20
|$M4|

; 643  :             return time_point(duration(_Xtime_get_ticks()));

	bl          _Xtime_get_ticks
	str         r1,[sp,#0xC]
	str         r0,[sp,#8]
	ldr         r3,[sp,#8]
	str         r3,[sp,#0x10]
	ldr         r3,[sp,#0xC]
	str         r3,[sp,#0x14]
	add         r1,sp,#0x10
	add         r0,sp,#0x18
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QAA@AB_J@Z|
	str         r0,[sp]
	ldr         r1,[sp]
	ldr         r0,[sp,#0x28]
	bl          |??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QAA@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z|
	ldr         r3,[sp,#0x28]
	str         r3,[sp,#4]

; 644  :         }

	ldr         r0,[sp,#4]
|$M3|
	add         sp,sp,#0x20
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ|, std::chrono::system_clock::now

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
;	COMDAT ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
.text$mn	SEGMENT

|?eof@?$_Narrow_char_traits@DH@std@@SAHXZ| PROC		; std::_Narrow_char_traits<char,int>::eof

; 488  :     _NODISCARD static constexpr int_type eof() noexcept {

	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 489  :         return static_cast<int_type>(EOF);

	mvn         r3,#0
	str         r3,[sp]

; 490  :     }

	ldr         r0,[sp]
|$M3|
	add         sp,sp,#8
	pop         {r11,pc}
|$M5|

	ENDP  ; |?eof@?$_Narrow_char_traits@DH@std@@SAHXZ|, std::_Narrow_char_traits<char,int>::eof

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
;	COMDAT ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z
.text$mn	SEGMENT

|?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z| PROC ; std::_Narrow_char_traits<char,int>::eq_int_type

; 480  :     _NODISCARD static constexpr bool eq_int_type(const int_type& _Left, const int_type& _Right) noexcept {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M6|

; 481  :         return _Left == _Right;

	ldr         r3,[sp,#0x10]
	ldr         r2,[r3]
	ldr         r3,[sp,#0x14]
	ldr         r3,[r3]
	cmp         r2,r3
	bne         |$LN3@eq_int_typ|
	movs        r3,#1
	str         r3,[sp]
	b           |$LN4@eq_int_typ|
|$LN3@eq_int_typ|
	movs        r3,#0
	str         r3,[sp]
|$LN4@eq_int_typ|
	ldr         r3,[sp]
	uxtb        r3,r3
	strb        r3,[sp,#4]

; 482  :     }

	ldrb        r0,[sp,#4]
|$M5|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M7|

	ENDP  ; |?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z|, std::_Narrow_char_traits<char,int>::eq_int_type

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z
.text$mn	SEGMENT

|?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z| PROC	; std::_Narrow_char_traits<char,int>::length

; 402  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept /* strengthened */ {

	push        {r0,r1}
	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#8
|$M4|

; 403  :         // find length of null-terminated string
; 404  : #if _HAS_CXX17
; 405  : #ifdef __cpp_char8_t
; 406  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 407  : #if _HAS_U8_INTRINSICS
; 408  :             return __builtin_u8strlen(_First);
; 409  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 410  :             return _Primary_char_traits::length(_First);
; 411  : #endif // _HAS_U8_INTRINSICS
; 412  :         } else
; 413  : #endif // __cpp_char8_t
; 414  :         {
; 415  :             return __builtin_strlen(_First);
; 416  :         }
; 417  : #else // _HAS_CXX17
; 418  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

	ldr         r0,[sp,#0x10]
	bl          strlen
	str         r0,[sp]
	ldr         r3,[sp]
	str         r3,[sp,#4]

; 419  : #endif // _HAS_CXX17
; 420  :     }

	ldr         r0,[sp,#4]
|$M3|
	add         sp,sp,#8
	pop         {r11}
	ldr         pc,[sp],#0xC
|$M5|

	ENDP  ; |?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z|, std::_Narrow_char_traits<char,int>::length

	END
