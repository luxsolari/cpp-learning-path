; Listing generated by Microsoft (R) Optimizing Compiler Version 19.35.32215.0 

	TTL	D:\data\code\gaming-studio-practices\ThreadsMulti\bin\ARM\Debug\intermediates\TestASM.obj
	THUMB
	.drectve

	EXPORT	|main|
	.pdata
|$pdata1$main| DCD imagerel |main|
	DCD	imagerel |$unwind2$main|
	.xdata
|$unwind2$main| DCD 0x32a00020
	DCD	0xa8fb04
	DCD	0xa804ff
	DCD	0xff
; Function compile flags: /Odtp
; File D:\data\code\gaming-studio-practices\ThreadsMulti\src\TestASM.cpp
	.text$mn

|main|	PROC

; 3    : {

	push        {r11,lr}
	mov         r11,sp
	sub         sp,sp,#0x10
|$M7|

; 4    : 	int x {0}, y {0};	// x and y are initialized to 0. this are braced initialization. 

	movs        r3,#0
	str         r3,[sp,#4]
	movs        r3,#0
	str         r3,[sp,#8]

; 5    : 						// this kind of initialization is more efficient than the other kind of initialization.
; 6    : 						// it was introduced in C++11.
; 7    : 
; 8    : 	for (int i{0}; i < 100; i++)	// this is a for loop with braced initialization

	movs        r3,#0
	str         r3,[sp]
	b           |$LN4@main|
|$LN2@main|
	ldr         r3,[sp]
	adds        r3,r3,#1
	str         r3,[sp]
|$LN4@main|
	ldr         r3,[sp]
	cmp         r3,#0x64
	bge         |$LN3@main|

; 9    : 	{
; 10   : 		x += i;

	ldr         r2,[sp,#4]
	ldr         r3,[sp]
	add         r3,r3,r2
	str         r3,[sp,#4]

; 11   : 		y += i;

	ldr         r2,[sp,#8]
	ldr         r3,[sp]
	add         r3,r3,r2
	str         r3,[sp,#8]

; 12   : 	}

	b           |$LN2@main|
|$LN3@main|

; 13   : 
; 14   : 	
; 15   : }

	movs        r3,#0
	str         r3,[sp,#0xC]
	ldr         r0,[sp,#0xC]
|$M6|
	add         sp,sp,#0x10
	pop         {r11,pc}
|$M8|

	ENDP  ; |main|

	END
