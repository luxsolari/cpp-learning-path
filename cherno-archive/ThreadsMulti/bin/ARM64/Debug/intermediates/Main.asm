; Listing generated by Microsoft (R) Optimizing Compiler Version 19.35.32215.0 

	TTL	D:\data\code\gaming-studio-practices\ThreadsMulti\bin\ARM64\Debug\intermediates\Main.obj
	;ARM64

	AREA	|.drectve|, DRECTVE


	AREA	|.rdata|, DATA, READONLY
|?_Fake_alloc@std@@3U_Fake_allocator@1@B| % 1		; std::_Fake_alloc
	%	7
|$SG45743| DCB	"Started thread id = ", 0x0
	%	3
|$SG45744| DCB	"Working...", 0x0
	%	5
|$SG45745| DCB	"Finished thread id = ", 0x0
	%	2
|$SG45809| DCB	"Started thread id = ", 0x0
	%	3
|$SG45810| DCB	"Finished.", 0x0
	%	6
|$SG45811| DCB	"Press enter to start measurement...", 0x0
	%	4
|$SG45812| DCB	" seconds", 0x0
	%	7
|$SG45813| DCB	"Duration: ", 0x0
	%	5
|$SG45814| DCB	"Finished thread id = ", 0x0
	EXPORT	|?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z| ; std::_Narrow_char_traits<char,int>::length
	EXPORT	|?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z| ; std::_Narrow_char_traits<char,int>::eq_int_type
	EXPORT	|?eof@?$_Narrow_char_traits@DH@std@@SAHXZ| ; std::_Narrow_char_traits<char,int>::eof
	EXPORT	|?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ| ; std::chrono::system_clock::now
	EXPORT	|?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ| ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
	EXPORT	|??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z| ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >
	EXPORT	|?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ| ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch
	EXPORT	|??$?0_J$0A@@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z| ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,0>
	EXPORT	|?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ| ; std::chrono::duration<__int64,std::ratio<1,1> >::count
	EXPORT	|??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z| ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,0>
	EXPORT	|?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ| ; std::chrono::steady_clock::now
	EXPORT	|?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ| ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	EXPORT	|??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z| ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=
	EXPORT	|??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z| ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=
	EXPORT	|?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ| ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::zero
	EXPORT	|??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ| ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	EXPORT	|??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	EXPORT	|?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ| ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
	EXPORT	|??Y?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAAAEAV012@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::operator+=
	EXPORT	|??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z| ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>
	EXPORT	|??__Ks@chrono_literals@literals@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@chrono@3@_K@Z| ; std::literals::chrono_literals::operator "" s
	EXPORT	|??$?0_K$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_K@Z| ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><unsigned __int64,0>
	EXPORT	|?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ| ; std::chrono::duration<double,std::ratio<1,1> >::count
	EXPORT	|?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ| ; std::chrono::duration<double,std::ratio<1,1000000000> >::count
	EXPORT	|??1thread@std@@QEAA@XZ|		; std::thread::~thread
	EXPORT	|?joinable@thread@std@@QEBA_NXZ|	; std::thread::joinable
	EXPORT	|?join@thread@std@@QEAAXXZ|		; std::thread::join
	EXPORT	|?get_id@this_thread@std@@YA?AVid@thread@2@XZ| ; std::this_thread::get_id
	EXPORT	|??0id@thread@std@@AEAA@I@Z|		; std::thread::id::id
	EXPORT	|?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEBAMXZ| ; std::chrono::duration<float,std::ratio<1,1> >::count
	EXPORT	|??0Timer@@QEAA@XZ|			; Timer::Timer
	EXPORT	|??1Timer@@QEAA@XZ|			; Timer::~Timer
	EXPORT	|??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z| ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	EXPORT	|??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| ; std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><__int64,std::ratio<1,1000000000>,0>
	EXPORT	|??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z| ; std::operator<<<std::char_traits<char> >
	EXPORT	|??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z| ; std::operator<<<char,std::char_traits<char> >
	EXPORT	|??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z| ; std::endl<char,std::char_traits<char> >
	EXPORT	|?DoWork@@YAXXZ|			; DoWork
	EXPORT	|??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z| ; std::this_thread::sleep_for<__int64,std::ratio<1,1> >
	EXPORT	|?notmain@@YAHXZ|			; notmain
	EXPORT	|??$?0A6AXXZ$$V$0A@@thread@std@@QEAA@A6AXXZ@Z| ; std::thread::thread<void (__cdecl&)(void),0>
	EXPORT	|??$?0H$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBH@Z| ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><int,0>
	EXPORT	|?zero@?$duration_values@_J@chrono@std@@SA_JXZ| ; std::chrono::duration_values<__int64>::zero
	EXPORT	|??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z| ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	EXPORT	|??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ| ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	EXPORT	|??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z| ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	EXPORT	|??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ| ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	EXPORT	|??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ| ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	EXPORT	|??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z| ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
	EXPORT	|??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| ; std::chrono::duration_cast<std::chrono::duration<float,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,0>
	EXPORT	|??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z| ; std::_To_absolute_time<__int64,std::ratio<1,1> >
	EXPORT	|??$?O_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z| ; std::chrono::operator><__int64,std::ratio<1,1>,__int64,std::ratio<1,1> >
	EXPORT	|??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$00@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z| ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1> >
	EXPORT	|??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z| ; std::chrono::operator<<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	EXPORT	|??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z| ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,0>
	EXPORT	|??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z| ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	EXPORT	|??$forward@A6AXXZ@std@@YAA6AXXZA6AXXZ@Z| ; std::forward<void (__cdecl&)(void)>
	EXPORT	|??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z| ; std::thread::_Start<void (__cdecl&)(void)>
	EXPORT	|??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBM@Z| ; std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><float,0>
	EXPORT	|??$?M_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z| ; std::chrono::operator<<__int64,std::ratio<1,1>,__int64,std::ratio<1,1> >
	EXPORT	|??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$00@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z| ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1> >
	EXPORT	|??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z| ; std::chrono::operator<<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
	EXPORT	|??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z| ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1>,0>
	EXPORT	|??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z| ; std::chrono::operator<=<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	EXPORT	|??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z| ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
	EXPORT	|??$make_unique@V?$tuple@P6AXXZ@std@@A6AXXZ$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@0@A6AXXZ@Z| ; std::make_unique<std::tuple<void (__cdecl*)(void)>,void (__cdecl&)(void),0>
	EXPORT	|??R?$default_delete@V?$tuple@P6AXXZ@std@@@std@@QEBAXPEAV?$tuple@P6AXXZ@1@@Z| ; std::default_delete<std::tuple<void (__cdecl*)(void)> >::operator()
	EXPORT	|??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@XZ| ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::~unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >
	EXPORT	|?get_deleter@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ| ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::get_deleter
	EXPORT	|?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEBAPEAV?$tuple@P6AXXZ@2@XZ| ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::get
	EXPORT	|?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAPEAV?$tuple@P6AXXZ@2@XZ| ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::release
	EXPORT	|?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ| ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Get_first
	EXPORT	|??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@$$QEAV01@@Z| ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > ><std::default_delete<std::tuple<void (__cdecl*)(void)> >,0>
	EXPORT	|??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z| ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void)>,0>
	EXPORT	|??$exchange@PEAV?$tuple@P6AXXZ@std@@$$T@std@@YAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@$$QEA$$T@Z| ; std::exchange<std::tuple<void (__cdecl*)(void)> *,std::nullptr_t>
	EXPORT	|??$?0_JU?$ratio@$00$0JIJGIA@@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z| ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,0>
	EXPORT	|??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| ; std::chrono::operator<<double,std::ratio<1,1>,__int64,std::ratio<1,1000000000> >
	EXPORT	|??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z| ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,0>
	EXPORT	|??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,0>
	EXPORT	|??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z| ; std::tuple<void (__cdecl*)(void)>::tuple<void (__cdecl*)(void)><void (__cdecl*)(void),0>
	EXPORT	|??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXXZ@1@@Z| ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > ><std::default_delete<std::tuple<void (__cdecl*)(void)> >,0>
	EXPORT	|??$forward@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@@std@@YA$$QEAU?$default_delete@V?$tuple@P6AXXZ@std@@@0@AEAU10@@Z| ; std::forward<std::default_delete<std::tuple<void (__cdecl*)(void)> > >
	EXPORT	|??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V?$tuple@P6AXXZ@std@@@1@$$QEAPEAV?$tuple@P6AXXZ@1@@Z| ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1><std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *>
	EXPORT	|??$get@$0A@P6AXXZ@std@@YAAEAP6AXXZAEAV?$tuple@P6AXXZ@0@@Z| ; std::get<0,void (__cdecl*)(void)>
	EXPORT	|??$move@AEAP6AXXZ@std@@YA$$QEAP6AXXZAEAP6AXXZ@Z| ; std::move<void (__cdecl*&)(void)>
	EXPORT	|??$invoke@P6AXXZ@std@@YAX$$QEAP6AXXZ@Z| ; std::invoke<void (__cdecl*)(void)>
	EXPORT	|??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z| ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000>,0>
	EXPORT	|??$?0NU?$ratio@$00$00@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z| ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,std::ratio<1,1>,0>
	EXPORT	|??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000000000>,0>
	EXPORT	|??$?0U_Exact_args_t@std@@AEBQ6AXXZ$$V$0A@@?$tuple@P6AXXZ@std@@QEAA@U_Exact_args_t@1@AEBQ6AXXZ@Z| ; std::tuple<void (__cdecl*)(void)>::tuple<void (__cdecl*)(void)><std::_Exact_args_t,void (__cdecl*const &)(void),0>
	EXPORT	|??$?0AEAPEAV?$tuple@P6AXXZ@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXXZ@1@@Z| ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1><std::tuple<void (__cdecl*)(void)> * &>
	EXPORT	|??$forward@PEAV?$tuple@P6AXXZ@std@@@std@@YA$$QEAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@@Z| ; std::forward<std::tuple<void (__cdecl*)(void)> *>
	EXPORT	|??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z| ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,double,std::ratio<1,1>,0>
	EXPORT	|??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,0>
	EXPORT	|??$forward@AEBQ6AXXZ@std@@YAAEBQ6AXXZAEBQ6AXXZ@Z| ; std::forward<void (__cdecl*const &)(void)>
	EXPORT	|??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z| ; std::tuple<>::tuple<><std::_Exact_args_t,0>
	EXPORT	|??$?0AEBQ6AXXZ@?$_Tuple_val@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z| ; std::_Tuple_val<void (__cdecl*)(void)>::_Tuple_val<void (__cdecl*)(void)><void (__cdecl*const &)(void)>
	EXPORT	|??$forward@AEAPEAV?$tuple@P6AXXZ@std@@@std@@YAAEAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@@Z| ; std::forward<std::tuple<void (__cdecl*)(void)> * &>
	EXPORT	|??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z| ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,0>
	EXPORT	|??_C@_02EEKDFEKL@ms@| [ DATA ]		; `string'
	EXPORT	|??_C@_0M@LKHJFMHJ@Timer?5took?5@| [ DATA ] ; `string'
	IMPORT	|??2@YAPEAX_K@Z|			; operator new
	IMPORT	|??3@YAXPEAX_K@Z|			; operator delete
	IMPORT	|strlen|
	IMPORT	|?uncaught_exception@std@@YA_NXZ|	; std::uncaught_exception
	IMPORT	|__imp_terminate|
	IMPORT	|_Xtime_get_ticks|
	IMPORT	|_Query_perf_counter|
	IMPORT	|_Query_perf_frequency|
	IMPORT	|_Thrd_join|
	IMPORT	|_Thrd_sleep|
	IMPORT	|_Thrd_id|
	IMPORT	|_Cnd_do_broadcast_at_thread_exit|
	IMPORT	|?_Throw_Cpp_error@std@@YAXH@Z|		; std::_Throw_Cpp_error
	IMPORT	|__imp_?good@ios_base@std@@QEBA_NXZ|
	IMPORT	|__imp_?flags@ios_base@std@@QEBAHXZ|
	IMPORT	|__imp_?width@ios_base@std@@QEBA_JXZ|
	IMPORT	|__imp_?width@ios_base@std@@QEAA_J_J@Z|
	IMPORT	|__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z|
	IMPORT	|__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z|
	IMPORT	|__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z|
	IMPORT	|__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ|
	IMPORT	|__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ|
	IMPORT	|__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ|
	IMPORT	|__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z|
	IMPORT	|__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ|
	IMPORT	|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z|
	IMPORT	|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z|
	IMPORT	|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@M@Z|
	IMPORT	|__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z|
	IMPORT	|__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ|
	IMPORT	|__imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAHXZ|
	IMPORT	|__imp__beginthreadex|
	IMPORT	|__CxxFrameHandler3|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_pop_cookie|
	IMPORT	|__security_push_cookie|
	IMPORT	|__imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A|
	IMPORT	|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	IMPORT	|_fltused|

	AREA	|.bss|, NOINIT
|?s_Finished@@3_NA| % 0x1				; s_Finished

	AREA	|.pdata|, PDATA
|$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z| DCD |$LN3|
	DCD	0x160001d
	;Flags[SingleProEpi] functionLength[28] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z| DCD |$LN5|
	DCD	0x100004d
	;Flags[SingleProEpi] functionLength[76] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ| DCD |$LN3|
	DCD	0x1e00039
	;Flags[SingleProEpi] functionLength[56] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[48]

	AREA	|.pdata|, PDATA
|$pdata$?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ| DCD |$LN3|
	DCD	0x800019
	;Flags[SingleProEpi] functionLength[24] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z| DCD |$LN3|
	DCD	0x1000031
	;Flags[SingleProEpi] functionLength[48] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ| DCD |$LN3|
	DCD	0x1000031
	;Flags[SingleProEpi] functionLength[48] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$??$?0_J$0A@@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z| DCD |$LN3|
	DCD	0x800029
	;Flags[SingleProEpi] functionLength[40] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ| DCD |$LN3|
	DCD	0x800019
	;Flags[SingleProEpi] functionLength[24] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z| DCD |$LN3|
	DCD	0x800029
	;Flags[SingleProEpi] functionLength[40] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ| DCD |$LN10|
	DCD	0x3e000fd
	;Flags[SingleProEpi] functionLength[252] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[112]

	AREA	|.pdata|, PDATA
|$pdata$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ| DCD |$LN3|
	DCD	0x800019
	;Flags[SingleProEpi] functionLength[24] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z| DCD |$LN3|
	DCD	0x800035
	;Flags[SingleProEpi] functionLength[52] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z| DCD |$LN3|
	DCD	0x800035
	;Flags[SingleProEpi] functionLength[52] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ| DCD |$LN3|
	DCD	0x160002d
	;Flags[SingleProEpi] functionLength[44] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ| DCD |$LN3|
	DCD	0x1600021
	;Flags[SingleProEpi] functionLength[32] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| DCD |$LN3|
	DCD	0x1000031
	;Flags[SingleProEpi] functionLength[48] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ| DCD |$LN3|
	DCD	0x1000031
	;Flags[SingleProEpi] functionLength[48] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$??Y?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAAAEAV012@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| DCD |$LN3|
	DCD	0x1600029
	;Flags[SingleProEpi] functionLength[40] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z| DCD |$LN3|
	DCD	0x800029
	;Flags[SingleProEpi] functionLength[40] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$??__Ks@chrono_literals@literals@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@chrono@3@_K@Z| DCD |$LN3|
	DCD	0x1600029
	;Flags[SingleProEpi] functionLength[40] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$??$?0_K$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_K@Z| DCD |$LN3|
	DCD	0x800029
	;Flags[SingleProEpi] functionLength[40] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ| DCD |$LN3|
	DCD	0x800019
	;Flags[SingleProEpi] functionLength[24] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ| DCD |$LN3|
	DCD	0x800019
	;Flags[SingleProEpi] functionLength[24] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$??1thread@std@@QEAA@XZ| DCD |$LN6|
	DCD	0x1600039
	;Flags[SingleProEpi] functionLength[56] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$?joinable@thread@std@@QEBA_NXZ| DCD |$LN5|
	DCD	0x800045
	;Flags[SingleProEpi] functionLength[68] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$?join@thread@std@@QEAAXXZ| DCD |$LN7|
	DCD	0x261009d
	;Flags[SingleProEpi] functionLength[156] RegF[0] RegI[1] H[0] frameChainReturn[Chained] frameSize[64]

	AREA	|.pdata|, PDATA
|$pdata$?get_id@this_thread@std@@YA?AVid@thread@2@XZ| DCD |$LN3|
	DCD	|$unwind$?get_id@this_thread@std@@YA?AVid@thread@2@XZ|

	AREA	|.pdata|, PDATA
|$pdata$??0id@thread@std@@AEAA@I@Z| DCD |$LN3|
	DCD	0x800025
	;Flags[SingleProEpi] functionLength[36] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEBAMXZ| DCD |$LN3|
	DCD	0x800019
	;Flags[SingleProEpi] functionLength[24] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$??0Timer@@QEAA@XZ| DCD |$LN3|
	DCD	0x1e0005d
	;Flags[SingleProEpi] functionLength[92] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[48]

	AREA	|.pdata|, PDATA
|$pdata$??1Timer@@QEAA@XZ| DCD |$LN4|
	DCD	|$unwind$??1Timer@@QEAA@XZ|

	AREA	|.pdata|, PDATA
|$pdata$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z| DCD |$LN3|
	DCD	0x2e10055
	;Flags[SingleProEpi] functionLength[84] RegF[0] RegI[1] H[0] frameChainReturn[Chained] frameSize[80]

	AREA	|.pdata|, PDATA
|$pdata$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| DCD |$LN3|
	DCD	0x1e00035
	;Flags[SingleProEpi] functionLength[52] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[48]

	AREA	|.pdata|, PDATA
|$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z| DCD |$LN25|
	DCD	|$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|

	AREA	|.pdata|, PDATA
|$pdata$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA| DCD |?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA|
	DCD	|$unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA|

	AREA	|.pdata|, PDATA
|$pdata$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA| DCD |?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA|
	DCD	|$unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA|

	AREA	|.pdata|, PDATA
|$pdata$??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z| DCD |$LN3|
	DCD	0x160002d
	;Flags[SingleProEpi] functionLength[44] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z| DCD |$LN3|
	DCD	0x160006d
	;Flags[SingleProEpi] functionLength[108] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$?DoWork@@YAXXZ| DCD |$LN6|
	DCD	|$unwind$?DoWork@@YAXXZ|

	AREA	|.pdata|, PDATA
|$pdata$?dtor$0@?0??DoWork@@YAXXZ@4HA| DCD |?dtor$0@?0??DoWork@@YAXXZ@4HA|
	DCD	|$unwind$?dtor$0@?0??DoWork@@YAXXZ@4HA|

	AREA	|.pdata|, PDATA
|$pdata$??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z| DCD |$LN3|
	DCD	0x1600025
	;Flags[SingleProEpi] functionLength[36] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$?notmain@@YAHXZ| DCD |$LN4|
	DCD	|$unwind$?notmain@@YAHXZ|

	AREA	|.pdata|, PDATA
|$pdata$?dtor$0@?0??notmain@@YAHXZ@4HA| DCD |?dtor$0@?0??notmain@@YAHXZ@4HA|
	DCD	|$unwind$?dtor$0@?0??notmain@@YAHXZ@4HA|

	AREA	|.pdata|, PDATA
|$pdata$??$?0A6AXXZ$$V$0A@@thread@std@@QEAA@A6AXXZ@Z| DCD |$LN3|
	DCD	0x1600031
	;Flags[SingleProEpi] functionLength[48] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$??$?0H$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBH@Z| DCD |$LN3|
	DCD	0x80002d
	;Flags[SingleProEpi] functionLength[44] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z| DCD |$LN4|
	DCD	0x1e00085
	;Flags[SingleProEpi] functionLength[132] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[48]

	AREA	|.pdata|, PDATA
|$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ| DCD |$LN4|
	DCD	|$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ|

	AREA	|.pdata|, PDATA
|$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z| DCD |$LN7|
	DCD	|$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z|

	AREA	|.pdata|, PDATA
|$pdata$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA| DCD |?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA|
	DCD	|$unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA|

	AREA	|.pdata|, PDATA
|$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ| DCD |$LN6|
	DCD	|$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ|

	AREA	|.pdata|, PDATA
|$pdata$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ| DCD |$LN3|
	DCD	0x80001d
	;Flags[SingleProEpi] functionLength[28] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z| DCD |$LN3|
	DCD	0x3610079
	;Flags[SingleProEpi] functionLength[120] RegF[0] RegI[1] H[0] frameChainReturn[Chained] frameSize[96]

	AREA	|.pdata|, PDATA
|$pdata$??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| DCD |$LN10|
	DCD	0x2600105
	;Flags[SingleProEpi] functionLength[260] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[64]

	AREA	|.pdata|, PDATA
|$pdata$??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z| DCD |$LN6|
	DCD	0x2e000b5
	;Flags[SingleProEpi] functionLength[180] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[80]

	AREA	|.pdata|, PDATA
|$pdata$??$?O_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z| DCD |$LN3|
	DCD	0x160002d
	;Flags[SingleProEpi] functionLength[44] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$00@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z| DCD |$LN3|
	DCD	0x2600049
	;Flags[SingleProEpi] functionLength[72] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[64]

	AREA	|.pdata|, PDATA
|$pdata$??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z| DCD |$LN3|
	DCD	0x261004d
	;Flags[SingleProEpi] functionLength[76] RegF[0] RegI[1] H[0] frameChainReturn[Chained] frameSize[64]

	AREA	|.pdata|, PDATA
|$pdata$??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z| DCD |$LN3|
	DCD	0x1e00035
	;Flags[SingleProEpi] functionLength[52] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[48]

	AREA	|.pdata|, PDATA
|$pdata$??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z| DCD |$LN7|
	DCD	|$unwind$??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z|

	AREA	|.pdata|, PDATA
|$pdata$??$forward@A6AXXZ@std@@YAA6AXXZA6AXXZ@Z| DCD |$LN3|
	DCD	0x800015
	;Flags[SingleProEpi] functionLength[20] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z| DCD |$LN9|
	DCD	|$unwind$??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z|

	AREA	|.pdata|, PDATA
|$pdata$?dtor$1@?0???$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z@4HA| DCD |?dtor$1@?0???$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z@4HA|
	DCD	|$unwind$?dtor$1@?0???$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z@4HA|

	AREA	|.pdata|, PDATA
|$pdata$??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBM@Z| DCD |$LN3|
	DCD	0x800029
	;Flags[SingleProEpi] functionLength[40] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$??$?M_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z| DCD |$LN5|
	DCD	0x3610085
	;Flags[SingleProEpi] functionLength[132] RegF[0] RegI[1] H[0] frameChainReturn[Chained] frameSize[96]

	AREA	|.pdata|, PDATA
|$pdata$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$00@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z| DCD |$LN3|
	DCD	0x361006d
	;Flags[SingleProEpi] functionLength[108] RegF[0] RegI[1] H[0] frameChainReturn[Chained] frameSize[96]

	AREA	|.pdata|, PDATA
|$pdata$??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z| DCD |$LN5|
	DCD	0x3610085
	;Flags[SingleProEpi] functionLength[132] RegF[0] RegI[1] H[0] frameChainReturn[Chained] frameSize[96]

	AREA	|.pdata|, PDATA
|$pdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z| DCD |$LN10|
	DCD	0x2e000e5
	;Flags[SingleProEpi] functionLength[228] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[80]

	AREA	|.pdata|, PDATA
|$pdata$??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z| DCD |$LN5|
	DCD	0x1e00055
	;Flags[SingleProEpi] functionLength[84] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[48]

	AREA	|.pdata|, PDATA
|$pdata$??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z| DCD |$LN7|
	DCD	0x3e000e1
	;Flags[SingleProEpi] functionLength[224] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[112]

	AREA	|.pdata|, PDATA
|$pdata$??$make_unique@V?$tuple@P6AXXZ@std@@A6AXXZ$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@0@A6AXXZ@Z| DCD |$LN8|
	DCD	0x2e00095
	;Flags[SingleProEpi] functionLength[148] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[80]

	AREA	|.pdata|, PDATA
|$pdata$??R?$default_delete@V?$tuple@P6AXXZ@std@@@std@@QEBAXPEAV?$tuple@P6AXXZ@1@@Z| DCD |$LN3|
	DCD	0x1e0002d
	;Flags[SingleProEpi] functionLength[44] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[48]

	AREA	|.pdata|, PDATA
|$pdata$??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@XZ| DCD |$LN4|
	DCD	0x1e10041
	;Flags[SingleProEpi] functionLength[64] RegF[0] RegI[1] H[0] frameChainReturn[Chained] frameSize[48]

	AREA	|.pdata|, PDATA
|$pdata$?get_deleter@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ| DCD |$LN3|
	DCD	0x160001d
	;Flags[SingleProEpi] functionLength[28] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEBAPEAV?$tuple@P6AXXZ@2@XZ| DCD |$LN3|
	DCD	0x800019
	;Flags[SingleProEpi] functionLength[24] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAPEAV?$tuple@P6AXXZ@2@XZ| DCD |$LN3|
	DCD	0x1600029
	;Flags[SingleProEpi] functionLength[40] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ| DCD |$LN3|
	DCD	0x800015
	;Flags[SingleProEpi] functionLength[20] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@$$QEAV01@@Z| DCD |$LN3|
	DCD	0x1e00049
	;Flags[SingleProEpi] functionLength[72] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[48]

	AREA	|.pdata|, PDATA
|$pdata$??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z| DCD |$LN3|
	DCD	|$unwind$??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z|

	AREA	|.pdata|, PDATA
|$pdata$??$exchange@PEAV?$tuple@P6AXXZ@std@@$$T@std@@YAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@$$QEA$$T@Z| DCD |$LN3|
	DCD	0x1000035
	;Flags[SingleProEpi] functionLength[52] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$??$?0_JU?$ratio@$00$0JIJGIA@@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z| DCD |$LN3|
	DCD	0x1e00035
	;Flags[SingleProEpi] functionLength[52] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[48]

	AREA	|.pdata|, PDATA
|$pdata$??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| DCD |$LN5|
	DCD	|$unwind$??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|

	AREA	|.pdata|, PDATA
|$pdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z| DCD |$LN9|
	DCD	0x2e000d5
	;Flags[SingleProEpi] functionLength[212] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[80]

	AREA	|.pdata|, PDATA
|$pdata$??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| DCD |$LN10|
	DCD	0x2e000e5
	;Flags[SingleProEpi] functionLength[228] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[80]

	AREA	|.pdata|, PDATA
|$pdata$??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z| DCD |$LN3|
	DCD	|$unwind$??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z|

	AREA	|.pdata|, PDATA
|$pdata$??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXXZ@1@@Z| DCD |$LN3|
	DCD	0x1e0002d
	;Flags[SingleProEpi] functionLength[44] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[48]

	AREA	|.pdata|, PDATA
|$pdata$??$forward@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@@std@@YA$$QEAU?$default_delete@V?$tuple@P6AXXZ@std@@@0@AEAU10@@Z| DCD |$LN3|
	DCD	0x800015
	;Flags[SingleProEpi] functionLength[20] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V?$tuple@P6AXXZ@std@@@1@$$QEAPEAV?$tuple@P6AXXZ@1@@Z| DCD |$LN3|
	DCD	0x1e00041
	;Flags[SingleProEpi] functionLength[64] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[48]

	AREA	|.pdata|, PDATA
|$pdata$??$get@$0A@P6AXXZ@std@@YAAEAP6AXXZAEAV?$tuple@P6AXXZ@0@@Z| DCD |$LN3|
	DCD	0x800015
	;Flags[SingleProEpi] functionLength[20] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$??$move@AEAP6AXXZ@std@@YA$$QEAP6AXXZAEAP6AXXZ@Z| DCD |$LN3|
	DCD	0x800015
	;Flags[SingleProEpi] functionLength[20] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$??$invoke@P6AXXZ@std@@YAX$$QEAP6AXXZ@Z| DCD |$LN3|
	DCD	0x1600021
	;Flags[SingleProEpi] functionLength[32] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z| DCD |$LN9|
	DCD	0x2e000e5
	;Flags[SingleProEpi] functionLength[228] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[80]

	AREA	|.pdata|, PDATA
|$pdata$??$?0NU?$ratio@$00$00@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z| DCD |$LN3|
	DCD	0x1e00035
	;Flags[SingleProEpi] functionLength[52] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[48]

	AREA	|.pdata|, PDATA
|$pdata$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| DCD |$LN3|
	DCD	0x1e00035
	;Flags[SingleProEpi] functionLength[52] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[48]

	AREA	|.pdata|, PDATA
|$pdata$??$?0U_Exact_args_t@std@@AEBQ6AXXZ$$V$0A@@?$tuple@P6AXXZ@std@@QEAA@U_Exact_args_t@1@AEBQ6AXXZ@Z| DCD |$LN3|
	DCD	0x1e00041
	;Flags[SingleProEpi] functionLength[64] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[48]

	AREA	|.pdata|, PDATA
|$pdata$??$?0AEAPEAV?$tuple@P6AXXZ@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXXZ@1@@Z| DCD |$LN3|
	DCD	0x1e00035
	;Flags[SingleProEpi] functionLength[52] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[48]

	AREA	|.pdata|, PDATA
|$pdata$??$forward@PEAV?$tuple@P6AXXZ@std@@@std@@YA$$QEAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@@Z| DCD |$LN3|
	DCD	0x800015
	;Flags[SingleProEpi] functionLength[20] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z| DCD |$LN10|
	DCD	0x2e000f5
	;Flags[SingleProEpi] functionLength[244] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[80]

	AREA	|.pdata|, PDATA
|$pdata$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| DCD |$LN9|
	DCD	0x2e00105
	;Flags[SingleProEpi] functionLength[260] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[80]

	AREA	|.pdata|, PDATA
|$pdata$??$forward@AEBQ6AXXZ@std@@YAAEBQ6AXXZAEBQ6AXXZ@Z| DCD |$LN3|
	DCD	0x800015
	;Flags[SingleProEpi] functionLength[20] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z| DCD |$LN3|
	DCD	0x800019
	;Flags[SingleProEpi] functionLength[24] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$??$?0AEBQ6AXXZ@?$_Tuple_val@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z| DCD |$LN3|
	DCD	0x1600031
	;Flags[SingleProEpi] functionLength[48] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$??$forward@AEAPEAV?$tuple@P6AXXZ@std@@@std@@YAAEAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@@Z| DCD |$LN3|
	DCD	0x800015
	;Flags[SingleProEpi] functionLength[20] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.pdata|, PDATA
|$pdata$??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z| DCD |$LN3|
	DCD	0x800029
	;Flags[SingleProEpi] functionLength[40] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[16]

	AREA	|.rdata|, DATA, READONLY
|??_C@_0M@LKHJFMHJ@Timer?5took?5@| DCB "Timer took ", 0x0 ; `string'

	AREA	|.rdata|, DATA, READONLY
|??_C@_02EEKDFEKL@ms@| DCB "ms", 0x0			; `string'

	AREA	|.xdata|, DATA
|$ip2state$??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z| DCD |??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z|
	DCD	0xffffffff

	AREA	|.rdata|, DATA, READONLY
|$cppxdata$??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z| DCD 0x19930522
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x1
	DCD	|$ip2state$??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z|
	DCD	0xfffffff8
	DCD	0x0
	DCD	0x5

	AREA	|.xdata|, DATA
|$unwind$??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z| DCD 0x870000d
	DCD	0xe3e485e1
	DCD	|__CxxFrameHandler3|
	DCD	|$cppxdata$??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z|
	;Code Words[1], Epilog Start Index[1], E[1], X[1], Function Length[13]=52 bytes
	;set_fp
	;save_fplr_x
	;end
	;nop

	AREA	|.xdata|, DATA
|$unwind$??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| DCD 0x1060001b
	DCD	0x1de87e1
	DCD	0xe3e3e3e4
	;Code Words[2], Epilog Start Index[1], E[1], X[0], Function Length[27]=108 bytes
	;set_fp
	;save_fplr_x
	;save_freg_x
	;end
	;nop
	;nop
	;nop

	AREA	|.xdata|, DATA
|$ip2state$??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z| DCD |??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z|
	DCD	0xffffffff

	AREA	|.rdata|, DATA, READONLY
|$cppxdata$??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z| DCD 0x19930522
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x1
	DCD	|$ip2state$??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z|
	DCD	0xfffffff0
	DCD	0x0
	DCD	0x5

	AREA	|.xdata|, DATA
|$unwind$??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z| DCD 0x8700017
	DCD	0xe3e487e1
	DCD	|__CxxFrameHandler3|
	DCD	|$cppxdata$??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z|
	;Code Words[1], Epilog Start Index[1], E[1], X[1], Function Length[23]=92 bytes
	;set_fp
	;save_fplr_x
	;end
	;nop

	AREA	|.xdata|, DATA
|$unwind$?dtor$1@?0???$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z@4HA| DCD 0x8200005
	DCD	0xe3e3e481
	;Code Words[1], Epilog Start Index[0], E[1], X[0], Function Length[5]=20 bytes
	;save_fplr_x
	;end
	;nop
	;nop

	AREA	|.xdata|, DATA
|$ip2state$??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z| DCD |??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z|
	DCD	0xffffffff
	DCD	|??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z|+68
	DCD	0x0
	DCD	|??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z|+204
	DCD	0xffffffff

	AREA	|.xdata|, DATA
|$stateUnwindMap$??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z| DCD 0xffffffff
	DCD	|?dtor$1@?0???$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z@4HA|

	AREA	|.rdata|, DATA, READONLY
|$cppxdata$??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z| DCD 0x19930522
	DCD	0x1
	DCD	|$stateUnwindMap$??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z|
	DCD	0x0
	DCD	0x0
	DCD	0x3
	DCD	|$ip2state$??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z|
	DCD	0xffffffe0
	DCD	0x0
	DCD	0x1

	AREA	|.xdata|, DATA
|$unwind$??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z| DCD 0x10700038
	DCD	0x1d489e1
	DCD	0xe3e3e3e4
	DCD	|__CxxFrameHandler3|
	DCD	|$cppxdata$??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z|
	;Code Words[2], Epilog Start Index[1], E[1], X[1], Function Length[56]=224 bytes
	;set_fp
	;save_fplr_x
	;save_reg_x
	;end
	;nop
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z| DCD 0x830001d
	DCD	0xe3e481e1
	DCD	|__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[1], Epilog Start Index[0], E[1], X[1], Function Length[29]=116 bytes
	;set_fp
	;save_fplr_x
	;end
	;nop

	AREA	|.xdata|, DATA
|$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ| DCD |??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ|
	DCD	0xffffffff

	AREA	|.rdata|, DATA, READONLY
|$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ| DCD 0x19930522
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x1
	DCD	|$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ|
	DCD	0xfffffff0
	DCD	0x0
	DCD	0x5

	AREA	|.xdata|, DATA
|$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ| DCD 0x870001e
	DCD	0xe3e485e1
	DCD	|__CxxFrameHandler3|
	DCD	|$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ|
	;Code Words[1], Epilog Start Index[1], E[1], X[1], Function Length[30]=120 bytes
	;set_fp
	;save_fplr_x
	;end
	;nop

	AREA	|.xdata|, DATA
|$unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA| DCD 0x8200005
	DCD	0xe3e3e481
	;Code Words[1], Epilog Start Index[0], E[1], X[0], Function Length[5]=20 bytes
	;save_fplr_x
	;end
	;nop
	;nop

	AREA	|.xdata|, DATA
|$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z| DCD |??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z|
	DCD	0xffffffff
	DCD	|??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z|+40
	DCD	0x0
	DCD	|??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z|+280
	DCD	0xffffffff

	AREA	|.xdata|, DATA
|$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z| DCD 0xffffffff
	DCD	|?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA|

	AREA	|.rdata|, DATA, READONLY
|$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z| DCD 0x19930522
	DCD	0x1
	DCD	|$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z|
	DCD	0x0
	DCD	0x0
	DCD	0x3
	DCD	|$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z|
	DCD	0xfffffff8
	DCD	0x0
	DCD	0x1

	AREA	|.xdata|, DATA
|$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z| DCD 0x8700049
	DCD	0xe3e485e1
	DCD	|__CxxFrameHandler3|
	DCD	|$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z|
	;Code Words[1], Epilog Start Index[1], E[1], X[1], Function Length[73]=292 bytes
	;set_fp
	;save_fplr_x
	;end
	;nop

	AREA	|.xdata|, DATA
|$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ| DCD |??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ|
	DCD	0xffffffff

	AREA	|.rdata|, DATA, READONLY
|$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ| DCD 0x19930522
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x1
	DCD	|$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ|
	DCD	0xfffffff8
	DCD	0x0
	DCD	0x5

	AREA	|.xdata|, DATA
|$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ| DCD 0x870001e
	DCD	0xe3e485e1
	DCD	|__CxxFrameHandler3|
	DCD	|$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ|
	;Code Words[1], Epilog Start Index[1], E[1], X[1], Function Length[30]=120 bytes
	;set_fp
	;save_fplr_x
	;end
	;nop

	AREA	|.rdata|, DATA, READONLY
	%	2
|$cppxdata$?DoWork@@YAXXZ| DCD 0x19930522
	DCD	0x1
	DCD	|$stateUnwindMap$?DoWork@@YAXXZ|
	DCD	0x0
	DCD	0x0
	DCD	0x3
	DCD	|$ip2state$?DoWork@@YAXXZ|
	DCD	0xffffffc8
	DCD	0x0
	DCD	0x1
	%	8
|$cppxdata$?notmain@@YAHXZ| DCD 0x19930522
	DCD	0x1
	DCD	|$stateUnwindMap$?notmain@@YAHXZ|
	DCD	0x0
	DCD	0x0
	DCD	0x3
	DCD	|$ip2state$?notmain@@YAHXZ|
	DCD	0xffffffd8
	DCD	0x0
	DCD	0x1

	AREA	|.xdata|, DATA
|$unwind$?DoWork@@YAXXZ| DCD 0x10700040
	DCD	0x1d487e1
	DCD	0xe3e3e3e4
	DCD	|__CxxFrameHandler3|
	DCD	|$cppxdata$?DoWork@@YAXXZ|
	;Code Words[2], Epilog Start Index[1], E[1], X[1], Function Length[64]=256 bytes
	;set_fp
	;save_fplr_x
	;save_reg_x
	;end
	;nop
	;nop
	;nop
|$stateUnwindMap$?DoWork@@YAXXZ| DCD 0xffffffff
	DCD	|?dtor$0@?0??DoWork@@YAXXZ@4HA|
|$ip2state$?DoWork@@YAXXZ| DCD |?DoWork@@YAXXZ|
	DCD	0xffffffff
	DCD	|?DoWork@@YAXXZ|+32
	DCD	0x0
	DCD	|?DoWork@@YAXXZ|+236
	DCD	0xffffffff
|$unwind$?dtor$0@?0??DoWork@@YAXXZ@4HA| DCD 0x8200005
	DCD	0xe3e3e481
	;Code Words[1], Epilog Start Index[0], E[1], X[0], Function Length[5]=20 bytes
	;save_fplr_x
	;end
	;nop
	;nop
|$unwind$?notmain@@YAHXZ| DCD 0x10700075
	DCD	0x1dc8be1
	DCD	0xe3e401d4
	DCD	|__CxxFrameHandler3|
	DCD	|$cppxdata$?notmain@@YAHXZ|
	;Code Words[2], Epilog Start Index[1], E[1], X[1], Function Length[117]=468 bytes
	;set_fp
	;save_fplr_x
	;save_freg
	;save_reg_x
	;end
	;nop
|$stateUnwindMap$?notmain@@YAHXZ| DCD 0xffffffff
	DCD	|?dtor$0@?0??notmain@@YAHXZ@4HA|
|$ip2state$?notmain@@YAHXZ| DCD |?notmain@@YAHXZ|
	DCD	0xffffffff
	DCD	|?notmain@@YAHXZ|+104
	DCD	0x0
	DCD	|?notmain@@YAHXZ|+440
	DCD	0xffffffff
|$unwind$?dtor$0@?0??notmain@@YAHXZ@4HA| DCD 0x8200005
	DCD	0xe3e3e481
	;Code Words[1], Epilog Start Index[0], E[1], X[0], Function Length[5]=20 bytes
	;save_fplr_x
	;end
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA| DCD 0x8500013
	DCD	0x10
	DCD	0xe3e3e481
	DCD	|__CxxFrameHandler3|
	DCD	|$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|
	;Code Words[1], Epilog Count[1], E[0], X[1], Function Length[19]=76 bytes
	;Epilog Start Index[0], Epilog Start Offset[16]=64 bytes
	;save_fplr_x
	;end
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA| DCD 0x8200005
	DCD	0xe3e3e481
	;Code Words[1], Epilog Start Index[0], E[1], X[0], Function Length[5]=20 bytes
	;save_fplr_x
	;end
	;nop
	;nop

	AREA	|.xdata|, DATA
|$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z| DCD |??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|
	DCD	0xffffffff
	DCD	|??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|+232
	DCD	0x0
	DCD	|??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|+272
	DCD	0x1
	DCD	|??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|+936
	DCD	0x0
	DCD	|??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|+996
	DCD	0xffffffff
	DCD	|?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA|
	DCD	0x0
	DCD	|?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA|+4
	DCD	0x2
	DCD	|?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA|+56
	DCD	0x0

	AREA	|.xdata|, DATA
|$handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z| DCD 0x40
	DCD	0x0
	DCD	0x0
	DCD	|?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA|
	DCD	0x0

	AREA	|.xdata|, DATA
|$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z| DCD 0x1
	DCD	0x1
	DCD	0x2
	DCD	0x1
	DCD	|$handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|

	AREA	|.xdata|, DATA
|$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z| DCD 0xffffffff
	DCD	|?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0

	AREA	|.rdata|, DATA, READONLY
|$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z| DCD 0x19930522
	DCD	0x3
	DCD	|$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|
	DCD	0x1
	DCD	|$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|
	DCD	0x8
	DCD	|$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|
	DCD	0xfffffff8
	DCD	0x0
	DCD	0x1

	AREA	|.xdata|, DATA
|$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z| DCD 0x87000fe
	DCD	0xe3e493e1
	DCD	|__CxxFrameHandler3|
	DCD	|$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|
	;Code Words[1], Epilog Start Index[1], E[1], X[1], Function Length[254]=1016 bytes
	;set_fp
	;save_fplr_x
	;end
	;nop

	AREA	|.xdata|, DATA
|$ip2state$??1Timer@@QEAA@XZ| DCD |??1Timer@@QEAA@XZ|
	DCD	0xffffffff
	DCD	|??1Timer@@QEAA@XZ|+208
	DCD	0x0

	AREA	|.rdata|, DATA, READONLY
|$cppxdata$??1Timer@@QEAA@XZ| DCD 0x19930522
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x2
	DCD	|$ip2state$??1Timer@@QEAA@XZ|
	DCD	0xffffffe8
	DCD	0x0
	DCD	0x5

	AREA	|.xdata|, DATA
|$unwind$??1Timer@@QEAA@XZ| DCD 0x8500035
	DCD	0x400031
	DCD	0xe3e487e1
	DCD	|__CxxFrameHandler3|
	DCD	|$cppxdata$??1Timer@@QEAA@XZ|
	;Code Words[1], Epilog Count[1], E[0], X[1], Function Length[53]=212 bytes
	;Epilog Start Index[1], Epilog Start Offset[49]=196 bytes
	;set_fp
	;save_fplr_x
	;end
	;nop

	AREA	|.xdata|, DATA
|$ip2state$?get_id@this_thread@std@@YA?AVid@thread@2@XZ| DCD |?get_id@this_thread@std@@YA?AVid@thread@2@XZ|
	DCD	0xffffffff

	AREA	|.rdata|, DATA, READONLY
|$cppxdata$?get_id@this_thread@std@@YA?AVid@thread@2@XZ| DCD 0x19930522
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x1
	DCD	|$ip2state$?get_id@this_thread@std@@YA?AVid@thread@2@XZ|
	DCD	0xfffffff8
	DCD	0x0
	DCD	0x5

	AREA	|.xdata|, DATA
|$unwind$?get_id@this_thread@std@@YA?AVid@thread@2@XZ| DCD 0x870000d
	DCD	0xe3e483e1
	DCD	|__CxxFrameHandler3|
	DCD	|$cppxdata$?get_id@this_thread@std@@YA?AVid@thread@2@XZ|
	;Code Words[1], Epilog Start Index[1], E[1], X[1], Function Length[13]=52 bytes
	;set_fp
	;save_fplr_x
	;end
	;nop
; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z| PROC ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,0>

; 99   :             : _MyRep(static_cast<_Rep>(_Val)) {}

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]
	str         x1,[sp,#8]
	ldr         x9,[sp]
	ldr         x8,[sp,#8]
	ldr         d16,[x8]
	str         d16,[x9]
	ldr         x0,[sp]
	add         sp,sp,#0x10
	ret

	ENDP  ; |??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z|, std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\type_traits

	AREA	|.text$mn|, CODE, ARM64

|??$forward@AEAPEAV?$tuple@P6AXXZ@std@@@std@@YAAEAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@@Z| PROC ; std::forward<std::tuple<void (__cdecl*)(void)> * &>

; 1426 : _NODISCARD _MSVC_INTRINSIC constexpr _Ty&& forward(remove_reference_t<_Ty>& _Arg) noexcept {

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]

; 1427 :     return static_cast<_Ty&&>(_Arg);

	ldr         x0,[sp]
	add         sp,sp,#0x10
	ret

	ENDP  ; |??$forward@AEAPEAV?$tuple@P6AXXZ@std@@@std@@YAAEAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@@Z|, std::forward<std::tuple<void (__cdecl*)(void)> * &>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\tuple

	AREA	|.text$mn|, CODE, ARM64

|??$?0AEBQ6AXXZ@?$_Tuple_val@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z| PROC ; std::_Tuple_val<void (__cdecl*)(void)>::_Tuple_val<void (__cdecl*)(void)><void (__cdecl*const &)(void)>

; 144  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) {}

|$LN3|
	stp         fp,lr,[sp,#-0x20]!
	mov         fp,sp
	str         x0,[sp,#0x10]
	str         x1,[sp,#0x18]
	ldr         x0,[sp,#0x18]
	bl          |??$forward@AEBQ6AXXZ@std@@YAAEBQ6AXXZAEBQ6AXXZ@Z|
	ldr         x9,[sp,#0x10]
	ldr         x8,[x0]
	str         x8,[x9]
	ldr         x0,[sp,#0x10]
	ldp         fp,lr,[sp],#0x20
	ret

	ENDP  ; |??$?0AEBQ6AXXZ@?$_Tuple_val@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z|, std::_Tuple_val<void (__cdecl*)(void)>::_Tuple_val<void (__cdecl*)(void)><void (__cdecl*const &)(void)>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\tuple

	AREA	|.text$mn|, CODE, ARM64

|??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z| PROC ; std::tuple<>::tuple<><std::_Exact_args_t,0>

; 199  :     constexpr tuple(_Tag) noexcept /* strengthened */ {}

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp,#8]
	strb        w1,[sp]
	ldr         x0,[sp,#8]
	add         sp,sp,#0x10
	ret

	ENDP  ; |??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z|, std::tuple<>::tuple<><std::_Exact_args_t,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\type_traits

	AREA	|.text$mn|, CODE, ARM64

|??$forward@AEBQ6AXXZ@std@@YAAEBQ6AXXZAEBQ6AXXZ@Z| PROC	; std::forward<void (__cdecl*const &)(void)>

; 1426 : _NODISCARD _MSVC_INTRINSIC constexpr _Ty&& forward(remove_reference_t<_Ty>& _Arg) noexcept {

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]

; 1427 :     return static_cast<_Ty&&>(_Arg);

	ldr         x0,[sp]
	add         sp,sp,#0x10
	ret

	ENDP  ; |??$forward@AEBQ6AXXZ@std@@YAAEBQ6AXXZAEBQ6AXXZ@Z|, std::forward<void (__cdecl*const &)(void)>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| PROC ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,0>

; 422  :         is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) /* strengthened */ {

|$LN9|
	stp         fp,lr,[sp,#-0x50]!
	mov         fp,sp
	str         x0,[sp,#0x18]
	str         x1,[sp,#0x20]

; 423  :         // convert duration to another duration; truncate
; 424  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 425  : 
; 426  :         using _ToRep = typename _To::rep;
; 427  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 428  : 
; 429  :         constexpr bool _Num_is_one = _CF::num == 1;

	mov         w8,#1
	strb        w8,[sp,#0x10]

; 430  :         constexpr bool _Den_is_one = _CF::den == 1;

	mov         w8,#1
	strb        w8,[sp,#0x11]

; 431  : 
; 432  :         if (_Den_is_one) {

	mov         w8,#1
	cmp         w8,#0
	beq         |$LN2@duration_c|

; 433  :             if (_Num_is_one) {

	mov         w8,#1
	cmp         w8,#0
	beq         |$LN4@duration_c|

; 434  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	scvtf       d16,x0
	str         d16,[sp,#0x28]
	add         x1,sp,#0x28
	ldr         x0,[sp,#0x18]
	bl          |??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z|
	ldr         x0,[sp,#0x18]
	b           |$LN1@duration_c|

; 435  :             } else {

	b           |$LN5@duration_c|
|$LN4@duration_c|

; 436  :                 return static_cast<_To>(

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	scvtf       d17,x0
	fmov        d16,#1
	fmul        d16,d17,d16
	str         d16,[sp,#0x30]
	add         x1,sp,#0x30
	ldr         x0,[sp,#0x18]
	bl          |??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z|
	ldr         x0,[sp,#0x18]
	b           |$LN1@duration_c|
|$LN5@duration_c|

; 437  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 438  :             }
; 439  :         } else {

	b           |$LN1@duration_c|
|$LN2@duration_c|

; 440  :             if (_Num_is_one) {

	mov         w8,#1
	cmp         w8,#0
	beq         |$LN6@duration_c|

; 441  :                 return static_cast<_To>(

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	scvtf       d17,x0
	fmov        d16,#1
	fdiv        d16,d17,d16
	str         d16,[sp,#0x38]
	add         x1,sp,#0x38
	ldr         x0,[sp,#0x18]
	bl          |??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z|
	ldr         x0,[sp,#0x18]
	b           |$LN1@duration_c|

; 442  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 443  :             } else {

	b           |$LN1@duration_c|
|$LN6@duration_c|

; 444  :                 return static_cast<_To>(static_cast<_ToRep>(

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	scvtf       d17,x0
	fmov        d16,#1
	fmul        d17,d17,d16
	fmov        d16,#1
	fdiv        d16,d17,d16
	str         d16,[sp,#0x40]
	add         x1,sp,#0x40
	ldr         x0,[sp,#0x18]
	bl          |??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z|
	ldr         x0,[sp,#0x18]
|$LN1@duration_c|
	ldp         fp,lr,[sp],#0x50
	ret

	ENDP  ; |??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|, std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z| PROC ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,double,std::ratio<1,1>,0>

; 422  :         is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) /* strengthened */ {

|$LN10|
	stp         fp,lr,[sp,#-0x50]!
	mov         fp,sp
	str         x0,[sp,#0x18]
	str         x1,[sp,#0x20]

; 423  :         // convert duration to another duration; truncate
; 424  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 425  : 
; 426  :         using _ToRep = typename _To::rep;
; 427  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 428  : 
; 429  :         constexpr bool _Num_is_one = _CF::num == 1;

	mov         w8,#0
	strb        w8,[sp,#0x10]

; 430  :         constexpr bool _Den_is_one = _CF::den == 1;

	mov         w8,#1
	strb        w8,[sp,#0x11]

; 431  : 
; 432  :         if (_Den_is_one) {

	mov         w8,#1
	cmp         w8,#0
	beq         |$LN2@duration_c|

; 433  :             if (_Num_is_one) {

	mov         w8,#0
	cmp         w8,#0
	beq         |$LN4@duration_c|

; 434  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ|
	str         d0,[sp,#0x28]
	add         x1,sp,#0x28
	ldr         x0,[sp,#0x18]
	bl          |??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z|
	ldr         x0,[sp,#0x18]
	b           |$LN1@duration_c|

; 435  :             } else {

	b           |$LN5@duration_c|
|$LN4@duration_c|

; 436  :                 return static_cast<_To>(

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ|
	ldr         d16,|$LN9@duration_c|
	fmul        d16,d0,d16
	str         d16,[sp,#0x30]
	add         x1,sp,#0x30
	ldr         x0,[sp,#0x18]
	bl          |??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z|
	ldr         x0,[sp,#0x18]
	b           |$LN1@duration_c|
|$LN5@duration_c|

; 437  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 438  :             }
; 439  :         } else {

	b           |$LN1@duration_c|
|$LN2@duration_c|

; 440  :             if (_Num_is_one) {

	mov         w8,#0
	cmp         w8,#0
	beq         |$LN6@duration_c|

; 441  :                 return static_cast<_To>(

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ|
	fmov        d16,#1
	fdiv        d16,d0,d16
	str         d16,[sp,#0x38]
	add         x1,sp,#0x38
	ldr         x0,[sp,#0x18]
	bl          |??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z|
	ldr         x0,[sp,#0x18]
	b           |$LN1@duration_c|

; 442  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 443  :             } else {

	b           |$LN1@duration_c|
|$LN6@duration_c|

; 444  :                 return static_cast<_To>(static_cast<_ToRep>(

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ|
	ldr         d16,|$LN9@duration_c|
	fmul        d17,d0,d16
	fmov        d16,#1
	fdiv        d16,d17,d16
	str         d16,[sp,#0x40]
	add         x1,sp,#0x40
	ldr         x0,[sp,#0x18]
	bl          |??$?0N$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z|
	ldr         x0,[sp,#0x18]
|$LN1@duration_c|
	ldp         fp,lr,[sp],#0x50
	ret
	nop
|$LN9@duration_c|
	DCFD         1e+09

	ENDP  ; |??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z|, std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,double,std::ratio<1,1>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\type_traits

	AREA	|.text$mn|, CODE, ARM64

|??$forward@PEAV?$tuple@P6AXXZ@std@@@std@@YA$$QEAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@@Z| PROC ; std::forward<std::tuple<void (__cdecl*)(void)> *>

; 1426 : _NODISCARD _MSVC_INTRINSIC constexpr _Ty&& forward(remove_reference_t<_Ty>& _Arg) noexcept {

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]

; 1427 :     return static_cast<_Ty&&>(_Arg);

	ldr         x0,[sp]
	add         sp,sp,#0x10
	ret

	ENDP  ; |??$forward@PEAV?$tuple@P6AXXZ@std@@@std@@YA$$QEAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@@Z|, std::forward<std::tuple<void (__cdecl*)(void)> *>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

	AREA	|.text$mn|, CODE, ARM64

|??$?0AEAPEAV?$tuple@P6AXXZ@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXXZ@1@@Z| PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1><std::tuple<void (__cdecl*)(void)> * &>

; 1375 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

|$LN3|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	str         x0,[sp,#0x18]
	strb        w1,[sp,#0x10]
	str         x2,[sp,#0x20]
	ldr         x0,[sp,#0x20]
	bl          |??$forward@AEAPEAV?$tuple@P6AXXZ@std@@@std@@YAAEAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@@Z|
	ldr         x9,[sp,#0x18]
	ldr         x8,[x0]
	str         x8,[x9]
	ldr         x0,[sp,#0x18]
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |??$?0AEAPEAV?$tuple@P6AXXZ@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXXZ@1@@Z|, std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1><std::tuple<void (__cdecl*)(void)> * &>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\tuple

	AREA	|.text$mn|, CODE, ARM64

|??$?0U_Exact_args_t@std@@AEBQ6AXXZ$$V$0A@@?$tuple@P6AXXZ@std@@QEAA@U_Exact_args_t@1@AEBQ6AXXZ@Z| PROC ; std::tuple<void (__cdecl*)(void)>::tuple<void (__cdecl*)(void)><std::_Exact_args_t,void (__cdecl*const &)(void),0>

; 239  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...), _Myfirst(_STD forward<_This2>(_This_arg)) {}

|$LN3|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	str         x0,[sp,#0x18]
	strb        w1,[sp,#0x10]
	str         x2,[sp,#0x20]
	ldrb        w1,[sp,#0x11]
	ldr         x0,[sp,#0x18]
	bl          |??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z|
	ldr         x0,[sp,#0x20]
	bl          |??$forward@AEBQ6AXXZ@std@@YAAEBQ6AXXZAEBQ6AXXZ@Z|
	mov         x1,x0
	ldr         x0,[sp,#0x18]
	bl          |??$?0AEBQ6AXXZ@?$_Tuple_val@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z|
	ldr         x0,[sp,#0x18]
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |??$?0U_Exact_args_t@std@@AEBQ6AXXZ$$V$0A@@?$tuple@P6AXXZ@std@@QEAA@U_Exact_args_t@1@AEBQ6AXXZ@Z|, std::tuple<void (__cdecl*)(void)>::tuple<void (__cdecl*)(void)><std::_Exact_args_t,void (__cdecl*const &)(void),0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| PROC ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000000000>,0>

; 107  :             : _MyRep(_CHRONO duration_cast<duration>(_Dur).count()) {}

|$LN3|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	str         x0,[sp,#0x10]
	str         x1,[sp,#0x18]
	ldr         x1,[sp,#0x18]
	add         x0,sp,#0x20
	bl          |??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|
	bl          |?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ|
	ldr         x8,[sp,#0x10]
	str         d0,[x8]
	ldr         x0,[sp,#0x10]
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|, std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000000000>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$?0NU?$ratio@$00$00@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z| PROC ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,std::ratio<1,1>,0>

; 107  :             : _MyRep(_CHRONO duration_cast<duration>(_Dur).count()) {}

|$LN3|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	str         x0,[sp,#0x10]
	str         x1,[sp,#0x18]
	ldr         x1,[sp,#0x18]
	add         x0,sp,#0x20
	bl          |??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z|
	bl          |?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ|
	ldr         x8,[sp,#0x10]
	str         d0,[x8]
	ldr         x0,[sp,#0x10]
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |??$?0NU?$ratio@$00$00@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z|, std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,std::ratio<1,1>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z| PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000>,0>

; 422  :         is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) /* strengthened */ {

|$LN9|
	stp         fp,lr,[sp,#-0x50]!
	mov         fp,sp
	str         x0,[sp,#0x18]
	str         x1,[sp,#0x20]

; 423  :         // convert duration to another duration; truncate
; 424  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 425  : 
; 426  :         using _ToRep = typename _To::rep;
; 427  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 428  : 
; 429  :         constexpr bool _Num_is_one = _CF::num == 1;

	mov         w8,#0
	strb        w8,[sp,#0x10]

; 430  :         constexpr bool _Den_is_one = _CF::den == 1;

	mov         w8,#1
	strb        w8,[sp,#0x11]

; 431  : 
; 432  :         if (_Den_is_one) {

	mov         w8,#1
	cmp         w8,#0
	beq         |$LN2@duration_c|

; 433  :             if (_Num_is_one) {

	mov         w8,#0
	cmp         w8,#0
	beq         |$LN4@duration_c|

; 434  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ|
	str         x0,[sp,#0x28]
	add         x1,sp,#0x28
	ldr         x0,[sp,#0x18]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z|
	ldr         x0,[sp,#0x18]
	b           |$LN1@duration_c|

; 435  :             } else {

	b           |$LN5@duration_c|
|$LN4@duration_c|

; 436  :                 return static_cast<_To>(

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ|
	mov         x8,#0x64
	mul         x8,x0,x8
	str         x8,[sp,#0x30]
	add         x1,sp,#0x30
	ldr         x0,[sp,#0x18]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z|
	ldr         x0,[sp,#0x18]
	b           |$LN1@duration_c|
|$LN5@duration_c|

; 437  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 438  :             }
; 439  :         } else {

	b           |$LN1@duration_c|
|$LN2@duration_c|

; 440  :             if (_Num_is_one) {

	mov         w8,#0
	cmp         w8,#0
	beq         |$LN6@duration_c|

; 441  :                 return static_cast<_To>(

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ|
	str         x0,[sp,#0x38]
	add         x1,sp,#0x38
	ldr         x0,[sp,#0x18]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z|
	ldr         x0,[sp,#0x18]
	b           |$LN1@duration_c|

; 442  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 443  :             } else {

	b           |$LN1@duration_c|
|$LN6@duration_c|

; 444  :                 return static_cast<_To>(static_cast<_ToRep>(

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ|
	mov         x8,#0x64
	mul         x8,x0,x8
	str         x8,[sp,#0x40]
	add         x1,sp,#0x40
	ldr         x0,[sp,#0x18]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z|
	ldr         x0,[sp,#0x18]
|$LN1@duration_c|
	ldp         fp,lr,[sp],#0x50
	ret

	ENDP  ; |??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z|, std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\type_traits

	AREA	|.text$mn|, CODE, ARM64

|??$invoke@P6AXXZ@std@@YAX$$QEAP6AXXZ@Z| PROC		; std::invoke<void (__cdecl*)(void)>

; 1563 :     -> decltype(static_cast<_Callable&&>(_Obj)()) {

|$LN3|
	stp         fp,lr,[sp,#-0x20]!
	mov         fp,sp
	str         x0,[sp,#0x10]

; 1564 :     return static_cast<_Callable&&>(_Obj)();

	ldr         x8,[sp,#0x10]
	ldr         x8,[x8]
	blr         x8
	ldp         fp,lr,[sp],#0x20
	ret

	ENDP  ; |??$invoke@P6AXXZ@std@@YAX$$QEAP6AXXZ@Z|, std::invoke<void (__cdecl*)(void)>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\type_traits

	AREA	|.text$mn|, CODE, ARM64

|??$move@AEAP6AXXZ@std@@YA$$QEAP6AXXZAEAP6AXXZ@Z| PROC	; std::move<void (__cdecl*&)(void)>

; 1437 : _NODISCARD _MSVC_INTRINSIC constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept {

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]

; 1438 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	ldr         x0,[sp]
	add         sp,sp,#0x10
	ret

	ENDP  ; |??$move@AEAP6AXXZ@std@@YA$$QEAP6AXXZAEAP6AXXZ@Z|, std::move<void (__cdecl*&)(void)>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\tuple

	AREA	|.text$mn|, CODE, ARM64

|??$get@$0A@P6AXXZ@std@@YAAEAP6AXXZAEAV?$tuple@P6AXXZ@0@@Z| PROC ; std::get<0,void (__cdecl*)(void)>

; 742  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]

; 743  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 744  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

	ldr         x0,[sp]
	add         sp,sp,#0x10
	ret

	ENDP  ; |??$get@$0A@P6AXXZ@std@@YAAEAP6AXXZAEAV?$tuple@P6AXXZ@0@@Z|, std::get<0,void (__cdecl*)(void)>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

	AREA	|.text$mn|, CODE, ARM64

|??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V?$tuple@P6AXXZ@std@@@1@$$QEAPEAV?$tuple@P6AXXZ@1@@Z| PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1><std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *>

; 1380 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

|$LN3|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	str         x0,[sp,#0x18]
	strb        w1,[sp,#0x10]
	str         x2,[sp,#0x20]
	str         x3,[sp,#0x28]
	ldr         x0,[sp,#0x20]
	bl          |??$forward@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@@std@@YA$$QEAU?$default_delete@V?$tuple@P6AXXZ@std@@@0@AEAU10@@Z|
	ldr         x0,[sp,#0x28]
	bl          |??$forward@PEAV?$tuple@P6AXXZ@std@@@std@@YA$$QEAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@@Z|
	ldr         x9,[sp,#0x18]
	ldr         x8,[x0]
	str         x8,[x9]
	ldr         x0,[sp,#0x18]
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V?$tuple@P6AXXZ@std@@@1@$$QEAPEAV?$tuple@P6AXXZ@1@@Z|, std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1><std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\type_traits

	AREA	|.text$mn|, CODE, ARM64

|??$forward@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@@std@@YA$$QEAU?$default_delete@V?$tuple@P6AXXZ@std@@@0@AEAU10@@Z| PROC ; std::forward<std::default_delete<std::tuple<void (__cdecl*)(void)> > >

; 1426 : _NODISCARD _MSVC_INTRINSIC constexpr _Ty&& forward(remove_reference_t<_Ty>& _Arg) noexcept {

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]

; 1427 :     return static_cast<_Ty&&>(_Arg);

	ldr         x0,[sp]
	add         sp,sp,#0x10
	ret

	ENDP  ; |??$forward@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@@std@@YA$$QEAU?$default_delete@V?$tuple@P6AXXZ@std@@@0@AEAU10@@Z|, std::forward<std::default_delete<std::tuple<void (__cdecl*)(void)> > >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory

	AREA	|.text$mn|, CODE, ARM64

|??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXXZ@1@@Z| PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > ><std::default_delete<std::tuple<void (__cdecl*)(void)> >,0>

; 3119 :     _CONSTEXPR23 explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t{}, _Ptr) {}

|$LN3|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	str         x0,[sp,#0x18]
	str         x1,[sp,#0x20]
	ldr         x0,[sp,#0x18]
	add         x2,sp,#0x20
	ldrb        w1,[sp,#0x10]
	bl          |??$?0AEAPEAV?$tuple@P6AXXZ@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXXZ@1@@Z|
	ldr         x0,[sp,#0x18]
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXXZ@1@@Z|, std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > ><std::default_delete<std::tuple<void (__cdecl*)(void)> >,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\tuple

	AREA	|.text$mn|, CODE, ARM64

|??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z| PROC ; std::tuple<void (__cdecl*)(void)>::tuple<void (__cdecl*)(void)><void (__cdecl*)(void),0>

; 277  :         : tuple(_Exact_args_t{}, _This_arg, _Rest_arg...) {}

|$LN3|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	mov         xip0,#-2
	str         xip0,[fp,#0x28]
	str         x0,[fp,#0x18]
	str         x1,[fp,#0x20]
	ldr         x2,[fp,#0x20]
	ldrb        w1,[fp,#0x10]
	ldr         x0,[fp,#0x18]
	bl          |??$?0U_Exact_args_t@std@@AEBQ6AXXZ$$V$0A@@?$tuple@P6AXXZ@std@@QEAA@U_Exact_args_t@1@AEBQ6AXXZ@Z|
	ldr         x0,[fp,#0x18]
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z|, std::tuple<void (__cdecl*)(void)>::tuple<void (__cdecl*)(void)><void (__cdecl*)(void),0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,0>

; 422  :         is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) /* strengthened */ {

|$LN10|
	stp         fp,lr,[sp,#-0x50]!
	mov         fp,sp
	str         x0,[sp,#0x18]
	str         x1,[sp,#0x20]

; 423  :         // convert duration to another duration; truncate
; 424  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 425  : 
; 426  :         using _ToRep = typename _To::rep;
; 427  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 428  : 
; 429  :         constexpr bool _Num_is_one = _CF::num == 1;

	mov         w8,#1
	strb        w8,[sp,#0x10]

; 430  :         constexpr bool _Den_is_one = _CF::den == 1;

	mov         w8,#0
	strb        w8,[sp,#0x11]

; 431  : 
; 432  :         if (_Den_is_one) {

	mov         w8,#0
	cmp         w8,#0
	beq         |$LN2@duration_c|

; 433  :             if (_Num_is_one) {

	mov         w8,#1
	cmp         w8,#0
	beq         |$LN4@duration_c|

; 434  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	str         x0,[sp,#0x28]
	add         x1,sp,#0x28
	ldr         x0,[sp,#0x18]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z|
	ldr         x0,[sp,#0x18]
	b           |$LN1@duration_c|

; 435  :             } else {

	b           |$LN5@duration_c|
|$LN4@duration_c|

; 436  :                 return static_cast<_To>(

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	str         x0,[sp,#0x30]
	add         x1,sp,#0x30
	ldr         x0,[sp,#0x18]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z|
	ldr         x0,[sp,#0x18]
	b           |$LN1@duration_c|
|$LN5@duration_c|

; 437  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 438  :             }
; 439  :         } else {

	b           |$LN1@duration_c|
|$LN2@duration_c|

; 440  :             if (_Num_is_one) {

	mov         w8,#1
	cmp         w8,#0
	beq         |$LN6@duration_c|

; 441  :                 return static_cast<_To>(

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	ldr         x8,|$LN9@duration_c|
	sdiv        x8,x0,x8
	str         x8,[sp,#0x38]
	add         x1,sp,#0x38
	ldr         x0,[sp,#0x18]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z|
	ldr         x0,[sp,#0x18]
	b           |$LN1@duration_c|

; 442  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 443  :             } else {

	b           |$LN1@duration_c|
|$LN6@duration_c|

; 444  :                 return static_cast<_To>(static_cast<_ToRep>(

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	ldr         x8,|$LN9@duration_c|
	sdiv        x8,x0,x8
	str         x8,[sp,#0x40]
	add         x1,sp,#0x40
	ldr         x0,[sp,#0x18]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z|
	ldr         x0,[sp,#0x18]
|$LN1@duration_c|
	ldp         fp,lr,[sp],#0x50
	ret
	nop
|$LN9@duration_c|
	DCQ         0x3b9aca00

	ENDP  ; |??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|, std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z| PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,0>

; 422  :         is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) /* strengthened */ {

|$LN9|
	stp         fp,lr,[sp,#-0x50]!
	mov         fp,sp
	str         x0,[sp,#0x18]
	str         x1,[sp,#0x20]

; 423  :         // convert duration to another duration; truncate
; 424  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 425  : 
; 426  :         using _ToRep = typename _To::rep;
; 427  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 428  : 
; 429  :         constexpr bool _Num_is_one = _CF::num == 1;

	mov         w8,#1
	strb        w8,[sp,#0x10]

; 430  :         constexpr bool _Den_is_one = _CF::den == 1;

	mov         w8,#1
	strb        w8,[sp,#0x11]

; 431  : 
; 432  :         if (_Den_is_one) {

	mov         w8,#1
	cmp         w8,#0
	beq         |$LN2@duration_c|

; 433  :             if (_Num_is_one) {

	mov         w8,#1
	cmp         w8,#0
	beq         |$LN4@duration_c|

; 434  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	str         x0,[sp,#0x28]
	add         x1,sp,#0x28
	ldr         x0,[sp,#0x18]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z|
	ldr         x0,[sp,#0x18]
	b           |$LN1@duration_c|

; 435  :             } else {

	b           |$LN5@duration_c|
|$LN4@duration_c|

; 436  :                 return static_cast<_To>(

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	str         x0,[sp,#0x30]
	add         x1,sp,#0x30
	ldr         x0,[sp,#0x18]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z|
	ldr         x0,[sp,#0x18]
	b           |$LN1@duration_c|
|$LN5@duration_c|

; 437  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 438  :             }
; 439  :         } else {

	b           |$LN1@duration_c|
|$LN2@duration_c|

; 440  :             if (_Num_is_one) {

	mov         w8,#1
	cmp         w8,#0
	beq         |$LN6@duration_c|

; 441  :                 return static_cast<_To>(

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	str         x0,[sp,#0x38]
	add         x1,sp,#0x38
	ldr         x0,[sp,#0x18]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z|
	ldr         x0,[sp,#0x18]
	b           |$LN1@duration_c|

; 442  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 443  :             } else {

	b           |$LN1@duration_c|
|$LN6@duration_c|

; 444  :                 return static_cast<_To>(static_cast<_ToRep>(

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	str         x0,[sp,#0x40]
	add         x1,sp,#0x40
	ldr         x0,[sp,#0x18]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z|
	ldr         x0,[sp,#0x18]
|$LN1@duration_c|
	ldp         fp,lr,[sp],#0x50
	ret

	ENDP  ; |??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z|, std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| PROC ; std::chrono::operator<<double,std::ratio<1,1>,__int64,std::ratio<1,1000000000> >

; 383  :             is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) /* strengthened */ {

|$LN5|
	str         d8,[sp,#-0x10]!
	stp         fp,lr,[sp,#-0x40]!
	mov         fp,sp
	str         x0,[sp,#0x18]
	str         x1,[sp,#0x20]

; 384  :         using _CT = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 385  :         return _CT(_Left).count() < _CT(_Right).count();

	ldr         x1,[sp,#0x18]
	add         x0,sp,#0x28
	bl          |??$?0NU?$ratio@$00$00@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z|
	bl          |?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ|
	fmov        d8,d0
	ldr         x1,[sp,#0x20]
	add         x0,sp,#0x30
	bl          |??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|
	bl          |?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ|
	fcmpe       d8,d0
	bhs         |$LN3@operator|
	mov         w8,#1
	str         w8,[sp,#0x10]
	b           |$LN4@operator|
|$LN3@operator|
	mov         w8,#0
	str         w8,[sp,#0x10]
|$LN4@operator|
	ldr         w8,[sp,#0x10]
	uxtb        w0,w8
	mov         w0,w0
	ldp         fp,lr,[sp],#0x40
	ldr         d8,[sp],#0x10
	ret

	ENDP  ; |??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|, std::chrono::operator<<double,std::ratio<1,1>,__int64,std::ratio<1,1000000000> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$?0_JU?$ratio@$00$0JIJGIA@@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z| PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,0>

; 107  :             : _MyRep(_CHRONO duration_cast<duration>(_Dur).count()) {}

|$LN3|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	str         x0,[sp,#0x10]
	str         x1,[sp,#0x18]
	ldr         x1,[sp,#0x18]
	add         x0,sp,#0x20
	bl          |??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z|
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	ldr         x8,[sp,#0x10]
	str         x0,[x8]
	ldr         x0,[sp,#0x10]
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |??$?0_JU?$ratio@$00$0JIJGIA@@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z|, std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\utility

	AREA	|.text$mn|, CODE, ARM64

|??$exchange@PEAV?$tuple@P6AXXZ@std@@$$T@std@@YAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@$$QEA$$T@Z| PROC ; std::exchange<std::tuple<void (__cdecl*)(void)> *,std::nullptr_t>

; 652  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

|$LN3|
	sub         sp,sp,#0x20
	str         x0,[sp]
	str         x1,[sp,#8]

; 653  :     // assign _New_val to _Val, return previous _Val
; 654  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	ldr         x8,[sp]
	ldr         x8,[x8]
	str         x8,[sp,#0x10]

; 655  :     _Val         = static_cast<_Other&&>(_New_val);

	ldr         x9,[sp]
	ldr         x8,[sp,#8]
	ldr         x8,[x8]
	str         x8,[x9]

; 656  :     return _Old_val;

	ldr         x0,[sp,#0x10]
	add         sp,sp,#0x20
	ret

	ENDP  ; |??$exchange@PEAV?$tuple@P6AXXZ@std@@$$T@std@@YAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@$$QEA$$T@Z|, std::exchange<std::tuple<void (__cdecl*)(void)> *,std::nullptr_t>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread

	AREA	|.text$mn|, CODE, ARM64

|??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z| PROC ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void)>,0>

; 51   :     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept /* terminates */ {

|$LN3|
	stp         fp,lr,[sp,#-0x40]!
	mov         fp,sp
	mov         xip0,#-2
	str         xip0,[fp,#0x30]
	str         x0,[fp,#0x20]

; 52   :         // adapt invoke of user's callable object to _beginthreadex's thread procedure
; 53   :         const unique_ptr<_Tuple> _FnVals(static_cast<_Tuple*>(_RawVals));

	ldr         x1,[fp,#0x20]
	add         x0,fp,#0x18
	bl          |??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXXZ@1@@Z|

; 54   :         _Tuple& _Tup = *_FnVals.get(); // avoid ADL, handle incomplete types

	add         x0,fp,#0x18
	bl          |?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEBAPEAV?$tuple@P6AXXZ@2@XZ|
	str         x0,[fp,#0x28]

; 55   :         _STD invoke(_STD move(_STD get<_Indices>(_Tup))...);

	ldr         x0,[fp,#0x28]
	bl          |??$get@$0A@P6AXXZ@std@@YAAEAP6AXXZAEAV?$tuple@P6AXXZ@0@@Z|
	bl          |??$move@AEAP6AXXZ@std@@YA$$QEAP6AXXZAEAP6AXXZ@Z|
	bl          |??$invoke@P6AXXZ@std@@YAX$$QEAP6AXXZ@Z|

; 56   :         _Cnd_do_broadcast_at_thread_exit(); // TRANSITION, ABI

	bl          _Cnd_do_broadcast_at_thread_exit

; 57   :         return 0;

	mov         w8,#0
	str         w8,[fp,#0x10]
	add         x0,fp,#0x18
	bl          |??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@XZ|
	ldr         w0,[fp,#0x10]
	ldp         fp,lr,[sp],#0x40
	ret

	ENDP  ; |??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z|, std::thread::_Invoke<std::tuple<void (__cdecl*)(void)>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory

	AREA	|.text$mn|, CODE, ARM64

|??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@$$QEAV01@@Z| PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > ><std::default_delete<std::tuple<void (__cdecl*)(void)> >,0>

; 3135 :         : _Mypair(_One_then_variadic_args_t{}, _STD forward<_Dx>(_Right.get_deleter()), _Right.release()) {}

|$LN3|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	str         x0,[sp,#0x20]
	str         x1,[sp,#0x18]
	ldr         x0,[sp,#0x18]
	bl          |?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAPEAV?$tuple@P6AXXZ@2@XZ|
	str         x0,[sp,#0x28]
	ldr         x0,[sp,#0x18]
	bl          |?get_deleter@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ|
	bl          |??$forward@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@@std@@YA$$QEAU?$default_delete@V?$tuple@P6AXXZ@std@@@0@AEAU10@@Z|
	mov         x2,x0
	ldr         x0,[sp,#0x20]
	add         x3,sp,#0x28
	ldrb        w1,[sp,#0x10]
	bl          |??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V?$tuple@P6AXXZ@std@@@1@$$QEAPEAV?$tuple@P6AXXZ@1@@Z|
	ldr         x0,[sp,#0x20]
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@$$QEAV01@@Z|, std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > ><std::default_delete<std::tuple<void (__cdecl*)(void)> >,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

	AREA	|.text$mn|, CODE, ARM64

|?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ| PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Get_first

; 1382 :     constexpr _Ty1& _Get_first() noexcept {

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]

; 1383 :         return *this;

	ldr         x0,[sp]
	add         sp,sp,#0x10
	ret

	ENDP  ; |?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ|, std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void)> >,std::tuple<void (__cdecl*)(void)> *,1>::_Get_first

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory

	AREA	|.text$mn|, CODE, ARM64

|?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAPEAV?$tuple@P6AXXZ@2@XZ| PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::release

; 3205 :     _CONSTEXPR23 pointer release() noexcept {

|$LN3|
	stp         fp,lr,[sp,#-0x20]!
	mov         fp,sp
	str         x0,[sp,#0x10]

; 3206 :         return _STD exchange(_Mypair._Myval2, nullptr);

	mov         x8,#0
	str         x8,[sp,#0x18]
	ldr         x0,[sp,#0x10]
	add         x1,sp,#0x18
	bl          |??$exchange@PEAV?$tuple@P6AXXZ@std@@$$T@std@@YAPEAV?$tuple@P6AXXZ@0@AEAPEAV10@$$QEA$$T@Z|
	ldp         fp,lr,[sp],#0x20
	ret

	ENDP  ; |?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAPEAV?$tuple@P6AXXZ@2@XZ|, std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::release

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory

	AREA	|.text$mn|, CODE, ARM64

|?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEBAPEAV?$tuple@P6AXXZ@2@XZ| PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::get

; 3197 :     _NODISCARD _CONSTEXPR23 pointer get() const noexcept {

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]

; 3198 :         return _Mypair._Myval2;

	ldr         x8,[sp]
	ldr         x0,[x8]
	add         sp,sp,#0x10
	ret

	ENDP  ; |?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEBAPEAV?$tuple@P6AXXZ@2@XZ|, std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::get

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory

	AREA	|.text$mn|, CODE, ARM64

|?get_deleter@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ| PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::get_deleter

; 3181 :     _NODISCARD _CONSTEXPR23 _Dx& get_deleter() noexcept {

|$LN3|
	stp         fp,lr,[sp,#-0x20]!
	mov         fp,sp
	str         x0,[sp,#0x10]

; 3182 :         return _Mypair._Get_first();

	ldr         x0,[sp,#0x10]
	bl          |?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ|
	ldp         fp,lr,[sp],#0x20
	ret

	ENDP  ; |?get_deleter@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ|, std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::get_deleter

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory

	AREA	|.text$mn|, CODE, ARM64

|??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@XZ| PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::~unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >

; 3175 :     _CONSTEXPR23 ~unique_ptr() noexcept {

|$LN4|
	str         x19,[sp,#-0x10]!
	stp         fp,lr,[sp,#-0x20]!
	mov         fp,sp
	str         x0,[sp,#0x10]

; 3176 :         if (_Mypair._Myval2) {

	ldr         x8,[sp,#0x10]
	ldr         x8,[x8]
	cmp         x8,#0
	beq         |$LN2@unique_ptr|

; 3177 :             _Mypair._Get_first()(_Mypair._Myval2);

	ldr         x19,[sp,#0x10]
	ldr         x0,[sp,#0x10]
	bl          |?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@PEAV?$tuple@P6AXXZ@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXXZ@std@@@2@XZ|
	ldr         x1,[x19]
	bl          |??R?$default_delete@V?$tuple@P6AXXZ@std@@@std@@QEBAXPEAV?$tuple@P6AXXZ@1@@Z|
|$LN2@unique_ptr|
	ldp         fp,lr,[sp],#0x20
	ldr         x19,[sp],#0x10
	ret

	ENDP  ; |??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@XZ|, std::unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >::~unique_ptr<std::tuple<void (__cdecl*)(void)>,std::default_delete<std::tuple<void (__cdecl*)(void)> > >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory

	AREA	|.text$mn|, CODE, ARM64

|??R?$default_delete@V?$tuple@P6AXXZ@std@@@std@@QEBAXPEAV?$tuple@P6AXXZ@1@@Z| PROC ; std::default_delete<std::tuple<void (__cdecl*)(void)> >::operator()

; 3064 :     _CONSTEXPR23 void operator()(_Ty* _Ptr) const noexcept /* strengthened */ { // delete a pointer

|$LN3|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	str         x0,[sp,#0x20]
	str         x1,[sp,#0x10]

; 3065 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 3066 :         delete _Ptr;

	ldr         x8,[sp,#0x10]
	str         x8,[sp,#0x18]
	mov         x1,#8
	ldr         x0,[sp,#0x18]
	bl          |??3@YAXPEAX_K@Z|
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |??R?$default_delete@V?$tuple@P6AXXZ@std@@@std@@QEBAXPEAV?$tuple@P6AXXZ@1@@Z|, std::default_delete<std::tuple<void (__cdecl*)(void)> >::operator()

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\memory

	AREA	|.text$mn|, CODE, ARM64

|??$make_unique@V?$tuple@P6AXXZ@std@@A6AXXZ$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@0@A6AXXZ@Z| PROC ; std::make_unique<std::tuple<void (__cdecl*)(void)>,void (__cdecl&)(void),0>

; 3392 : _NODISCARD_SMART_PTR_ALLOC _CONSTEXPR23 unique_ptr<_Ty> make_unique(_Types&&... _Args) { // make a unique_ptr

|$LN8|
	stp         fp,lr,[sp,#-0x50]!
	mov         fp,sp
	str         x0,[sp,#0x28]
	str         x1,[sp,#0x30]
	mov         w8,#0
	str         w8,[sp,#0x10]

; 3393 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

	mov         x0,#8
	bl          |??2@YAPEAX_K@Z|
	str         x0,[sp,#0x18]
	ldr         x8,[sp,#0x18]
	cmp         x8,#0
	beq         |$LN3@make_uniqu|
	ldr         x0,[sp,#0x30]
	bl          |??$forward@A6AXXZ@std@@YAA6AXXZA6AXXZ@Z|
	str         x0,[sp,#0x38]
	add         x1,sp,#0x38
	ldr         x0,[sp,#0x18]
	bl          |??$?0P6AXXZ$0A@@?$tuple@P6AXXZ@std@@QEAA@AEBQ6AXXZ@Z|
	str         x0,[sp,#0x20]
	b           |$LN4@make_uniqu|
|$LN3@make_uniqu|
	mov         x8,#0
	str         x8,[sp,#0x20]
|$LN4@make_uniqu|
	ldr         x1,[sp,#0x20]
	add         x0,sp,#0x48
	bl          |??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXXZ@1@@Z|
	str         x0,[sp,#0x40]
	ldr         x1,[sp,#0x40]
	ldr         x0,[sp,#0x28]
	bl          |??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@$$QEAV01@@Z|
	ldr         w8,[sp,#0x10]
	orr         w8,w8,#1
	str         w8,[sp,#0x10]
	add         x0,sp,#0x48
	bl          |??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@XZ|
	ldr         x0,[sp,#0x28]
	ldp         fp,lr,[sp],#0x50
	ret

	ENDP  ; |??$make_unique@V?$tuple@P6AXXZ@std@@A6AXXZ$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@0@A6AXXZ@Z|, std::make_unique<std::tuple<void (__cdecl*)(void)>,void (__cdecl&)(void),0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z| PROC ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >

; 699  :     is_arithmetic_v<_Rep>) {

|$LN7|
	stp         fp,lr,[sp,#-0x70]!
	mov         fp,sp
	str         x0,[sp,#0x30]
	str         x1,[sp,#0x20]

; 700  :     // Convert duration to xtime, maximum 10 days from now, returns whether clamping occurred.
; 701  :     // If clamped, timeouts will be transformed into spurious non-timeout wakes, due to ABI restrictions where
; 702  :     // the other side of the DLL boundary overflows int32_t milliseconds.
; 703  :     // Every function calling this one is TRANSITION, ABI
; 704  :     constexpr _CHRONO nanoseconds _Ten_days{_CHRONO hours{24} * 10};

	ldr         x8,|$LN5@To_xtime_1|
	str         x8,[sp,#0x40]

; 705  :     constexpr _CHRONO duration<double> _Ten_days_d{_Ten_days};

	ldr         d16,|$LN6@To_xtime_1|
	str         d16,[sp,#0x38]

; 706  :     _CHRONO nanoseconds _Tx0 = _CHRONO system_clock::now().time_since_epoch();

	add         x0,sp,#0x50
	bl          |?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ|
	add         x1,sp,#0x58
	bl          |?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ|
	mov         x1,x0
	add         x0,sp,#0x18
	bl          |??$?0_JU?$ratio@$00$0JIJGIA@@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z|

; 707  :     const bool _Clamped      = _Ten_days_d < _Rel_time;

	ldr         x1,[sp,#0x20]
	add         x0,sp,#0x38
	bl          |??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|
	uxtb        w8,w0
	strb        w8,[sp,#0x10]

; 708  :     if (_Clamped) {

	ldrb        w8,[sp,#0x10]
	mov         w8,w8
	cmp         w8,#0
	beq         |$LN2@To_xtime_1|

; 709  :         _Tx0 += _Ten_days;

	add         x1,sp,#0x40
	add         x0,sp,#0x18
	bl          |??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z|

; 710  :     } else {

	b           |$LN3@To_xtime_1|
|$LN2@To_xtime_1|

; 711  :         _Tx0 += _CHRONO duration_cast<_CHRONO nanoseconds>(_Rel_time);

	ldr         x1,[sp,#0x20]
	add         x0,sp,#0x60
	bl          |??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z|
	mov         x1,x0
	add         x0,sp,#0x18
	bl          |??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z|
|$LN3@To_xtime_1|

; 712  :     }
; 713  : 
; 714  :     const auto _Whole_seconds = _CHRONO duration_cast<_CHRONO seconds>(_Tx0);

	add         x1,sp,#0x18
	add         x0,sp,#0x28
	bl          |??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|

; 715  :     _Xt.sec                   = _Whole_seconds.count();

	add         x0,sp,#0x28
	bl          |?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ|
	ldr         x8,[sp,#0x30]
	str         x0,[x8]

; 716  :     _Tx0 -= _Whole_seconds;

	add         x1,sp,#0x28
	add         x0,sp,#0x48
	bl          |??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z|
	add         x1,sp,#0x48
	add         x0,sp,#0x18
	bl          |??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z|

; 717  :     _Xt.nsec = static_cast<long>(_Tx0.count());

	add         x0,sp,#0x18
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	mov         w9,w0
	ldr         x8,[sp,#0x30]
	add         x8,x8,#8
	str         w9,[x8]

; 718  :     return _Clamped;

	ldrb        w0,[sp,#0x10]
	ldp         fp,lr,[sp],#0x70
	ret
|$LN5@To_xtime_1|
	DCQ         0x311cdad160000
|$LN6@To_xtime_1|
	DCFD         864000

	ENDP  ; |??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z|, std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z| PROC ; std::chrono::operator<=<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; 579  :             is_arithmetic_v<typename _Duration1::rep>&& is_arithmetic_v<typename _Duration2::rep>) /* strengthened */ {

|$LN5|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	str         x0,[sp,#0x18]
	str         x1,[sp,#0x20]

; 580  :         return !(_Right < _Left);

	ldr         x1,[sp,#0x18]
	ldr         x0,[sp,#0x20]
	bl          |??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|
	uxtb        w8,w0
	mov         w8,w8
	cmp         w8,#0
	bne         |$LN3@operator|
	mov         w8,#1
	str         w8,[sp,#0x10]
	b           |$LN4@operator|
|$LN3@operator|
	mov         w8,#0
	str         w8,[sp,#0x10]
|$LN4@operator|
	ldr         w8,[sp,#0x10]
	uxtb        w0,w8
	mov         w0,w0
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|, std::chrono::operator<=<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z| PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1>,0>

; 422  :         is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) /* strengthened */ {

|$LN10|
	stp         fp,lr,[sp,#-0x50]!
	mov         fp,sp
	str         x0,[sp,#0x18]
	str         x1,[sp,#0x20]

; 423  :         // convert duration to another duration; truncate
; 424  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 425  : 
; 426  :         using _ToRep = typename _To::rep;
; 427  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 428  : 
; 429  :         constexpr bool _Num_is_one = _CF::num == 1;

	mov         w8,#0
	strb        w8,[sp,#0x10]

; 430  :         constexpr bool _Den_is_one = _CF::den == 1;

	mov         w8,#1
	strb        w8,[sp,#0x11]

; 431  : 
; 432  :         if (_Den_is_one) {

	mov         w8,#1
	cmp         w8,#0
	beq         |$LN2@duration_c|

; 433  :             if (_Num_is_one) {

	mov         w8,#0
	cmp         w8,#0
	beq         |$LN4@duration_c|

; 434  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ|
	str         x0,[sp,#0x28]
	add         x1,sp,#0x28
	ldr         x0,[sp,#0x18]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z|
	ldr         x0,[sp,#0x18]
	b           |$LN1@duration_c|

; 435  :             } else {

	b           |$LN5@duration_c|
|$LN4@duration_c|

; 436  :                 return static_cast<_To>(

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ|
	ldr         x8,|$LN9@duration_c|
	mul         x8,x0,x8
	str         x8,[sp,#0x30]
	add         x1,sp,#0x30
	ldr         x0,[sp,#0x18]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z|
	ldr         x0,[sp,#0x18]
	b           |$LN1@duration_c|
|$LN5@duration_c|

; 437  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 438  :             }
; 439  :         } else {

	b           |$LN1@duration_c|
|$LN2@duration_c|

; 440  :             if (_Num_is_one) {

	mov         w8,#0
	cmp         w8,#0
	beq         |$LN6@duration_c|

; 441  :                 return static_cast<_To>(

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ|
	str         x0,[sp,#0x38]
	add         x1,sp,#0x38
	ldr         x0,[sp,#0x18]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z|
	ldr         x0,[sp,#0x18]
	b           |$LN1@duration_c|

; 442  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 443  :             } else {

	b           |$LN1@duration_c|
|$LN6@duration_c|

; 444  :                 return static_cast<_To>(static_cast<_ToRep>(

	ldr         x0,[sp,#0x20]
	bl          |?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ|
	ldr         x8,|$LN9@duration_c|
	mul         x8,x0,x8
	str         x8,[sp,#0x40]
	add         x1,sp,#0x40
	ldr         x0,[sp,#0x18]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z|
	ldr         x0,[sp,#0x18]
|$LN1@duration_c|
	ldp         fp,lr,[sp],#0x50
	ret
	nop
|$LN9@duration_c|
	DCQ         0x3b9aca00

	ENDP  ; |??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z|, std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z| PROC ; std::chrono::operator<<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >

; 383  :             is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) /* strengthened */ {

|$LN5|
	str         x19,[sp,#-0x10]!
	stp         fp,lr,[sp,#-0x50]!
	mov         fp,sp
	str         x0,[sp,#0x18]
	str         x1,[sp,#0x28]

; 384  :         using _CT = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 385  :         return _CT(_Left).count() < _CT(_Right).count();

	ldr         x8,[sp,#0x18]
	ldr         x8,[x8]
	str         x8,[sp,#0x20]
	ldr         x8,[sp,#0x20]
	str         x8,[sp,#0x38]
	ldr         x8,[sp,#0x28]
	ldr         x8,[x8]
	str         x8,[sp,#0x30]
	ldr         x8,[sp,#0x30]
	str         x8,[sp,#0x40]
	add         x0,sp,#0x38
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	mov         x19,x0
	add         x0,sp,#0x40
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	cmp         x19,x0
	bge         |$LN3@operator|
	mov         w8,#1
	str         w8,[sp,#0x10]
	b           |$LN4@operator|
|$LN3@operator|
	mov         w8,#0
	str         w8,[sp,#0x10]
|$LN4@operator|
	ldr         w8,[sp,#0x10]
	uxtb        w0,w8
	mov         w0,w0
	ldp         fp,lr,[sp],#0x50
	ldr         x19,[sp],#0x10
	ret

	ENDP  ; |??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z|, std::chrono::operator<<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$00@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z| PROC ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1> >

; 290  :             is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) /* strengthened */ {

|$LN3|
	str         x19,[sp,#-0x10]!
	stp         fp,lr,[sp,#-0x50]!
	mov         fp,sp
	str         x0,[sp,#0x10]
	str         x1,[sp,#0x18]
	str         x2,[sp,#0x30]

; 291  :         using _CD = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 292  :         return _CD(_CD(_Left).count() - _CD(_Right).count());

	ldr         x8,[sp,#0x18]
	ldr         x8,[x8]
	str         x8,[sp,#0x20]
	ldr         x8,[sp,#0x20]
	str         x8,[sp,#0x28]
	add         x0,sp,#0x28
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	mov         x19,x0
	ldr         x1,[sp,#0x30]
	add         x0,sp,#0x40
	bl          |??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z|
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	sub         x8,x19,x0
	str         x8,[sp,#0x38]
	add         x1,sp,#0x38
	ldr         x0,[sp,#0x10]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z|
	ldr         x0,[sp,#0x10]
	ldp         fp,lr,[sp],#0x50
	ldr         x19,[sp],#0x10
	ret

	ENDP  ; |??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$00@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z|, std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$?M_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z| PROC ; std::chrono::operator<<__int64,std::ratio<1,1>,__int64,std::ratio<1,1> >

; 383  :             is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) /* strengthened */ {

|$LN5|
	str         x19,[sp,#-0x10]!
	stp         fp,lr,[sp,#-0x50]!
	mov         fp,sp
	str         x0,[sp,#0x18]
	str         x1,[sp,#0x28]

; 384  :         using _CT = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 385  :         return _CT(_Left).count() < _CT(_Right).count();

	ldr         x8,[sp,#0x18]
	ldr         x8,[x8]
	str         x8,[sp,#0x20]
	ldr         x8,[sp,#0x20]
	str         x8,[sp,#0x38]
	ldr         x8,[sp,#0x28]
	ldr         x8,[x8]
	str         x8,[sp,#0x30]
	ldr         x8,[sp,#0x30]
	str         x8,[sp,#0x40]
	add         x0,sp,#0x38
	bl          |?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ|
	mov         x19,x0
	add         x0,sp,#0x40
	bl          |?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ|
	cmp         x19,x0
	bge         |$LN3@operator|
	mov         w8,#1
	str         w8,[sp,#0x10]
	b           |$LN4@operator|
|$LN3@operator|
	mov         w8,#0
	str         w8,[sp,#0x10]
|$LN4@operator|
	ldr         w8,[sp,#0x10]
	uxtb        w0,w8
	mov         w0,w0
	ldp         fp,lr,[sp],#0x50
	ldr         x19,[sp],#0x10
	ret

	ENDP  ; |??$?M_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z|, std::chrono::operator<<__int64,std::ratio<1,1>,__int64,std::ratio<1,1> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBM@Z| PROC ; std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><float,0>

; 99   :             : _MyRep(static_cast<_Rep>(_Val)) {}

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]
	str         x1,[sp,#8]
	ldr         x9,[sp]
	ldr         x8,[sp,#8]
	ldr         s16,[x8]
	str         s16,[x9]
	ldr         x0,[sp]
	add         sp,sp,#0x10
	ret

	ENDP  ; |??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBM@Z|, std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><float,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread

	AREA	|.text$mn|, CODE, ARM64

|??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z| PROC	; std::thread::_Start<void (__cdecl&)(void)>

; 68   :     void _Start(_Fn&& _Fx, _Args&&... _Ax) {

|$LN9|
	str         x19,[sp,#-0x10]!
	stp         fp,lr,[sp,#-0x50]!
	mov         fp,sp
	mov         xip0,#-2
	str         xip0,[fp,#0x40]
	str         x0,[fp,#0x10]
	str         x1,[fp,#0x20]

; 69   :         using _Tuple                 = tuple<decay_t<_Fn>, decay_t<_Args>...>;
; 70   :         auto _Decay_copied           = _STD make_unique<_Tuple>(_STD forward<_Fn>(_Fx), _STD forward<_Args>(_Ax)...);

	ldr         x0,[fp,#0x20]
	bl          |??$forward@A6AXXZ@std@@YAA6AXXZA6AXXZ@Z|
	mov         x1,x0
	add         x0,fp,#0x30
	bl          |??$make_unique@V?$tuple@P6AXXZ@std@@A6AXXZ$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@0@A6AXXZ@Z|
	str         x0,[fp,#0x28]
	ldr         x1,[fp,#0x28]
	add         x0,fp,#0x18
	bl          |??$?0U?$default_delete@V?$tuple@P6AXXZ@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@$$QEAV01@@Z|
	nop
	add         x0,fp,#0x30
	bl          |??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@XZ|

; 71   :         constexpr auto _Invoker_proc = _Get_invoke<_Tuple>(make_index_sequence<1 + sizeof...(_Args)>{});

	adrp        x8,|??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z|
	add         x8,x8,|??$_Invoke@V?$tuple@P6AXXZ@std@@$0A@@thread@std@@CAIPEAX@Z|
	str         x8,[fp,#0x38]

; 72   : 
; 73   :         _Thr._Hnd =

	ldr         x8,[fp,#0x10]
	add         x19,x8,#8
	add         x0,fp,#0x18
	bl          |?get@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEBAPEAV?$tuple@P6AXXZ@2@XZ|
	mov         x5,x19
	mov         w4,#0
	mov         x3,x0
	ldr         x2,[fp,#0x38]
	mov         w1,#0
	mov         x0,#0
	adrp        x8,__imp__beginthreadex
	ldr         x8,[x8,__imp__beginthreadex]
	blr         x8
	ldr         x8,[fp,#0x10]
	str         x0,[x8]

; 74   :             reinterpret_cast<void*>(_CSTD _beginthreadex(nullptr, 0, _Invoker_proc, _Decay_copied.get(), 0, &_Thr._Id));
; 75   : 
; 76   :         if (_Thr._Hnd) { // ownership transferred to the thread

	ldr         x8,[fp,#0x10]
	ldr         x8,[x8]
	cmp         x8,#0
	beq         |$LN2@Start|

; 77   :             (void) _Decay_copied.release();

	add         x0,fp,#0x18
	bl          |?release@?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAAPEAV?$tuple@P6AXXZ@2@XZ|

; 78   :         } else { // failed to start thread

	b           |$LN3@Start|
|$LN2@Start|

; 79   :             _Thr._Id = 0;

	ldr         x8,[fp,#0x10]
	add         x9,x8,#8
	mov         w8,#0
	str         w8,[x9]

; 80   :             _Throw_Cpp_error(_RESOURCE_UNAVAILABLE_TRY_AGAIN);

	mov         w0,#6
	bl          |?_Throw_Cpp_error@std@@YAXH@Z|
	nop
|$LN8@Start|
|$LN3@Start|

; 81   :         }
; 82   :     }

	add         x0,fp,#0x18
	bl          |??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@XZ|
	ldp         fp,lr,[sp],#0x50
	ldr         x19,[sp],#0x10
	ret
|$LN7@Start|

	ENDP  ; |??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z|, std::thread::_Start<void (__cdecl&)(void)>

; Function compile flags: /Odtp

	AREA	|.text$x|, DATA

|?dtor$1@?0???$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z@4HA| PROC ; `std::thread::_Start<void (__cdecl&)(void)>'::`1'::dtor$1
	stp         fp,lr,[sp,#-0x10]!
	add         x0,fp,#0x18
	bl          |??1?$unique_ptr@V?$tuple@P6AXXZ@std@@U?$default_delete@V?$tuple@P6AXXZ@std@@@2@@std@@QEAA@XZ|
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z|, std::thread::_Start<void (__cdecl&)(void)>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\type_traits

	AREA	|.text$mn|, CODE, ARM64

|??$forward@A6AXXZ@std@@YAA6AXXZA6AXXZ@Z| PROC		; std::forward<void (__cdecl&)(void)>

; 1426 : _NODISCARD _MSVC_INTRINSIC constexpr _Ty&& forward(remove_reference_t<_Ty>& _Arg) noexcept {

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]

; 1427 :     return static_cast<_Ty&&>(_Arg);

	ldr         x0,[sp]
	add         sp,sp,#0x10
	ret

	ENDP  ; |??$forward@A6AXXZ@std@@YAA6AXXZA6AXXZ@Z|, std::forward<void (__cdecl&)(void)>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread

	AREA	|.text$mn|, CODE, ARM64

|??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z| PROC ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; 186  :     void sleep_until(const chrono::time_point<_Clock, _Duration>& _Abs_time) {

|$LN7|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          __security_push_cookie
	sub         sp,sp,#0x20
	str         x0,[sp,#8]
|$LN2@sleep_unti|

; 187  : #if _HAS_CXX20
; 188  :         static_assert(chrono::is_clock_v<_Clock>, "Clock type required");
; 189  : #endif // _HAS_CXX20
; 190  :         for (;;) {
; 191  :             const auto _Now = _Clock::now();

	mov         x0,sp
	bl          |?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ|

; 192  :             if (_Abs_time <= _Now) {

	mov         x1,sp
	ldr         x0,[sp,#8]
	bl          |??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|
	uxtb        w8,w0
	mov         w8,w8
	cmp         w8,#0
	beq         |$LN5@sleep_unti|

; 193  :                 return;

	b           |$LN1@sleep_unti|
|$LN5@sleep_unti|

; 194  :             }
; 195  : 
; 196  :             _CSTD xtime _Tgt;
; 197  :             (void) _To_xtime_10_day_clamped(_Tgt, _Abs_time - _Now);

	mov         x2,sp
	ldr         x1,[sp,#8]
	add         x0,sp,#0x10
	bl          |??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|
	mov         x1,x0
	add         x0,sp,#0x18
	bl          |??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z|

; 198  :             _Thrd_sleep(&_Tgt);

	add         x0,sp,#0x18
	bl          _Thrd_sleep

; 199  :         }

	b           |$LN2@sleep_unti|
|$LN1@sleep_unti|
	add         sp,sp,#0x20
	bl          __security_pop_cookie
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z|, std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z| PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,0>

; 107  :             : _MyRep(_CHRONO duration_cast<duration>(_Dur).count()) {}

|$LN3|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	str         x0,[sp,#0x10]
	str         x1,[sp,#0x18]
	ldr         x1,[sp,#0x18]
	add         x0,sp,#0x20
	bl          |??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z|
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	ldr         x8,[sp,#0x10]
	str         x0,[x8]
	ldr         x0,[sp,#0x10]
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z|, std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z| PROC ; std::chrono::operator<<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; 572  :             is_arithmetic_v<typename _Duration1::rep>&& is_arithmetic_v<typename _Duration2::rep>) /* strengthened */ {

|$LN3|
	str         x19,[sp,#-0x10]!
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	str         x0,[sp,#0x18]
	str         x1,[sp,#0x10]

; 573  :         return _Left.time_since_epoch() < _Right.time_since_epoch();

	add         x1,sp,#0x20
	ldr         x0,[sp,#0x10]
	bl          |?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ|
	mov         x19,x0
	add         x1,sp,#0x28
	ldr         x0,[sp,#0x18]
	bl          |?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ|
	mov         x1,x19
	bl          |??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z|
	uxtb        w0,w0
	mov         w0,w0
	ldp         fp,lr,[sp],#0x30
	ldr         x19,[sp],#0x10
	ret

	ENDP  ; |??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|, std::chrono::operator<<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$00@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z| PROC ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1> >

; 541  :             is_arithmetic_v<typename _Duration::rep>&& is_arithmetic_v<_Rep>) /* strengthened */ {

|$LN3|
	stp         fp,lr,[sp,#-0x40]!
	mov         fp,sp
	str         x0,[sp,#0x10]
	str         x1,[sp,#0x18]
	str         x2,[sp,#0x20]

; 542  :         using _RT = time_point<_Clock, common_type_t<_Duration, duration<_Rep, _Period>>>;
; 543  :         return _RT(_Left.time_since_epoch() - _Right);

	add         x1,sp,#0x28
	ldr         x0,[sp,#0x18]
	bl          |?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ|
	ldr         x2,[sp,#0x20]
	mov         x1,x0
	add         x0,sp,#0x30
	bl          |??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$00@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z|
	mov         x1,x0
	ldr         x0,[sp,#0x10]
	bl          |??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|
	ldr         x0,[sp,#0x10]
	ldp         fp,lr,[sp],#0x40
	ret

	ENDP  ; |??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$00@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z|, std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$?O_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z| PROC ; std::chrono::operator><__int64,std::ratio<1,1>,__int64,std::ratio<1,1> >

; 398  :             is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) /* strengthened */ {

|$LN3|
	stp         fp,lr,[sp,#-0x20]!
	mov         fp,sp
	str         x0,[sp,#0x10]
	str         x1,[sp,#0x18]

; 399  :         return _Right < _Left;

	ldr         x1,[sp,#0x10]
	ldr         x0,[sp,#0x18]
	bl          |??$?M_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z|
	uxtb        w0,w0
	mov         w0,w0
	ldp         fp,lr,[sp],#0x20
	ret

	ENDP  ; |??$?O_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z|, std::chrono::operator><__int64,std::ratio<1,1>,__int64,std::ratio<1,1> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread

	AREA	|.text$mn|, CODE, ARM64

|??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z| PROC ; std::_To_absolute_time<__int64,std::ratio<1,1> >

; 159  : _NODISCARD auto _To_absolute_time(const chrono::duration<_Rep, _Period>& _Rel_time) noexcept {

|$LN6|
	stp         fp,lr,[sp,#-0x50]!
	mov         fp,sp
	str         x0,[sp,#0x28]
	str         x1,[sp,#0x18]

; 160  :     constexpr auto _Zero                 = chrono::duration<_Rep, _Period>::zero();

	mov         x8,#0
	str         x8,[sp,#0x38]

; 161  :     const auto _Now                      = chrono::steady_clock::now();

	add         x0,sp,#0x30
	bl          |?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ|

; 162  :     decltype(_Now + _Rel_time) _Abs_time = _Now; // return common type

	ldr         x8,[sp,#0x30]
	str         x8,[sp,#0x10]

; 163  :     if (_Rel_time > _Zero) {

	add         x1,sp,#0x38
	ldr         x0,[sp,#0x18]
	bl          |??$?O_JU?$ratio@$00$00@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$00@std@@@01@0@Z|
	uxtb        w8,w0
	mov         w8,w8
	cmp         w8,#0
	beq         |$LN2@To_absolut|

; 164  :         constexpr auto _Forever = (chrono::steady_clock::time_point::max)();

	mov         x8,#0x7FFFFFFFFFFFFFFF
	str         x8,[sp,#0x20]

; 165  :         if (_Abs_time < _Forever - _Rel_time) {

	ldr         x2,[sp,#0x18]
	add         x1,sp,#0x20
	add         x0,sp,#0x48
	bl          |??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$00@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z|
	mov         x1,x0
	add         x0,sp,#0x10
	bl          |??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|
	uxtb        w8,w0
	mov         w8,w8
	cmp         w8,#0
	beq         |$LN3@To_absolut|

; 166  :             _Abs_time += _Rel_time;

	ldr         x1,[sp,#0x18]
	add         x0,sp,#0x40
	bl          |??$?0_JU?$ratio@$00$00@std@@$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z|
	add         x1,sp,#0x40
	add         x0,sp,#0x10
	bl          |??Y?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAAAEAV012@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|

; 167  :         } else {

	b           |$LN2@To_absolut|
|$LN3@To_absolut|

; 168  :             _Abs_time = _Forever;

	ldr         x8,[sp,#0x20]
	str         x8,[sp,#0x10]
|$LN2@To_absolut|

; 169  :         }
; 170  :     }
; 171  :     return _Abs_time;

	ldr         x9,[sp,#0x28]
	ldr         x8,[sp,#0x10]
	str         x8,[x9]
	ldr         x0,[sp,#0x28]
	ldp         fp,lr,[sp],#0x50
	ret

	ENDP  ; |??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z|, std::_To_absolute_time<__int64,std::ratio<1,1> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z| PROC ; std::chrono::duration_cast<std::chrono::duration<float,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,0>

; 422  :         is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) /* strengthened */ {

|$LN10|
	stp         fp,lr,[sp,#-0x40]!
	mov         fp,sp
	str         x0,[sp,#0x28]
	str         x1,[sp,#0x30]

; 423  :         // convert duration to another duration; truncate
; 424  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 425  : 
; 426  :         using _ToRep = typename _To::rep;
; 427  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 428  : 
; 429  :         constexpr bool _Num_is_one = _CF::num == 1;

	mov         w8,#1
	strb        w8,[sp,#0x10]

; 430  :         constexpr bool _Den_is_one = _CF::den == 1;

	mov         w8,#0
	strb        w8,[sp,#0x11]

; 431  : 
; 432  :         if (_Den_is_one) {

	mov         w8,#0
	cmp         w8,#0
	beq         |$LN2@duration_c|

; 433  :             if (_Num_is_one) {

	mov         w8,#1
	cmp         w8,#0
	beq         |$LN4@duration_c|

; 434  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

	ldr         x0,[sp,#0x30]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	scvtf       s16,x0
	str         s16,[sp,#0x14]
	add         x1,sp,#0x14
	ldr         x0,[sp,#0x28]
	bl          |??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBM@Z|
	ldr         x0,[sp,#0x28]
	b           |$LN1@duration_c|

; 435  :             } else {

	b           |$LN5@duration_c|
|$LN4@duration_c|

; 436  :                 return static_cast<_To>(

	ldr         x0,[sp,#0x30]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	scvtf       s17,x0
	fmov        s16,#1
	fmul        s16,s17,s16
	str         s16,[sp,#0x18]
	add         x1,sp,#0x18
	ldr         x0,[sp,#0x28]
	bl          |??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBM@Z|
	ldr         x0,[sp,#0x28]
	b           |$LN1@duration_c|
|$LN5@duration_c|

; 437  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 438  :             }
; 439  :         } else {

	b           |$LN1@duration_c|
|$LN2@duration_c|

; 440  :             if (_Num_is_one) {

	mov         w8,#1
	cmp         w8,#0
	beq         |$LN6@duration_c|

; 441  :                 return static_cast<_To>(

	ldr         x0,[sp,#0x30]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	scvtf       s17,x0
	ldr         s16,|$LN9@duration_c|
	fdiv        s16,s17,s16
	str         s16,[sp,#0x1C]
	add         x1,sp,#0x1C
	ldr         x0,[sp,#0x28]
	bl          |??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBM@Z|
	ldr         x0,[sp,#0x28]
	b           |$LN1@duration_c|

; 442  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 443  :             } else {

	b           |$LN1@duration_c|
|$LN6@duration_c|

; 444  :                 return static_cast<_To>(static_cast<_ToRep>(

	ldr         x0,[sp,#0x30]
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	scvtf       s17,x0
	fmov        s16,#1
	fmul        s17,s17,s16
	ldr         s16,|$LN9@duration_c|
	fdiv        s16,s17,s16
	str         s16,[sp,#0x20]
	add         x1,sp,#0x20
	ldr         x0,[sp,#0x28]
	bl          |??$?0M$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBM@Z|
	ldr         x0,[sp,#0x28]
|$LN1@duration_c|
	ldp         fp,lr,[sp],#0x40
	ret
	nop
|$LN9@duration_c|
	DCFS         1e+09

	ENDP  ; |??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|, std::chrono::duration_cast<std::chrono::duration<float,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z| PROC ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >

; 290  :             is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) /* strengthened */ {

|$LN3|
	str         x19,[sp,#-0x10]!
	stp         fp,lr,[sp,#-0x50]!
	mov         fp,sp
	str         x0,[sp,#0x10]
	str         x1,[sp,#0x18]
	str         x2,[sp,#0x28]

; 291  :         using _CD = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 292  :         return _CD(_CD(_Left).count() - _CD(_Right).count());

	ldr         x8,[sp,#0x18]
	ldr         x8,[x8]
	str         x8,[sp,#0x20]
	ldr         x8,[sp,#0x20]
	str         x8,[sp,#0x38]
	ldr         x8,[sp,#0x28]
	ldr         x8,[x8]
	str         x8,[sp,#0x30]
	ldr         x8,[sp,#0x30]
	str         x8,[sp,#0x40]
	add         x0,sp,#0x38
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	mov         x19,x0
	add         x0,sp,#0x40
	bl          |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|
	sub         x8,x19,x0
	str         x8,[sp,#0x48]
	add         x1,sp,#0x48
	ldr         x0,[sp,#0x10]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z|
	ldr         x0,[sp,#0x10]
	ldp         fp,lr,[sp],#0x50
	ldr         x19,[sp],#0x10
	ret

	ENDP  ; |??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z|, std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream

	AREA	|.text$mn|, CODE, ARM64

|??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ| PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool

; 123  :         explicit __CLR_OR_THIS_CALL operator bool() const {

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]

; 124  :             return _Ok;

	ldr         x8,[sp]
	add         x8,x8,#8
	ldrb        w0,[x8]
	add         sp,sp,#0x10
	ret

	ENDP  ; |??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ|, std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream

	AREA	|.text$mn|, CODE, ARM64

|??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ| PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry

; 108  :         __CLR_OR_THIS_CALL ~sentry() noexcept {

|$LN6|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	mov         xip0,#-2
	str         xip0,[fp,#0x20]
	str         x0,[fp,#0x18]

; 109  : #if !_HAS_EXCEPTIONS
; 110  :             const bool _Zero_uncaught_exceptions = true;
; 111  : #elif _HAS_DEPRECATED_UNCAUGHT_EXCEPTION
; 112  :             const bool _Zero_uncaught_exceptions = !_STD uncaught_exception(); // TRANSITION, ArchivedOS-12000909

	bl          |?uncaught_exception@std@@YA_NXZ|
	uxtb        w8,w0
	mov         w8,w8
	cmp         w8,#0
	bne         |$LN4@sentry|
	mov         w8,#1
	strb        w8,[fp,#0x10]
	b           |$LN5@sentry|
|$LN4@sentry|
	mov         w8,#0
	strb        w8,[fp,#0x10]
|$LN5@sentry|
	ldrb        w8,[fp,#0x10]
	strb        w8,[fp,#0x11]

; 113  : #else // ^^^ _HAS_DEPRECATED_UNCAUGHT_EXCEPTION / !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION vvv
; 114  :             const bool _Zero_uncaught_exceptions = _STD uncaught_exceptions() == 0;
; 115  : #endif // !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION
; 116  : 
; 117  :             if (_Zero_uncaught_exceptions) {

	ldrb        w8,[fp,#0x11]
	mov         w8,w8
	cmp         w8,#0
	beq         |$LN2@sentry|

; 118  :                 this->_Myostr._Osfx();

	ldr         x8,[fp,#0x18]
	ldr         x0,[x8]
	adrp        x8,|__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ|
	ldr         x8,[x8,|__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ|]
	blr         x8
|$LN2@sentry|

; 119  :             }
; 120  :         }

	ldr         x0,[fp,#0x18]
	bl          |??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ|
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ|, std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream

	AREA	|.text$mn|, CODE, ARM64

|??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z| PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry

; 91   :         explicit __CLR_OR_THIS_CALL sentry(basic_ostream& _Ostr) : _Sentry_base(_Ostr) {

|$LN7|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	mov         xip0,#-2
	str         xip0,[fp,#0x28]
	str         x0,[fp,#0x18]
	str         x1,[fp,#0x10]
	ldr         x1,[fp,#0x10]
	ldr         x0,[fp,#0x18]
	bl          |??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z|
	nop

; 92   :             if (!_Ostr.good()) {

	ldr         x8,[fp,#0x10]
	ldr         x8,[x8]
	add         x8,x8,#4
	ldr         w8,[x8]
	sxtw        x9,w8
	ldr         x8,[fp,#0x10]
	add         x0,x8,x9
	adrp        x8,|__imp_?good@ios_base@std@@QEBA_NXZ|
	ldr         x8,[x8,|__imp_?good@ios_base@std@@QEBA_NXZ|]
	blr         x8
	uxtb        w8,w0
	mov         w8,w8
	cmp         w8,#0
	bne         |$LN2@sentry|

; 93   :                 _Ok = false;

	ldr         x8,[fp,#0x18]
	add         x9,x8,#8
	mov         w8,#0
	strb        w8,[x9]

; 94   :                 return;

	b           |$LN1@sentry|
|$LN2@sentry|

; 95   :             }
; 96   : 
; 97   :             const auto _Tied = _Ostr.tie();

	ldr         x8,[fp,#0x10]
	ldr         x8,[x8]
	add         x8,x8,#4
	ldr         w8,[x8]
	sxtw        x9,w8
	ldr         x8,[fp,#0x10]
	add         x0,x8,x9
	adrp        x8,|__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ|
	ldr         x8,[x8,|__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ|]
	blr         x8
	str         x0,[fp,#0x20]

; 98   :             if (!_Tied || _Tied == &_Ostr) {

	ldr         x8,[fp,#0x20]
	cmp         x8,#0
	beq         |$LN4@sentry|
	ldr         x9,[fp,#0x10]
	ldr         x8,[fp,#0x20]
	cmp         x8,x9
	bne         |$LN3@sentry|
|$LN4@sentry|

; 99   :                 _Ok = true;

	ldr         x8,[fp,#0x18]
	add         x9,x8,#8
	mov         w8,#1
	strb        w8,[x9]

; 100  :                 return;

	b           |$LN1@sentry|
|$LN3@sentry|

; 101  :             }
; 102  : 
; 103  :             _Tied->flush();

	ldr         x0,[fp,#0x20]
	adrp        x8,|__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ|
	ldr         x8,[x8,|__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ|]
	blr         x8

; 104  :             _Ok = _Ostr.good(); // store test only after flushing tie

	ldr         x8,[fp,#0x10]
	ldr         x8,[x8]
	add         x8,x8,#4
	ldr         w8,[x8]
	sxtw        x9,w8
	ldr         x8,[fp,#0x10]
	add         x0,x8,x9
	adrp        x8,|__imp_?good@ios_base@std@@QEBA_NXZ|
	ldr         x8,[x8,|__imp_?good@ios_base@std@@QEBA_NXZ|]
	blr         x8
	uxtb        w9,w0
	ldr         x8,[fp,#0x18]
	add         x8,x8,#8
	strb        w9,[x8]
|$LN1@sentry|

; 105  :         }

	ldr         x0,[fp,#0x18]
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z|, std::basic_ostream<char,std::char_traits<char> >::sentry::sentry

; Function compile flags: /Odtp

	AREA	|.text$x|, DATA

|?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA| PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
	stp         fp,lr,[sp,#-0x10]!
	ldr         x0,[fp,#0x18]
	bl          |??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ|
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z|, std::basic_ostream<char,std::char_traits<char> >::sentry::sentry

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream

	AREA	|.text$mn|, CODE, ARM64

|??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ| PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base

; 77   :         __CLR_OR_THIS_CALL ~_Sentry_base() noexcept { // destroy after unlocking

|$LN4|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	mov         xip0,#-2
	str         xip0,[fp,#0x28]
	str         x0,[fp,#0x20]

; 78   :             const auto _Rdbuf = _Myostr.rdbuf();

	ldr         x8,[fp,#0x20]
	ldr         x8,[x8]
	str         x8,[fp,#0x18]
	ldr         x8,[fp,#0x18]
	ldr         x8,[x8]
	add         x8,x8,#4
	ldr         w8,[x8]
	sxtw        x9,w8
	ldr         x8,[fp,#0x18]
	add         x0,x8,x9
	adrp        x8,|__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ|
	ldr         x8,[x8,|__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ|]
	blr         x8
	str         x0,[fp,#0x10]

; 79   :             if (_Rdbuf) {

	ldr         x8,[fp,#0x10]
	cmp         x8,#0
	beq         |$LN2@Sentry_bas|

; 80   :                 _Rdbuf->_Unlock();

	ldr         x8,[fp,#0x10]
	ldr         x8,[x8]
	add         x8,x8,#0x10
	ldr         x0,[fp,#0x10]
	ldr         x8,[x8]
	blr         x8
|$LN2@Sentry_bas|
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ|, std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream

	AREA	|.text$mn|, CODE, ARM64

|??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z| PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base

; 70   :         __CLR_OR_THIS_CALL _Sentry_base(basic_ostream& _Ostr) : _Myostr(_Ostr) { // lock the stream buffer, if there

|$LN4|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	str         x0,[sp,#0x18]
	str         x1,[sp,#0x28]
	ldr         x9,[sp,#0x18]
	ldr         x8,[sp,#0x28]
	str         x8,[x9]

; 71   :             const auto _Rdbuf = _Myostr.rdbuf();

	ldr         x8,[sp,#0x18]
	ldr         x8,[x8]
	str         x8,[sp,#0x20]
	ldr         x8,[sp,#0x20]
	ldr         x8,[x8]
	add         x8,x8,#4
	ldr         w8,[x8]
	sxtw        x9,w8
	ldr         x8,[sp,#0x20]
	add         x0,x8,x9
	adrp        x8,|__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ|
	ldr         x8,[x8,|__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ|]
	blr         x8
	str         x0,[sp,#0x10]

; 72   :             if (_Rdbuf) {

	ldr         x8,[sp,#0x10]
	cmp         x8,#0
	beq         |$LN2@Sentry_bas|

; 73   :                 _Rdbuf->_Lock();

	ldr         x8,[sp,#0x10]
	ldr         x8,[x8]
	add         x8,x8,#8
	ldr         x0,[sp,#0x10]
	ldr         x8,[x8]
	blr         x8
|$LN2@Sentry_bas|

; 74   :             }
; 75   :         }

	ldr         x0,[sp,#0x18]
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z|, std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|?zero@?$duration_values@_J@chrono@std@@SA_JXZ| PROC	; std::chrono::duration_values<__int64>::zero

; 40   :             // get zero value
; 41   :             return _Rep(0);

	mov         x0,#0
	ret

	ENDP  ; |?zero@?$duration_values@_J@chrono@std@@SA_JXZ|, std::chrono::duration_values<__int64>::zero

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$?0H$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBH@Z| PROC ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><int,0>

; 99   :             : _MyRep(static_cast<_Rep>(_Val)) {}

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]
	str         x1,[sp,#8]
	ldr         x8,[sp,#8]
	ldr         w8,[x8]
	sxtw        x9,w8
	ldr         x8,[sp]
	str         x9,[x8]
	ldr         x0,[sp]
	add         sp,sp,#0x10
	ret

	ENDP  ; |??$?0H$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBH@Z|, std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><int,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread

	AREA	|.text$mn|, CODE, ARM64

|??$?0A6AXXZ$$V$0A@@thread@std@@QEAA@A6AXXZ@Z| PROC	; std::thread::thread<void (__cdecl&)(void),0>

; 87   :     _NODISCARD_CTOR_THREAD explicit thread(_Fn&& _Fx, _Args&&... _Ax) {

|$LN3|
	stp         fp,lr,[sp,#-0x20]!
	mov         fp,sp
	str         x0,[sp,#0x10]
	str         x1,[sp,#0x18]

; 88   :         _Start(_STD forward<_Fn>(_Fx), _STD forward<_Args>(_Ax)...);

	ldr         x0,[sp,#0x18]
	bl          |??$forward@A6AXXZ@std@@YAA6AXXZA6AXXZ@Z|
	mov         x1,x0
	ldr         x0,[sp,#0x10]
	bl          |??$_Start@A6AXXZ$$V@thread@std@@AEAAXA6AXXZ@Z|

; 89   :     }

	ldr         x0,[sp,#0x10]
	ldp         fp,lr,[sp],#0x20
	ret

	ENDP  ; |??$?0A6AXXZ$$V$0A@@thread@std@@QEAA@A6AXXZ@Z|, std::thread::thread<void (__cdecl&)(void),0>

; Function compile flags: /Odtp
; File D:\data\code\gaming-studio-practices\ThreadsMulti\src\Main.cpp

	AREA	|.text$mn|, CODE, ARM64

|?notmain@@YAHXZ| PROC					; notmain

; 42   : {

|$LN4|
	str         x19,[sp,#-0x10]!
	str         d8,[sp,#8]
	stp         fp,lr,[sp,#-0x60]!
	mov         fp,sp
	mov         xip0,#-2
	str         xip0,[fp,#0x48]

; 43   : 
; 44   : 	std::cout << "Started thread id = " << std::this_thread::get_id() << std::endl;

	add         x0,fp,#0x1C
	bl          |?get_id@this_thread@std@@YA?AVid@thread@2@XZ|
	mov         x19,x0
	adrp        x8,|$SG45809|
	add         x1,x8,|$SG45809|
	adrp        x8,|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	ldr         x0,[x8,|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|
	ldr         w1,[x19]
	bl          |??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z|
	adrp        x8,|??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z|
	add         x1,x8,|??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z|
	adrp        x8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z|
	ldr         x8,[x8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z|]
	blr         x8

; 45   : 	std::thread worker (DoWork);

	adrp        x8,|?DoWork@@YAXXZ|
	add         x1,x8,|?DoWork@@YAXXZ|
	add         x0,fp,#0x38
	bl          |??$?0A6AXXZ$$V$0A@@thread@std@@QEAA@A6AXXZ@Z|
	nop

; 46   : 
; 47   : 	std::cin.get(); 

	adrp        x8,|__imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A|
	ldr         x0,[x8,|__imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A|]
	adrp        x8,|__imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAHXZ|
	ldr         x8,[x8,|__imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAHXZ|]
	blr         x8

; 48   : 	s_Finished = true; 

	adrp        x9,|?s_Finished@@3_NA|
	mov         w8,#1
	strb        w8,[x9,|?s_Finished@@3_NA|]

; 49   : 
; 50   : 	worker.join(); // wait for the thread to finish before exiting the program (otherwise the program will terminate before the thread has finished)

	add         x0,fp,#0x38
	bl          |?join@thread@std@@QEAAXXZ|

; 51   : 
; 52   : 	std::cout << "Finished." << std::endl;

	adrp        x8,|$SG45810|
	add         x1,x8,|$SG45810|
	adrp        x8,|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	ldr         x0,[x8,|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|
	adrp        x8,|??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z|
	add         x1,x8,|??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z|
	adrp        x8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z|
	ldr         x8,[x8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z|]
	blr         x8

; 53   : 
; 54   : 
; 55   : 	std::cout << "Press enter to start measurement...";

	adrp        x8,|$SG45811|
	add         x1,x8,|$SG45811|
	adrp        x8,|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	ldr         x0,[x8,|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|

; 56   : 	std::cin.get();

	adrp        x8,|__imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A|
	ldr         x0,[x8,|__imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A|]
	adrp        x8,|__imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAHXZ|
	ldr         x8,[x8,|__imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAHXZ|]
	blr         x8

; 57   : 
; 58   : 	auto start = std::chrono::high_resolution_clock::now();

	add         x0,fp,#0x28
	bl          |?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ|

; 59   : 
; 60   : 	// sleep for 1 second
; 61   : 	std::this_thread::sleep_for(std::chrono::seconds(1));

	mov         w8,#1
	str         w8,[fp,#0x10]
	add         x1,fp,#0x10
	add         x0,fp,#0x50
	bl          |??$?0H$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBH@Z|
	bl          |??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z|

; 62   : 
; 63   : 	auto end = std::chrono::high_resolution_clock::now();

	add         x0,fp,#0x30
	bl          |?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ|

; 64   : 	std::chrono::duration<float> duration = end - start;

	add         x2,fp,#0x28
	add         x1,fp,#0x30
	add         x0,fp,#0x58
	bl          |??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|
	mov         x1,x0
	add         x0,fp,#0x14
	bl          |??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|

; 65   : 
; 66   : 	// print duration to console
; 67   : 	std::cout << "Duration: " << duration.count() << " seconds" << std::endl;

	add         x0,fp,#0x14
	bl          |?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEBAMXZ|
	fmov        s8,s0
	adrp        x8,|$SG45813|
	add         x1,x8,|$SG45813|
	adrp        x8,|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	ldr         x0,[x8,|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|
	fmov        s0,s8
	adrp        x8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@M@Z|
	ldr         x8,[x8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@M@Z|]
	blr         x8
	adrp        x8,|$SG45812|
	add         x1,x8,|$SG45812|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|
	adrp        x8,|??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z|
	add         x1,x8,|??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z|
	adrp        x8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z|
	ldr         x8,[x8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z|]
	blr         x8

; 68   : 
; 69   : 	std::cout << "Finished thread id = " << std::this_thread::get_id() << std::endl;

	add         x0,fp,#0x20
	bl          |?get_id@this_thread@std@@YA?AVid@thread@2@XZ|
	mov         x19,x0
	adrp        x8,|$SG45814|
	add         x1,x8,|$SG45814|
	adrp        x8,|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	ldr         x0,[x8,|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|
	ldr         w1,[x19]
	bl          |??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z|
	adrp        x8,|??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z|
	add         x1,x8,|??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z|
	adrp        x8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z|
	ldr         x8,[x8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z|]
	blr         x8

; 70   : 	return 0;

	mov         w8,#0
	str         w8,[fp,#0x18]
	add         x0,fp,#0x38
	bl          |??1thread@std@@QEAA@XZ|
	ldr         w0,[fp,#0x18]
	ldp         fp,lr,[sp],#0x60
	ldr         d8,[sp,#8]
	ldr         x19,[sp],#0x10
	ret

	ENDP  ; |?notmain@@YAHXZ|, notmain

; Function compile flags: /Odtp

	AREA	|.text$x|, DATA

|?dtor$0@?0??notmain@@YAHXZ@4HA| PROC			; `notmain'::`1'::dtor$0
	stp         fp,lr,[sp,#-0x10]!
	add         x0,fp,#0x38
	bl          |??1thread@std@@QEAA@XZ|
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?notmain@@YAHXZ|, notmain

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread

	AREA	|.text$mn|, CODE, ARM64

|??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z| PROC ; std::this_thread::sleep_for<__int64,std::ratio<1,1> >

; 203  :     void sleep_for(const chrono::duration<_Rep, _Period>& _Rel_time) {

|$LN3|
	stp         fp,lr,[sp,#-0x20]!
	mov         fp,sp
	str         x0,[sp,#0x10]

; 204  :         sleep_until(_To_absolute_time(_Rel_time));

	ldr         x1,[sp,#0x10]
	add         x0,sp,#0x18
	bl          |??$_To_absolute_time@_JU?$ratio@$00$00@std@@@std@@YA?A_PAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@0@@Z|
	bl          |??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z|
	ldp         fp,lr,[sp],#0x20
	ret

	ENDP  ; |??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z|, std::this_thread::sleep_for<__int64,std::ratio<1,1> >

; Function compile flags: /Odtp
; File D:\data\code\gaming-studio-practices\ThreadsMulti\src\Main.cpp

	AREA	|.text$mn|, CODE, ARM64

|?DoWork@@YAXXZ| PROC					; DoWork

; 25   : {

|$LN6|
	str         x19,[sp,#-0x10]!
	stp         fp,lr,[sp,#-0x40]!
	mov         fp,sp
	mov         xip0,#-2
	str         xip0,[fp,#0x18]

; 26   : 	Timer timer;

	add         x0,fp,#0x28
	bl          |??0Timer@@QEAA@XZ|
	nop

; 27   : 	using namespace std::chrono_literals;
; 28   : 	std::cout << "Started thread id = " << std::this_thread::get_id() << std::endl;

	add         x0,fp,#0x10
	bl          |?get_id@this_thread@std@@YA?AVid@thread@2@XZ|
	mov         x19,x0
	adrp        x8,|$SG45743|
	add         x1,x8,|$SG45743|
	adrp        x8,|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	ldr         x0,[x8,|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|
	ldr         w1,[x19]
	bl          |??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z|
	adrp        x8,|??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z|
	add         x1,x8,|??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z|
	adrp        x8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z|
	ldr         x8,[x8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z|]
	blr         x8
|$LN2@DoWork|

; 29   : 
; 30   : 	while (!s_Finished)

	adrp        x8,|?s_Finished@@3_NA|
	ldrb        w8,[x8,|?s_Finished@@3_NA|]
	mov         w8,w8
	cmp         w8,#0
	bne         |$LN3@DoWork|

; 31   : 	{
; 32   : 		std::cout << "Working..." << std::endl;

	adrp        x8,|$SG45744|
	add         x1,x8,|$SG45744|
	adrp        x8,|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	ldr         x0,[x8,|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|
	adrp        x8,|??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z|
	add         x1,x8,|??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z|
	adrp        x8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z|
	ldr         x8,[x8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z|]
	blr         x8

; 33   : 
; 34   : 		// sleep for 1 second (1000 milliseconds)
; 35   :         std::this_thread::sleep_for(1s);

	mov         x1,#1
	add         x0,fp,#0x20
	bl          |??__Ks@chrono_literals@literals@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@chrono@3@_K@Z|
	bl          |??$sleep_for@_JU?$ratio@$00$00@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$00@std@@@chrono@1@@Z|

; 36   : 	}

	b           |$LN2@DoWork|
|$LN3@DoWork|

; 37   : 
; 38   : 	std::cout << "Finished thread id = " << std::this_thread::get_id() << std::endl;

	add         x0,fp,#0x14
	bl          |?get_id@this_thread@std@@YA?AVid@thread@2@XZ|
	mov         x19,x0
	adrp        x8,|$SG45745|
	add         x1,x8,|$SG45745|
	adrp        x8,|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	ldr         x0,[x8,|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|
	ldr         w1,[x19]
	bl          |??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z|
	adrp        x8,|??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z|
	add         x1,x8,|??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z|
	adrp        x8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z|
	ldr         x8,[x8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z|]
	blr         x8
	nop

; 39   : }

	add         x0,fp,#0x28
	bl          |??1Timer@@QEAA@XZ|
	ldp         fp,lr,[sp],#0x40
	ldr         x19,[sp],#0x10
	ret

	ENDP  ; |?DoWork@@YAXXZ|, DoWork

; Function compile flags: /Odtp

	AREA	|.text$x|, DATA

|?dtor$0@?0??DoWork@@YAXXZ@4HA| PROC			; `DoWork'::`1'::dtor$0
	stp         fp,lr,[sp,#-0x10]!
	add         x0,fp,#0x28
	bl          |??1Timer@@QEAA@XZ|
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?DoWork@@YAXXZ|, DoWork

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream

	AREA	|.text$mn|, CODE, ARM64

|??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z| PROC ; std::endl<char,std::char_traits<char> >

; 1005 :     basic_ostream<_Elem, _Traits>& _Ostr) { // insert newline and flush stream

|$LN3|
	stp         fp,lr,[sp,#-0x20]!
	mov         fp,sp
	str         x0,[sp,#0x10]

; 1006 :     _Ostr.put(_Ostr.widen('\n'));

	ldr         x8,[sp,#0x10]
	ldr         x8,[x8]
	add         x8,x8,#4
	ldr         w8,[x8]
	sxtw        x9,w8
	ldr         x8,[sp,#0x10]
	add         x0,x8,x9
	mov         w1,#0xA
	adrp        x8,|__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z|
	ldr         x8,[x8,|__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z|]
	blr         x8
	sxtb        w1,w0
	mov         w1,w1
	ldr         x0,[sp,#0x10]
	adrp        x8,|__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z|
	ldr         x8,[x8,|__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z|]
	blr         x8

; 1007 :     _Ostr.flush();

	ldr         x0,[sp,#0x10]
	adrp        x8,|__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ|
	ldr         x8,[x8,|__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ|]
	blr         x8

; 1008 :     return _Ostr;

	ldr         x0,[sp,#0x10]
	ldp         fp,lr,[sp],#0x20
	ret

	ENDP  ; |??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z|, std::endl<char,std::char_traits<char> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread

	AREA	|.text$mn|, CODE, ARM64

|??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z| PROC ; std::operator<<<char,std::char_traits<char> >

; 273  : basic_ostream<_Ch, _Tr>& operator<<(basic_ostream<_Ch, _Tr>& _Str, thread::id _Id) {

|$LN3|
	stp         fp,lr,[sp,#-0x20]!
	mov         fp,sp
	str         x0,[sp,#0x18]
	str         w1,[sp,#0x10]

; 274  :     return _Str << _Id._Id;

	ldr         w1,[sp,#0x10]
	ldr         x0,[sp,#0x18]
	adrp        x8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z|
	ldr         x8,[x8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z|]
	blr         x8
	ldp         fp,lr,[sp],#0x20
	ret

	ENDP  ; |??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z|, std::operator<<<char,std::char_traits<char> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream

	AREA	|.text$mn|, CODE, ARM64

|??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z| PROC ; std::operator<<<std::char_traits<char> >

; 761  : basic_ostream<char, _Traits>& operator<<(basic_ostream<char, _Traits>& _Ostr, const char* _Val) {

|$LN25|
	stp         fp,lr,[sp,#-0xA0]!
	mov         fp,sp
	mov         xip0,#-2
	str         xip0,[fp,#0x98]
	str         x0,[fp,#0x10]
	str         x1,[fp,#0x58]

; 762  :     // insert NTBS into char stream
; 763  :     using _Elem = char;
; 764  :     using _Myos = basic_ostream<_Elem, _Traits>;
; 765  : 
; 766  :     ios_base::iostate _State = ios_base::goodbit;

	mov         w8,#0
	str         w8,[fp,#0x18]

; 767  :     streamsize _Count        = static_cast<streamsize>(_Traits::length(_Val));

	ldr         x0,[fp,#0x58]
	bl          |?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z|
	str         x0,[fp,#0x28]

; 768  :     streamsize _Pad          = _Ostr.width() <= 0 || _Ostr.width() <= _Count ? 0 : _Ostr.width() - _Count;

	ldr         x8,[fp,#0x10]
	ldr         x8,[x8]
	add         x8,x8,#4
	ldr         w8,[x8]
	sxtw        x9,w8
	ldr         x8,[fp,#0x10]
	add         x0,x8,x9
	adrp        x8,|__imp_?width@ios_base@std@@QEBA_JXZ|
	ldr         x8,[x8,|__imp_?width@ios_base@std@@QEBA_JXZ|]
	blr         x8
	cmp         x0,#0
	ble         |$LN17@operator|
	ldr         x8,[fp,#0x10]
	ldr         x8,[x8]
	add         x8,x8,#4
	ldr         w8,[x8]
	sxtw        x9,w8
	ldr         x8,[fp,#0x10]
	add         x0,x8,x9
	adrp        x8,|__imp_?width@ios_base@std@@QEBA_JXZ|
	ldr         x8,[x8,|__imp_?width@ios_base@std@@QEBA_JXZ|]
	blr         x8
	ldr         x8,[fp,#0x28]
	cmp         x0,x8
	ble         |$LN17@operator|
	ldr         x8,[fp,#0x10]
	ldr         x8,[x8]
	add         x8,x8,#4
	ldr         w8,[x8]
	sxtw        x9,w8
	ldr         x8,[fp,#0x10]
	add         x0,x8,x9
	adrp        x8,|__imp_?width@ios_base@std@@QEBA_JXZ|
	ldr         x8,[x8,|__imp_?width@ios_base@std@@QEBA_JXZ|]
	blr         x8
	ldr         x8,[fp,#0x28]
	sub         x8,x0,x8
	str         x8,[fp,#0x50]
	b           |$LN18@operator|
|$LN17@operator|
	mov         x8,#0
	str         x8,[fp,#0x50]
|$LN18@operator|
	ldr         x8,[fp,#0x50]
	str         x8,[fp,#0x20]

; 769  :     const typename _Myos::sentry _Ok(_Ostr);

	ldr         x1,[fp,#0x10]
	add         x0,fp,#0x88
	bl          |??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z|
	nop

; 770  : 
; 771  :     if (!_Ok) {

	add         x0,fp,#0x88
	bl          |??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ|
	uxtb        w8,w0
	mov         w8,w8
	cmp         w8,#0
	bne         |$LN8@operator|

; 772  :         _State |= ios_base::badbit;

	ldr         w8,[fp,#0x18]
	orr         w8,w8,#4
	str         w8,[fp,#0x18]

; 773  :     } else { // state okay, insert

	b           |$LN9@operator|
|$LN8@operator|

; 774  :         _TRY_IO_BEGIN
; 775  :         if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left) {

	ldr         x8,[fp,#0x10]
	ldr         x8,[x8]
	add         x8,x8,#4
	ldr         w8,[x8]
	sxtw        x9,w8
	ldr         x8,[fp,#0x10]
	add         x0,x8,x9
	adrp        x8,|__imp_?flags@ios_base@std@@QEBAHXZ|
	ldr         x8,[x8,|__imp_?flags@ios_base@std@@QEBAHXZ|]
	blr         x8
	str         w0,[fp,#0x30]
	ldr         w8,[fp,#0x30]
	and         w8,w8,#0x1C0
	cmp         w8,#0x40
	beq         |$LN11@operator|

; 776  :             for (; 0 < _Pad; --_Pad) { // pad on left

	b           |$LN4@operator|
|$LN2@operator|
	ldr         x8,[fp,#0x20]
	sub         x8,x8,#1
	str         x8,[fp,#0x20]
|$LN4@operator|
	ldr         x9,[fp,#0x20]
	mov         x8,#0
	cmp         x8,x9
	bge         |$LN11@operator|

; 777  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	ldr         x8,[fp,#0x10]
	ldr         x8,[x8]
	add         x8,x8,#4
	ldr         w8,[x8]
	sxtw        x9,w8
	ldr         x8,[fp,#0x10]
	add         x0,x8,x9
	adrp        x8,|__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ|
	ldr         x8,[x8,|__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ|]
	blr         x8
	sxtb        w8,w0
	strb        w8,[fp,#0x1C]
	ldr         x8,[fp,#0x10]
	ldr         x8,[x8]
	add         x8,x8,#4
	ldr         w8,[x8]
	sxtw        x9,w8
	ldr         x8,[fp,#0x10]
	add         x0,x8,x9
	adrp        x8,|__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ|
	ldr         x8,[x8,|__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ|]
	blr         x8
	str         x0,[fp,#0x60]
	ldrsb       w1,[fp,#0x1C]
	ldr         x0,[fp,#0x60]
	adrp        x8,|__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z|
	ldr         x8,[x8,|__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z|]
	blr         x8
	str         w0,[fp,#0x34]
	ldr         w8,[fp,#0x34]
	str         w8,[fp,#0x38]
	bl          |?eof@?$_Narrow_char_traits@DH@std@@SAHXZ|
	mov         w0,w0
	str         w0,[fp,#0x3C]
	add         x1,fp,#0x38
	add         x0,fp,#0x3C
	bl          |?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z|
	uxtb        w8,w0
	mov         w8,w8
	cmp         w8,#0
	beq         |$LN12@operator|

; 778  :                     _State |= ios_base::badbit; // insertion failed, quit

	ldr         w8,[fp,#0x18]
	orr         w8,w8,#4
	str         w8,[fp,#0x18]

; 779  :                     break;

	b           |$LN11@operator|
|$LN12@operator|

; 780  :                 }
; 781  :             }

	b           |$LN2@operator|
|$LN11@operator|

; 782  :         }
; 783  : 
; 784  :         if (_State == ios_base::goodbit && _Ostr.rdbuf()->sputn(_Val, _Count) != _Count) {

	ldr         w8,[fp,#0x18]
	cmp         w8,#0
	bne         |$LN13@operator|
	ldr         x8,[fp,#0x10]
	ldr         x8,[x8]
	add         x8,x8,#4
	ldr         w8,[x8]
	sxtw        x9,w8
	ldr         x8,[fp,#0x10]
	add         x0,x8,x9
	adrp        x8,|__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ|
	ldr         x8,[x8,|__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ|]
	blr         x8
	str         x0,[fp,#0x68]
	ldr         x2,[fp,#0x28]
	ldr         x1,[fp,#0x58]
	ldr         x0,[fp,#0x68]
	adrp        x8,|__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z|
	ldr         x8,[x8,|__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z|]
	blr         x8
	str         x0,[fp,#0x70]
	ldr         x9,[fp,#0x28]
	ldr         x8,[fp,#0x70]
	cmp         x8,x9
	beq         |$LN13@operator|

; 785  :             _State |= ios_base::badbit;

	ldr         w8,[fp,#0x18]
	orr         w8,w8,#4
	str         w8,[fp,#0x18]
|$LN13@operator|

; 786  :         }
; 787  : 
; 788  :         if (_State == ios_base::goodbit) {

	ldr         w8,[fp,#0x18]
	cmp         w8,#0
	bne         |$LN14@operator|

; 789  :             for (; 0 < _Pad; --_Pad) { // pad on right

	b           |$LN7@operator|
|$LN5@operator|
	ldr         x8,[fp,#0x20]
	sub         x8,x8,#1
	str         x8,[fp,#0x20]
|$LN7@operator|
	ldr         x9,[fp,#0x20]
	mov         x8,#0
	cmp         x8,x9
	bge         |$LN14@operator|

; 790  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	ldr         x8,[fp,#0x10]
	ldr         x8,[x8]
	add         x8,x8,#4
	ldr         w8,[x8]
	sxtw        x9,w8
	ldr         x8,[fp,#0x10]
	add         x0,x8,x9
	adrp        x8,|__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ|
	ldr         x8,[x8,|__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ|]
	blr         x8
	sxtb        w8,w0
	strb        w8,[fp,#0x1D]
	ldr         x8,[fp,#0x10]
	ldr         x8,[x8]
	add         x8,x8,#4
	ldr         w8,[x8]
	sxtw        x9,w8
	ldr         x8,[fp,#0x10]
	add         x0,x8,x9
	adrp        x8,|__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ|
	ldr         x8,[x8,|__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ|]
	blr         x8
	str         x0,[fp,#0x78]
	ldrsb       w1,[fp,#0x1D]
	ldr         x0,[fp,#0x78]
	adrp        x8,|__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z|
	ldr         x8,[x8,|__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z|]
	blr         x8
	str         w0,[fp,#0x40]
	ldr         w8,[fp,#0x40]
	str         w8,[fp,#0x44]
	bl          |?eof@?$_Narrow_char_traits@DH@std@@SAHXZ|
	mov         w0,w0
	str         w0,[fp,#0x48]
	add         x1,fp,#0x44
	add         x0,fp,#0x48
	bl          |?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z|
	uxtb        w8,w0
	mov         w8,w8
	cmp         w8,#0
	beq         |$LN15@operator|

; 791  :                     _State |= ios_base::badbit; // insertion failed, quit

	ldr         w8,[fp,#0x18]
	orr         w8,w8,#4
	str         w8,[fp,#0x18]

; 792  :                     break;

	b           |$LN14@operator|
|$LN15@operator|

; 793  :                 }
; 794  :             }

	b           |$LN5@operator|
|$LN14@operator|

; 795  :         }
; 796  : 
; 797  :         _Ostr.width(0);

	ldr         x8,[fp,#0x10]
	ldr         x8,[x8]
	add         x8,x8,#4
	ldr         w8,[x8]
	sxtw        x9,w8
	ldr         x8,[fp,#0x10]
	add         x0,x8,x9
	mov         x1,#0
	adrp        x8,|__imp_?width@ios_base@std@@QEAA_J_J@Z|
	ldr         x8,[x8,|__imp_?width@ios_base@std@@QEAA_J_J@Z|]
	blr         x8
	nop
	b           |$LN9@operator|
|$LN23@operator|
|$LN9@operator|

; 798  :         _CATCH_IO_(ios_base, _Ostr)
; 799  :     }
; 800  : 
; 801  :     _Ostr.setstate(_State);

	ldr         x8,[fp,#0x10]
	ldr         x8,[x8]
	add         x8,x8,#4
	ldr         w8,[x8]
	sxtw        x9,w8
	ldr         x8,[fp,#0x10]
	add         x0,x8,x9
	mov         w2,#0
	ldr         w1,[fp,#0x18]
	adrp        x8,|__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z|
	ldr         x8,[x8,|__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z|]
	blr         x8

; 802  :     return _Ostr;

	ldr         x8,[fp,#0x10]
	str         x8,[fp,#0x80]
	add         x0,fp,#0x88
	bl          |??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ|
	ldr         x0,[fp,#0x80]
	ldp         fp,lr,[sp],#0xA0
	ret

	ENDP  ; |??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|, std::operator<<<std::char_traits<char> >

; Function compile flags: /Odtp

	AREA	|.text$x|, DATA

|?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA| PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	stp         fp,lr,[sp,#-0x10]!
	add         x0,fp,#0x88
	bl          |??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ|
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|, std::operator<<<std::char_traits<char> >

; Function compile flags: /Odtp

	AREA	|.text$x|, DATA

|?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA| PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 798  :         _CATCH_IO_(ios_base, _Ostr)

	stp         fp,lr,[sp,#-0x10]!
|__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0|
	ldr         x8,[fp,#0x10]
	ldr         x8,[x8]
	add         x8,x8,#4
	ldr         w8,[x8]
	sxtw        x9,w8
	ldr         x8,[fp,#0x10]
	add         x0,x8,x9
	mov         w2,#1
	mov         w1,#4
	adrp        x8,|__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z|
	ldr         x8,[x8,|__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z|]
	blr         x8
	nop
	adrp        x0,|$LN23@catch$1|
	add         x0,x0,|$LN23@catch$1|
	ldp         fp,lr,[sp],#0x10
	ret
	svc         #3

	ENDP  ; |??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|, std::operator<<<std::char_traits<char> >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| PROC ; std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><__int64,std::ratio<1,1000000000>,0>

; 107  :             : _MyRep(_CHRONO duration_cast<duration>(_Dur).count()) {}

|$LN3|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	str         x0,[sp,#0x18]
	str         x1,[sp,#0x20]
	ldr         x1,[sp,#0x20]
	add         x0,sp,#0x10
	bl          |??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z|
	bl          |?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEBAMXZ|
	ldr         x8,[sp,#0x18]
	str         s0,[x8]
	ldr         x0,[sp,#0x18]
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|, std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><__int64,std::ratio<1,1000000000>,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z| PROC ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; 549  :             is_arithmetic_v<typename _Duration1::rep>&& is_arithmetic_v<typename _Duration2::rep>) /* strengthened */ {

|$LN3|
	str         x19,[sp,#-0x10]!
	stp         fp,lr,[sp,#-0x40]!
	mov         fp,sp
	str         x0,[sp,#0x10]
	str         x1,[sp,#0x20]
	str         x2,[sp,#0x18]

; 550  :         return _Left.time_since_epoch() - _Right.time_since_epoch();

	add         x1,sp,#0x28
	ldr         x0,[sp,#0x18]
	bl          |?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ|
	mov         x19,x0
	add         x1,sp,#0x30
	ldr         x0,[sp,#0x20]
	bl          |?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ|
	mov         x2,x19
	mov         x1,x0
	ldr         x0,[sp,#0x10]
	bl          |??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z|
	ldr         x0,[sp,#0x10]
	ldp         fp,lr,[sp],#0x40
	ldr         x19,[sp],#0x10
	ret

	ENDP  ; |??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|, std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; Function compile flags: /Odtp
; File D:\data\code\gaming-studio-practices\ThreadsMulti\src\Main.cpp

	AREA	|.text$mn|, CODE, ARM64

|??1Timer@@QEAA@XZ| PROC				; Timer::~Timer

; 16   : 	{

|$LN4|
	stp         fp,lr,[sp,#-0x40]!
	mov         fp,sp
	mov         xip0,#-2
	str         xip0,[fp,#0x28]
	str         x0,[fp,#0x18]

; 17   : 		end = std::chrono::high_resolution_clock::now();

	add         x0,fp,#0x30
	bl          |?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ|
	mov         x8,x0
	ldr         x8,[x8]
	str         x8,[fp,#0x20]
	ldr         x8,[fp,#0x18]
	add         x9,x8,#8
	ldr         x8,[fp,#0x20]
	str         x8,[x9]

; 18   : 		duration = end - start;

	ldr         x2,[fp,#0x18]
	ldr         x8,[fp,#0x18]
	add         x1,x8,#8
	add         x0,fp,#0x38
	bl          |??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z|
	mov         x1,x0
	add         x0,fp,#0x10
	bl          |??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@$0A@@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|
	ldr         x8,[fp,#0x18]
	add         x9,x8,#0x10
	ldr         w8,[fp,#0x10]
	str         w8,[x9]

; 19   : 		float ms = duration.count() * 1000.0f;

	ldr         x8,[fp,#0x18]
	add         x0,x8,#0x10
	bl          |?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEBAMXZ|
	ldr         s16,|$LN3@Timer|
	fmul        s16,s0,s16
	str         s16,[fp,#0x14]

; 20   : 		std::cout << "Timer took " << ms << "ms" << std::endl;

	adrp        x8,|??_C@_0M@LKHJFMHJ@Timer?5took?5@|
	add         x1,x8,|??_C@_0M@LKHJFMHJ@Timer?5took?5@|
	adrp        x8,|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	ldr         x0,[x8,|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|
	ldr         s0,[fp,#0x14]
	adrp        x8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@M@Z|
	ldr         x8,[x8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@M@Z|]
	blr         x8
	adrp        x8,|??_C@_02EEKDFEKL@ms@|
	add         x1,x8,|??_C@_02EEKDFEKL@ms@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z|
	adrp        x8,|??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z|
	add         x1,x8,|??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z|
	adrp        x8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z|
	ldr         x8,[x8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z|]
	blr         x8
	ldp         fp,lr,[sp],#0x40
	ret
	nop
|$LN3@Timer|
	DCFS         1000

	ENDP  ; |??1Timer@@QEAA@XZ|, Timer::~Timer

; Function compile flags: /Odtp
; File D:\data\code\gaming-studio-practices\ThreadsMulti\src\Main.cpp

	AREA	|.text$mn|, CODE, ARM64

|??0Timer@@QEAA@XZ| PROC				; Timer::Timer

; 11   : 	Timer()

|$LN3|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	str         x0,[sp,#0x10]
	ldr         x0,[sp,#0x10]
	bl          |??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ|
	ldr         x8,[sp,#0x10]
	add         x0,x8,#8
	bl          |??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ|

; 10   : 	std::chrono::duration<float> duration{};

	ldr         x8,[sp,#0x10]
	add         x9,x8,#0x10
	mov         w8,#0
	str         w8,[x9]

; 12   : 	{
; 13   : 		start = std::chrono::high_resolution_clock::now();

	add         x0,sp,#0x20
	bl          |?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ|
	mov         x8,x0
	ldr         x8,[x8]
	str         x8,[sp,#0x18]
	ldr         x9,[sp,#0x10]
	ldr         x8,[sp,#0x18]
	str         x8,[x9]

; 14   : 	}

	ldr         x0,[sp,#0x10]
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |??0Timer@@QEAA@XZ|, Timer::Timer

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEBAMXZ| PROC ; std::chrono::duration<float,std::ratio<1,1> >::count

; 109  :         _NODISCARD constexpr _Rep count() const noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]

; 110  :             return _MyRep;

	ldr         x8,[sp]
	ldr         s0,[x8]
	add         sp,sp,#0x10
	ret

	ENDP  ; |?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEBAMXZ|, std::chrono::duration<float,std::ratio<1,1> >::count

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread

	AREA	|.text$mn|, CODE, ARM64

|??0id@thread@std@@AEAA@I@Z| PROC			; std::thread::id::id

; 213  :     id(_Thrd_id_t _Other_id) : _Id(_Other_id) {}

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp,#8]
	str         w1,[sp]
	ldr         x9,[sp,#8]
	ldr         w8,[sp]
	str         w8,[x9]
	ldr         x0,[sp,#8]
	add         sp,sp,#0x10
	ret

	ENDP  ; |??0id@thread@std@@AEAA@I@Z|, std::thread::id::id

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread

	AREA	|.text$mn|, CODE, ARM64

|?get_id@this_thread@std@@YA?AVid@thread@2@XZ| PROC	; std::this_thread::get_id

; 234  : _EXPORT_STD _NODISCARD inline thread::id this_thread::get_id() noexcept {

|$LN3|
	stp         fp,lr,[sp,#-0x20]!
	mov         fp,sp
	mov         xip0,#-2
	str         xip0,[fp,#0x18]
	str         x0,[fp,#0x10]

; 235  :     return _Thrd_id();

	bl          _Thrd_id
	mov         w0,w0
	mov         w1,w0
	ldr         x0,[fp,#0x10]
	bl          |??0id@thread@std@@AEAA@I@Z|
	ldr         x0,[fp,#0x10]
	ldp         fp,lr,[sp],#0x20
	ret

	ENDP  ; |?get_id@this_thread@std@@YA?AVid@thread@2@XZ|, std::this_thread::get_id

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread

	AREA	|.text$mn|, CODE, ARM64

|?join@thread@std@@QEAAXXZ| PROC			; std::thread::join

; 119  :     void join() {

|$LN7|
	str         x19,[sp,#-0x10]!
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	str         x0,[sp,#0x10]

; 120  :         if (!joinable()) {

	ldr         x0,[sp,#0x10]
	bl          |?joinable@thread@std@@QEBA_NXZ|
	uxtb        w8,w0
	mov         w8,w8
	cmp         w8,#0
	bne         |$LN2@join|

; 121  :             _Throw_Cpp_error(_INVALID_ARGUMENT);

	mov         w0,#1
	bl          |?_Throw_Cpp_error@std@@YAXH@Z|
|$LN2@join|

; 122  :         }
; 123  : 
; 124  :         if (_Thr._Id == _Thrd_id()) {

	ldr         x8,[sp,#0x10]
	add         x19,x8,#8
	bl          _Thrd_id
	mov         w0,w0
	ldr         w8,[x19]
	cmp         w8,w0
	bne         |$LN3@join|

; 125  :             _Throw_Cpp_error(_RESOURCE_DEADLOCK_WOULD_OCCUR);

	mov         w0,#5
	bl          |?_Throw_Cpp_error@std@@YAXH@Z|
|$LN3@join|

; 126  :         }
; 127  : 
; 128  :         if (_Thrd_join(_Thr, nullptr) != _Thrd_success) {

	ldr         x8,[sp,#0x10]
	mov         x2,#0
	ldr         x1,[x8,#8]
	ldr         x0,[x8]
	bl          _Thrd_join
	mov         w0,w0
	cmp         w0,#0
	beq         |$LN4@join|

; 129  :             _Throw_Cpp_error(_NO_SUCH_PROCESS);

	mov         w0,#2
	bl          |?_Throw_Cpp_error@std@@YAXH@Z|
|$LN4@join|

; 130  :         }
; 131  : 
; 132  :         _Thr = {};

	movi        v16.16b,#0
	str         q16,[sp,#0x20]
	ldr         x8,[sp,#0x10]
	ldr         q16,[sp,#0x20]
	str         q16,[x8]
|$LN5@join|
	ldp         fp,lr,[sp],#0x30
	ldr         x19,[sp],#0x10
	ret
|$LN6@join|

	ENDP  ; |?join@thread@std@@QEAAXXZ|, std::thread::join

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread

	AREA	|.text$mn|, CODE, ARM64

|?joinable@thread@std@@QEBA_NXZ| PROC			; std::thread::joinable

; 115  :     _NODISCARD bool joinable() const noexcept {

|$LN5|
	sub         sp,sp,#0x10
	str         x0,[sp,#8]

; 116  :         return _Thr._Id != 0;

	ldr         x8,[sp,#8]
	add         x8,x8,#8
	ldr         w8,[x8]
	cmp         w8,#0
	beq         |$LN3@joinable|
	mov         w8,#1
	str         w8,[sp]
	b           |$LN4@joinable|
|$LN3@joinable|
	mov         w8,#0
	str         w8,[sp]
|$LN4@joinable|
	ldr         w8,[sp]
	uxtb        w0,w8
	mov         w0,w0
	add         sp,sp,#0x10
	ret

	ENDP  ; |?joinable@thread@std@@QEBA_NXZ|, std::thread::joinable

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread

	AREA	|.text$mn|, CODE, ARM64

|??1thread@std@@QEAA@XZ| PROC				; std::thread::~thread

; 91   :     ~thread() noexcept {

|$LN6|
	stp         fp,lr,[sp,#-0x20]!
	mov         fp,sp
	str         x0,[sp,#0x10]

; 92   :         if (joinable()) {

	ldr         x0,[sp,#0x10]
	bl          |?joinable@thread@std@@QEBA_NXZ|
	uxtb        w8,w0
	mov         w8,w8
	cmp         w8,#0
	beq         |$LN3@thread|

; 93   :             _STD terminate();

	adrp        x8,__imp_terminate
	ldr         x8,[x8,__imp_terminate]
	blr         x8
|$LN5@thread|
|$LN3@thread|
	ldp         fp,lr,[sp],#0x20
	ret
|$LN4@thread|

	ENDP  ; |??1thread@std@@QEAA@XZ|, std::thread::~thread

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ| PROC ; std::chrono::duration<double,std::ratio<1,1000000000> >::count

; 109  :         _NODISCARD constexpr _Rep count() const noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]

; 110  :             return _MyRep;

	ldr         x8,[sp]
	ldr         d0,[x8]
	add         sp,sp,#0x10
	ret

	ENDP  ; |?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ|, std::chrono::duration<double,std::ratio<1,1000000000> >::count

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ| PROC ; std::chrono::duration<double,std::ratio<1,1> >::count

; 109  :         _NODISCARD constexpr _Rep count() const noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]

; 110  :             return _MyRep;

	ldr         x8,[sp]
	ldr         d0,[x8]
	add         sp,sp,#0x10
	ret

	ENDP  ; |?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ|, std::chrono::duration<double,std::ratio<1,1> >::count

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$?0_K$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_K@Z| PROC ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><unsigned __int64,0>

; 99   :             : _MyRep(static_cast<_Rep>(_Val)) {}

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]
	str         x1,[sp,#8]
	ldr         x9,[sp]
	ldr         x8,[sp,#8]
	ldr         x8,[x8]
	str         x8,[x9]
	ldr         x0,[sp]
	add         sp,sp,#0x10
	ret

	ENDP  ; |??$?0_K$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_K@Z|, std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><unsigned __int64,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??__Ks@chrono_literals@literals@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@chrono@3@_K@Z| PROC ; std::literals::chrono_literals::operator "" s

; 744  :         /* strengthened */ {

|$LN3|
	stp         fp,lr,[sp,#-0x20]!
	mov         fp,sp
	str         x0,[sp,#0x10]
	str         x1,[sp,#0x18]

; 745  :             return _CHRONO seconds(_Val);

	add         x1,sp,#0x18
	ldr         x0,[sp,#0x10]
	bl          |??$?0_K$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_K@Z|
	ldr         x0,[sp,#0x10]
	ldp         fp,lr,[sp],#0x20
	ret

	ENDP  ; |??__Ks@chrono_literals@literals@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@chrono@3@_K@Z|, std::literals::chrono_literals::operator "" s

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z| PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>

; 99   :             : _MyRep(static_cast<_Rep>(_Val)) {}

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]
	str         x1,[sp,#8]
	ldr         x9,[sp]
	ldr         x8,[sp,#8]
	ldr         x8,[x8]
	str         x8,[x9]
	ldr         x0,[sp]
	add         sp,sp,#0x10
	ret

	ENDP  ; |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z|, std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??Y?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAAAEAV012@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::operator+=

; 232  :         _CONSTEXPR17 time_point& operator+=(const _Duration& _Dur) noexcept(is_arithmetic_v<rep>) /* strengthened */ {

|$LN3|
	stp         fp,lr,[sp,#-0x20]!
	mov         fp,sp
	str         x0,[sp,#0x10]
	str         x1,[sp,#0x18]

; 233  :             _MyDur += _Dur;

	ldr         x0,[sp,#0x10]
	ldr         x1,[sp,#0x18]
	bl          |??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z|

; 234  :             return *this;

	ldr         x0,[sp,#0x10]
	ldp         fp,lr,[sp],#0x20
	ret

	ENDP  ; |??Y?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAAAEAV012@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|, std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::operator+=

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ| PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch

; 211  :         _NODISCARD constexpr _Duration time_since_epoch() const noexcept(is_arithmetic_v<rep>) /* strengthened */ {

|$LN3|
	sub         sp,sp,#0x20
	str         x0,[sp,#8]
	str         x1,[sp]

; 212  :             return _MyDur;

	ldr         x8,[sp,#8]
	ldr         x8,[x8]
	str         x8,[sp,#0x10]
	ldr         x9,[sp]
	ldr         x8,[sp,#0x10]
	str         x8,[x9]
	ldr         x0,[sp]
	add         sp,sp,#0x20
	ret

	ENDP  ; |?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ|, std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z| PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; 203  :         constexpr explicit time_point(const _Duration& _Other) noexcept(is_arithmetic_v<rep>) // strengthened

|$LN3|
	sub         sp,sp,#0x20
	str         x0,[sp]
	str         x1,[sp,#8]

; 204  :             : _MyDur(_Other) {}

	ldr         x8,[sp,#8]
	ldr         x8,[x8]
	str         x8,[sp,#0x10]
	ldr         x9,[sp]
	ldr         x8,[sp,#0x10]
	str         x8,[x9]
	ldr         x0,[sp]
	add         sp,sp,#0x20
	ret

	ENDP  ; |??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|, std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ| PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; 201  :         constexpr time_point() = default;

|$LN3|
	stp         fp,lr,[sp,#-0x20]!
	mov         fp,sp
	str         x0,[sp,#0x10]

; 202  : 
; 203  :         constexpr explicit time_point(const _Duration& _Other) noexcept(is_arithmetic_v<rep>) // strengthened
; 204  :             : _MyDur(_Other) {}
; 205  : 
; 206  :         template <class _Duration2, enable_if_t<is_convertible_v<_Duration2, _Duration>, int> = 0>
; 207  :         constexpr time_point(const time_point<_Clock, _Duration2>& _Tp) noexcept(
; 208  :             is_arithmetic_v<rep>&& is_arithmetic_v<typename _Duration2::rep>) // strengthened
; 209  :             : _MyDur(_Tp.time_since_epoch()) {}
; 210  : 
; 211  :         _NODISCARD constexpr _Duration time_since_epoch() const noexcept(is_arithmetic_v<rep>) /* strengthened */ {
; 212  :             return _MyDur;
; 213  :         }
; 214  : 
; 215  : #if _HAS_CXX20
; 216  :         constexpr time_point& operator++() noexcept(is_arithmetic_v<rep>) /* strengthened */ {
; 217  :             ++_MyDur;
; 218  :             return *this;
; 219  :         }
; 220  :         constexpr time_point operator++(int) noexcept(is_arithmetic_v<rep>) /* strengthened */ {
; 221  :             return time_point{_MyDur++};
; 222  :         }
; 223  :         constexpr time_point& operator--() noexcept(is_arithmetic_v<rep>) /* strengthened */ {
; 224  :             --_MyDur;
; 225  :             return *this;
; 226  :         }
; 227  :         constexpr time_point operator--(int) noexcept(is_arithmetic_v<rep>) /* strengthened */ {
; 228  :             return time_point{_MyDur--};
; 229  :         }
; 230  : #endif // _HAS_CXX20
; 231  : 
; 232  :         _CONSTEXPR17 time_point& operator+=(const _Duration& _Dur) noexcept(is_arithmetic_v<rep>) /* strengthened */ {
; 233  :             _MyDur += _Dur;
; 234  :             return *this;
; 235  :         }
; 236  : 
; 237  :         _CONSTEXPR17 time_point& operator-=(const _Duration& _Dur) noexcept(is_arithmetic_v<rep>) /* strengthened */ {
; 238  :             _MyDur -= _Dur;
; 239  :             return *this;
; 240  :         }
; 241  : 
; 242  :         _NODISCARD static constexpr time_point(min)() noexcept {
; 243  :             return time_point((_Duration::min)());
; 244  :         }
; 245  : 
; 246  :         _NODISCARD static constexpr time_point(max)() noexcept {
; 247  :             return time_point((_Duration::max)());
; 248  :         }
; 249  : 
; 250  :     private:
; 251  :         _Duration _MyDur{duration::zero()}; // duration since the epoch

	ldr         x0,[sp,#0x10]
	bl          |?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ|

; 201  :         constexpr time_point() = default;

	ldr         x0,[sp,#0x10]
	ldp         fp,lr,[sp],#0x20
	ret

	ENDP  ; |??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ|, std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ| PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::zero

; 171  :         _NODISCARD static constexpr duration zero() noexcept {

|$LN3|
	stp         fp,lr,[sp,#-0x20]!
	mov         fp,sp
	str         x0,[sp,#0x10]

; 172  :             // get zero value
; 173  :             return duration(duration_values<_Rep>::zero());

	bl          |?zero@?$duration_values@_J@chrono@std@@SA_JXZ|
	str         x0,[sp,#0x18]
	add         x1,sp,#0x18
	ldr         x0,[sp,#0x10]
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z|
	ldr         x0,[sp,#0x10]
	ldp         fp,lr,[sp],#0x20
	ret

	ENDP  ; |?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ|, std::chrono::duration<__int64,std::ratio<1,1000000000> >::zero

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z| PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=

; 146  :         _CONSTEXPR17 duration& operator-=(const duration& _Right) noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]
	str         x1,[sp,#8]

; 147  :             _MyRep -= _Right._MyRep;

	ldr         x9,[sp]
	ldr         x8,[sp,#8]
	ldr         x9,[x9]
	ldr         x8,[x8]
	sub         x9,x9,x8
	ldr         x8,[sp]
	str         x9,[x8]

; 148  :             return *this;

	ldr         x0,[sp]
	add         sp,sp,#0x10
	ret

	ENDP  ; |??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z|, std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z| PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=

; 141  :         _CONSTEXPR17 duration& operator+=(const duration& _Right) noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]
	str         x1,[sp,#8]

; 142  :             _MyRep += _Right._MyRep;

	ldr         x9,[sp]
	ldr         x8,[sp,#8]
	ldr         x9,[x9]
	ldr         x8,[x8]
	add         x9,x9,x8
	ldr         x8,[sp]
	str         x9,[x8]

; 143  :             return *this;

	ldr         x0,[sp]
	add         sp,sp,#0x10
	ret

	ENDP  ; |??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z|, std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ| PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count

; 109  :         _NODISCARD constexpr _Rep count() const noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]

; 110  :             return _MyRep;

	ldr         x8,[sp]
	ldr         x0,[x8]
	add         sp,sp,#0x10
	ret

	ENDP  ; |?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ|, std::chrono::duration<__int64,std::ratio<1,1000000000> >::count

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ| PROC ; std::chrono::steady_clock::now

; 669  :         _NODISCARD static time_point now() noexcept { // get current time

|$LN10|
	stp         fp,lr,[sp,#-0x70]!
	mov         fp,sp
	str         x0,[sp,#0x18]

; 670  :             const long long _Freq = _Query_perf_frequency(); // doesn't change after system boot

	bl          _Query_perf_frequency
	str         x0,[sp,#0x10]

; 671  :             const long long _Ctr  = _Query_perf_counter();

	bl          _Query_perf_counter
	str         x0,[sp,#0x20]

; 672  :             static_assert(period::num == 1, "This assumes period::num == 1.");
; 673  :             // 10 MHz is a very common QPC frequency on modern PCs. Optimizing for
; 674  :             // this specific frequency can double the performance of this function by
; 675  :             // avoiding the expensive frequency conversion path.
; 676  :             constexpr long long _TenMHz = 10'000'000;

	ldr         x8,|$LN8@now|
	str         x8,[sp,#0x48]

; 677  :             if (_Freq == _TenMHz) {

	ldr         x9,|$LN8@now|
	ldr         x8,[sp,#0x10]
	cmp         x8,x9
	bne         |$LN2@now|

; 678  :                 static_assert(period::den % _TenMHz == 0, "It should never fail.");
; 679  :                 constexpr long long _Multiplier = period::den / _TenMHz;

	mov         x8,#0x64
	str         x8,[sp,#0x50]

; 680  :                 return time_point(duration(_Ctr * _Multiplier));

	ldr         x9,[sp,#0x20]
	mov         x8,#0x64
	mul         x8,x9,x8
	str         x8,[sp,#0x28]
	add         x1,sp,#0x28
	add         x0,sp,#0x58
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z|
	mov         x1,x0
	ldr         x0,[sp,#0x18]
	bl          |??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|
	ldr         x0,[sp,#0x18]
	b           |$LN1@now|

; 681  :             } else {

	b           |$LN1@now|
|$LN2@now|

; 682  :                 // Instead of just having "(_Ctr * period::den) / _Freq",
; 683  :                 // the algorithm below prevents overflow when _Ctr is sufficiently large.
; 684  :                 // It assumes that _Freq * period::den does not overflow, which is currently true for nano period.
; 685  :                 // It is not realistic for _Ctr to accumulate to large values from zero with this assumption,
; 686  :                 // but the initial value of _Ctr could be large.
; 687  :                 const long long _Whole = (_Ctr / _Freq) * period::den;

	ldr         x9,[sp,#0x20]
	ldr         x8,[sp,#0x10]
	cbnz        x8,|$LN5@now|
	brk         #0xF004
|$LN5@now|
	sdiv        x9,x9,x8
	ldr         x8,|$LN9@now|
	mul         x8,x9,x8
	str         x8,[sp,#0x30]

; 688  :                 const long long _Part  = (_Ctr % _Freq) * period::den / _Freq;

	ldr         x10,[sp,#0x20]
	ldr         x9,[sp,#0x10]
	cbnz        x9,|$LN6@now|
	brk         #0xF004
|$LN6@now|
	sdiv        x8,x10,x9
	mul         x8,x8,x9
	sub         x9,x10,x8
	ldr         x8,|$LN9@now|
	mul         x9,x9,x8
	ldr         x8,[sp,#0x10]
	cbnz        x8,|$LN7@now|
	brk         #0xF004
|$LN7@now|
	sdiv        x8,x9,x8
	str         x8,[sp,#0x38]

; 689  :                 return time_point(duration(_Whole + _Part));

	ldr         x9,[sp,#0x30]
	ldr         x8,[sp,#0x38]
	add         x8,x9,x8
	str         x8,[sp,#0x40]
	add         x1,sp,#0x40
	add         x0,sp,#0x60
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z|
	mov         x1,x0
	ldr         x0,[sp,#0x18]
	bl          |??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z|
	ldr         x0,[sp,#0x18]
|$LN1@now|
	ldp         fp,lr,[sp],#0x70
	ret
	nop
|$LN8@now|
	DCQ         0x989680
|$LN9@now|
	DCQ         0x3b9aca00

	ENDP  ; |?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ|, std::chrono::steady_clock::now

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z| PROC ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,0>

; 99   :             : _MyRep(static_cast<_Rep>(_Val)) {}

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]
	str         x1,[sp,#8]
	ldr         x9,[sp]
	ldr         x8,[sp,#8]
	ldr         x8,[x8]
	str         x8,[x9]
	ldr         x0,[sp]
	add         sp,sp,#0x10
	ret

	ENDP  ; |??$?0_J$0A@@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z|, std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ| PROC ; std::chrono::duration<__int64,std::ratio<1,1> >::count

; 109  :         _NODISCARD constexpr _Rep count() const noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]

; 110  :             return _MyRep;

	ldr         x8,[sp]
	ldr         x0,[x8]
	add         sp,sp,#0x10
	ret

	ENDP  ; |?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ|, std::chrono::duration<__int64,std::ratio<1,1> >::count

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??$?0_J$0A@@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z| PROC ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,0>

; 99   :             : _MyRep(static_cast<_Rep>(_Val)) {}

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]
	str         x1,[sp,#8]
	ldr         x9,[sp]
	ldr         x8,[sp,#8]
	ldr         x8,[x8]
	str         x8,[x9]
	ldr         x0,[sp]
	add         sp,sp,#0x10
	ret

	ENDP  ; |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z|, std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,0>

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ| PROC ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch

; 211  :         _NODISCARD constexpr _Duration time_since_epoch() const noexcept(is_arithmetic_v<rep>) /* strengthened */ {

|$LN3|
	sub         sp,sp,#0x20
	str         x0,[sp,#8]
	str         x1,[sp]

; 212  :             return _MyDur;

	ldr         x8,[sp,#8]
	ldr         x8,[x8]
	str         x8,[sp,#0x10]
	ldr         x9,[sp]
	ldr         x8,[sp,#0x10]
	str         x8,[x9]
	ldr         x0,[sp]
	add         sp,sp,#0x20
	ret

	ENDP  ; |?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ|, std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z| PROC ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >

; 203  :         constexpr explicit time_point(const _Duration& _Other) noexcept(is_arithmetic_v<rep>) // strengthened

|$LN3|
	sub         sp,sp,#0x20
	str         x0,[sp]
	str         x1,[sp,#8]

; 204  :             : _MyDur(_Other) {}

	ldr         x8,[sp,#8]
	ldr         x8,[x8]
	str         x8,[sp,#0x10]
	ldr         x9,[sp]
	ldr         x8,[sp,#0x10]
	str         x8,[x9]
	ldr         x0,[sp]
	add         sp,sp,#0x20
	ret

	ENDP  ; |??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z|, std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ| PROC ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count

; 109  :         _NODISCARD constexpr _Rep count() const noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

|$LN3|
	sub         sp,sp,#0x10
	str         x0,[sp]

; 110  :             return _MyRep;

	ldr         x8,[sp]
	ldr         x0,[x8]
	add         sp,sp,#0x10
	ret

	ENDP  ; |?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ|, std::chrono::duration<__int64,std::ratio<1,10000000> >::count

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_chrono.hpp

	AREA	|.text$mn|, CODE, ARM64

|?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ| PROC ; std::chrono::system_clock::now

; 642  :         _NODISCARD static time_point now() noexcept { // get current time

|$LN3|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	str         x0,[sp,#0x10]

; 643  :             return time_point(duration(_Xtime_get_ticks()));

	bl          _Xtime_get_ticks
	str         x0,[sp,#0x18]
	add         x1,sp,#0x18
	add         x0,sp,#0x20
	bl          |??$?0_J$0A@@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z|
	mov         x1,x0
	ldr         x0,[sp,#0x10]
	bl          |??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z|
	ldr         x0,[sp,#0x10]
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ|, std::chrono::system_clock::now

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

	AREA	|.text$mn|, CODE, ARM64

|?eof@?$_Narrow_char_traits@DH@std@@SAHXZ| PROC		; std::_Narrow_char_traits<char,int>::eof

; 489  :         return static_cast<int_type>(EOF);

	mov         w0,#-1
	ret

	ENDP  ; |?eof@?$_Narrow_char_traits@DH@std@@SAHXZ|, std::_Narrow_char_traits<char,int>::eof

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

	AREA	|.text$mn|, CODE, ARM64

|?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z| PROC ; std::_Narrow_char_traits<char,int>::eq_int_type

; 480  :     _NODISCARD static constexpr bool eq_int_type(const int_type& _Left, const int_type& _Right) noexcept {

|$LN5|
	sub         sp,sp,#0x20
	str         x0,[sp,#0x10]
	str         x1,[sp,#8]

; 481  :         return _Left == _Right;

	ldr         x8,[sp,#8]
	ldr         w9,[x8]
	ldr         x8,[sp,#0x10]
	ldr         w8,[x8]
	cmp         w8,w9
	bne         |$LN3@eq_int_typ|
	mov         w8,#1
	str         w8,[sp]
	b           |$LN4@eq_int_typ|
|$LN3@eq_int_typ|
	mov         w8,#0
	str         w8,[sp]
|$LN4@eq_int_typ|
	ldr         w8,[sp]
	uxtb        w0,w8
	mov         w0,w0
	add         sp,sp,#0x20
	ret

	ENDP  ; |?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z|, std::_Narrow_char_traits<char,int>::eq_int_type

; Function compile flags: /Odtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

	AREA	|.text$mn|, CODE, ARM64

|?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z| PROC	; std::_Narrow_char_traits<char,int>::length

; 402  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept /* strengthened */ {

|$LN3|
	stp         fp,lr,[sp,#-0x20]!
	mov         fp,sp
	str         x0,[sp,#0x10]

; 403  :         // find length of null-terminated string
; 404  : #if _HAS_CXX17
; 405  : #ifdef __cpp_char8_t
; 406  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 407  : #if _HAS_U8_INTRINSICS
; 408  :             return __builtin_u8strlen(_First);
; 409  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 410  :             return _Primary_char_traits::length(_First);
; 411  : #endif // _HAS_U8_INTRINSICS
; 412  :         } else
; 413  : #endif // __cpp_char8_t
; 414  :         {
; 415  :             return __builtin_strlen(_First);
; 416  :         }
; 417  : #else // _HAS_CXX17
; 418  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

	ldr         x0,[sp,#0x10]
	bl          strlen
	ldp         fp,lr,[sp],#0x20
	ret

	ENDP  ; |?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z|, std::_Narrow_char_traits<char,int>::length

	END
