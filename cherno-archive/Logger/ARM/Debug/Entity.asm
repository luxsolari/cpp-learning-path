; Listing generated by Microsoft (R) Optimizing Compiler Version 19.35.32215.0 

	TTL	D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\ARM\Debug\Entity.obj
	THUMB
	.drectve

	.rdata
|?_Fake_alloc@std@@3U_Fake_allocator@1@B| % 1		; std::_Fake_alloc
	EXPORT	|?_Xlen_string@std@@YAXXZ|		; std::_Xlen_string
	EXPORT	|??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@ABV01@@Z| ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	EXPORT	|??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@U_String_constructor_concat_tag@1@AAV01@1@Z| ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	EXPORT	|??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ| ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	EXPORT	|?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAAAAV12@QBDI@Z| ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	EXPORT	|?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBAIQBDI@Z| ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	EXPORT	|?GetClassName@Entity@@UBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ| ; Entity::GetClassName
	EXPORT	|?GetClassName@Item@@UBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ| ; Item::GetClassName
	EXPORT	|??0Player@@QAA@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z| ; Player::Player
	EXPORT	|??0Player@@QAA@H@Z|			; Player::Player
	EXPORT	|?GetClassName@Player@@UBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ| ; Player::GetClassName
	EXPORT	|??1Player@@QAA@XZ|			; Player::~Player
	EXPORT	|??6@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV01@ABUVector2@@@Z| ; operator<<
	EXPORT	|??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z| ; std::operator<<<std::char_traits<char> >
	EXPORT	|?PrintName@@YAXPBVPrintable@@@Z|	; PrintName
	EXPORT	|??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z| ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	EXPORT	|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z| ; std::endl<char,std::char_traits<char> >
	EXPORT	|?Increase@@YAXPAXH@Z|			; Increase
	EXPORT	|main|
	EXPORT	|??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	EXPORT	|??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z| ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	EXPORT	|??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	EXPORT	|??$_Construct@$00PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAXQBDI@Z| ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	EXPORT	|??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z| ; std::_Insert_string<char,std::char_traits<char>,unsigned int>
	EXPORT	|??_C@_0BA@JFNIOLAK@string?5too?5long@| [ DATA ] ; `string'
	EXPORT	|??_7Printable@@6B@| [ DATA ]		; Printable::`vftable'
	EXPORT	|??_7Entity@@6B@| [ DATA ]		; Entity::`vftable'
	EXPORT	|??_C@_06KBCHOIMA@Entity@| [ DATA ]	; `string'
	EXPORT	|??_7Item@@6B@| [ DATA ]		; Item::`vftable'
	EXPORT	|??_7Player@@6B@| [ DATA ]		; Player::`vftable'
	EXPORT	|??_C@_05LKHEONBC@Sword@| [ DATA ]	; `string'
	EXPORT	|??_C@_06EMIPNAHG@Shield@| [ DATA ]	; `string'
	EXPORT	|??_C@_03MMFDNDHJ@Bow@| [ DATA ]	; `string'
	EXPORT	|??_C@_05OLOIDPAB@Arrow@| [ DATA ]	; `string'
	EXPORT	|??_C@_06NPAAKFED@Player@| [ DATA ]	; `string'
	EXPORT	|??_C@_02KEGNLNML@?0?5@| [ DATA ]	; `string'
	EXPORT	|??_C@_01CLKCMJKC@?5@| [ DATA ]		; `string'
	EXPORT	|??_C@_03OBFJPEGB@a?3?5@| [ DATA ]	; `string'
	EXPORT	|??_C@_03PDOMFLIP@b?3?5@| [ DATA ]	; `string'
	EXPORT	|??_C@_03ELFADMOK@c?3?5@| [ DATA ]	; `string'
	EXPORT	|??_C@_03NGIHAEFD@d?3?5@| [ DATA ]	; `string'
	EXPORT	|??_C@_03GODLGDDG@e?3?5@| [ DATA ]	; `string'
	EXPORT	|??_C@_03HMIOMMNI@f?3?5@| [ DATA ]	; `string'
	EXPORT	|??_C@_03MEDCKLLN@g?3?5@| [ DATA ]	; `string'
	EXPORT	|??_C@_06MDBPMDDK@Cherno@| [ DATA ]	; `string'
	EXPORT	|??_C@_06EKGNEAAL@Potion@| [ DATA ]	; `string'
	EXPORT	|??_C@_0O@JIGAJEGO@Inventory?5of?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_05CJBACGMB@hello@| [ DATA ]	; `string'
	EXPORT	|??_C@_06MNKPGELG@?5Hello@| [ DATA ]	; `string'
	EXPORT	|??_C@_05COLMCDPH@Hello@| [ DATA ]	; `string'
	EXPORT	|??_C@_02MKAICKHL@Hi@| [ DATA ]		; `string'
	EXPORT	|??_C@_0L@MELMMCHF@Lux?$AASolari@| [ DATA ] ; `string'
	EXPORT	|??_C@_03KAHMICP@asd@| [ DATA ]		; `string'
	EXPORT	|??_C@_0DN@KBNPIBEN@?6?7Cherno?0?5asd?5asd?5ad?6?7asdasdasd@| [ DATA ] ; `string'
	EXPORT	|??_C@_0P@FCIDOAJD@Size?5of?5char?3?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BC@PAFPIJIK@Size?5of?5wchar_t?3?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BD@KGDCPLPD@Size?5of?5char16_t?3?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BD@KKDMKIMM@Size?5of?5char32_t?3?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_0O@FHNENCLD@Size?5of?5int?3?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BA@NABLDMEP@Size?5of?5short?3?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_0P@FMFJJALO@Size?5of?5long?3?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BE@MMCNJNKF@Size?5of?5long?5long?3?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BA@DHEPMKEB@Size?5of?5float?3?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BB@KDGEGBDE@Size?5of?5double?3?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BG@HEODEGGH@Size?5of?5long?5double?3?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_0P@OGAHEFFC@Size?5of?5bool?3?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BA@EPHHPFAL@Size?5of?5void?$CK?3?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_08ODGCFFKD@?5is?5set?$CB@| [ DATA ] ; `string'
	EXPORT	|??_C@_04JLLMFPGM@Bit?5@| [ DATA ]	; `string'
	EXPORT	|??_C@_08LOJNBJFF@Beginner@| [ DATA ]	; `string'
	EXPORT	|??_R4Printable@@6B@| [ DATA ]		; Printable::`RTTI Complete Object Locator'
	EXPORT	|??_R0?AVPrintable@@@8| [ DATA ]	; Printable `RTTI Type Descriptor'
	EXPORT	|??_R3Printable@@8| [ DATA ]		; Printable::`RTTI Class Hierarchy Descriptor'
	EXPORT	|??_R2Printable@@8| [ DATA ]		; Printable::`RTTI Base Class Array'
	EXPORT	|??_R1A@?0A@EA@Printable@@8| [ DATA ]	; Printable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	EXPORT	|??_R4Entity@@6B@| [ DATA ]		; Entity::`RTTI Complete Object Locator'
	EXPORT	|??_R0?AVEntity@@@8| [ DATA ]		; Entity `RTTI Type Descriptor'
	EXPORT	|??_R3Entity@@8| [ DATA ]		; Entity::`RTTI Class Hierarchy Descriptor'
	EXPORT	|??_R2Entity@@8| [ DATA ]		; Entity::`RTTI Base Class Array'
	EXPORT	|??_R1A@?0A@EA@Entity@@8| [ DATA ]	; Entity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	EXPORT	|??_R4Item@@6B@| [ DATA ]		; Item::`RTTI Complete Object Locator'
	EXPORT	|??_R0?AVItem@@@8| [ DATA ]		; Item `RTTI Type Descriptor'
	EXPORT	|??_R3Item@@8| [ DATA ]			; Item::`RTTI Class Hierarchy Descriptor'
	EXPORT	|??_R2Item@@8| [ DATA ]			; Item::`RTTI Base Class Array'
	EXPORT	|??_R1A@?0A@EA@Item@@8| [ DATA ]	; Item::`RTTI Base Class Descriptor at (0,-1,0,64)'
	EXPORT	|??_R4Player@@6B@| [ DATA ]		; Player::`RTTI Complete Object Locator'
	EXPORT	|??_R0?AVPlayer@@@8| [ DATA ]		; Player `RTTI Type Descriptor'
	EXPORT	|??_R3Player@@8| [ DATA ]		; Player::`RTTI Class Hierarchy Descriptor'
	EXPORT	|??_R2Player@@8| [ DATA ]		; Player::`RTTI Base Class Array'
	EXPORT	|??_R1A@?0A@EA@Player@@8| [ DATA ]	; Player::`RTTI Base Class Descriptor at (0,-1,0,64)'
	IMPORT	|_purecall|
	IMPORT	|??2@YAPAXI@Z|				; operator new
	IMPORT	|??3@YAXPAXI@Z|				; operator delete
	IMPORT	|__std_terminate|
	IMPORT	|?_Xlength_error@std@@YAXPBD@Z|		; std::_Xlength_error
	IMPORT	|?uncaught_exception@std@@YA_NXZ|	; std::uncaught_exception
	IMPORT	|__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAAHD@Z|
	IMPORT	|__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAA_JPBD_J@Z|
	IMPORT	|__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAAXH_N@Z|
	IMPORT	|__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBADD@Z|
	IMPORT	|__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAXXZ|
	IMPORT	|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	IMPORT	|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@_N@Z|
	IMPORT	|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	IMPORT	|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	IMPORT	|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@M@Z|
	IMPORT	|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	IMPORT	|__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV12@D@Z|
	IMPORT	|__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV12@XZ|
	IMPORT	|__CxxFrameHandler3|
	IMPORT	|__GSHandlerCheck_EH|
	IMPORT	|__security_pop_cookie|
	IMPORT	|__security_push_cookie|
	IMPORT	|memcmp|
	IMPORT	|memcpy|
	IMPORT	|memmove|
	IMPORT	|strlen|
	IMPORT	|??_7type_info@@6B@|			; type_info::`vftable'
	IMPORT	|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	IMPORT	|_fltused|
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??2@YAPAXIPAX@Z| DCD imagerel |??2@YAPAXIPAX@Z|
	DCD	0x3f6019
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?max@?$numeric_limits@H@std@@SAHXZ| DCD imagerel |?max@?$numeric_limits@H@std@@SAHXZ|
	DCD	0x3f601d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z| DCD imagerel |?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z|
	DCD	0x3f401d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?_Orphan_all@_Container_base0@std@@QAAXXZ| DCD imagerel |?_Orphan_all@_Container_base0@std@@QAAXXZ|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?_Swap_proxy_and_iterators@_Container_base0@std@@QAAXAAU12@@Z| DCD imagerel |?_Swap_proxy_and_iterators@_Container_base0@std@@QAAXAAU12@@Z|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?_Alloc_proxy@_Container_base0@std@@QAAXABU_Fake_allocator@2@@Z| DCD imagerel |?_Alloc_proxy@_Container_base0@std@@QAAXABU_Fake_allocator@2@@Z|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??0_Fake_proxy_ptr_impl@std@@QAA@ABU_Fake_allocator@1@ABU_Container_base0@1@@Z| DCD imagerel |??0_Fake_proxy_ptr_impl@std@@QAA@ABU_Fake_allocator@1@ABU_Container_base0@1@@Z|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?_Release@_Fake_proxy_ptr_impl@std@@QAAXXZ| DCD imagerel |?_Release@_Fake_proxy_ptr_impl@std@@QAAXXZ|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z| DCD imagerel |?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z|
	DCD	0xfd306029
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?move@?$_Char_traits@DH@std@@SAPADQADQBDI@Z| DCD imagerel |?move@?$_Char_traits@DH@std@@SAPADQADQBDI@Z|
	DCD	0xfd306029
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?compare@?$_Narrow_char_traits@DH@std@@SAHQBD0I@Z| DCD imagerel |?compare@?$_Narrow_char_traits@DH@std@@SAHQBD0I@Z|
	DCD	0x3f401d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z| DCD imagerel |?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z|
	DCD	0x3f401d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?find@?$_Narrow_char_traits@DH@std@@SAPBDQBDIABD@Z| DCD imagerel |?find@?$_Narrow_char_traits@DH@std@@SAPBDQBDIABD@Z|
	DCD	0xfd306041
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z| DCD imagerel |?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z|
	DCD	0x3f601d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z| DCD imagerel |?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z|
	DCD	0x3f6035
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ| DCD imagerel |?eof@?$_Narrow_char_traits@DH@std@@SAHXZ|
	DCD	0x3f601d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?_Xlen_string@std@@YAXXZ| DCD imagerel |?_Xlen_string@std@@YAXXZ|
	DCD	0x3f6029
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??__Ks@string_literals@literals@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@PBDI@Z| DCD imagerel |??__Ks@string_literals@literals@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@PBDI@Z|
	DCD	0xfd306045
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??0?$allocator@D@std@@QAA@XZ| DCD imagerel |??0?$allocator@D@std@@QAA@XZ|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?deallocate@?$allocator@D@std@@QAAXQADI@Z| DCD imagerel |?deallocate@?$allocator@D@std@@QAAXQADI@Z|
	DCD	0x3f4025
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?allocate@?$allocator@D@std@@QAAPADI@Z| DCD imagerel |?allocate@?$allocator@D@std@@QAAPADI@Z|
	DCD	imagerel |$unwind2$?allocate@?$allocator@D@std@@QAAPADI@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$?allocate@?$allocator@D@std@@QAAPADI@Z| DCD 0x11a0000c
	DCD	0xfe00a8fb
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z| DCD imagerel |?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z|
	DCD	0x3f601d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z| DCD imagerel |?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAA@XZ| DCD imagerel |??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAA@XZ|
	DCD	0x3f6031
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAAPADXZ| DCD imagerel |?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAAPADXZ|
	DCD	0x3f603d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBAPBDXZ| DCD imagerel |?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBAPBDXZ|
	DCD	0x3f603d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBA_NXZ| DCD imagerel |?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBA_NXZ|
	DCD	0x3f6031
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QAAXXZ| DCD imagerel |?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QAAXXZ|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAA@XZ| DCD imagerel |??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAA@XZ|
	DCD	0x3f6029
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAA@XZ| DCD imagerel |??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAA@XZ|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAA@XZ| DCD imagerel |??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAA@XZ|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ| DCD imagerel |??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
	DCD	0x3f603d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@ABV01@@Z| DCD imagerel |??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@ABV01@@Z|
	DCD	0x33614d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@QBDI@Z| DCD imagerel |??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@QBDI@Z|
	DCD	0xfd306045
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@QBD@Z| DCD imagerel |??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@QBD@Z|
	DCD	0x316061
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@$$QAV01@@Z| DCD imagerel |??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@$$QAV01@@Z|
	DCD	0x3f6075
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@U_String_constructor_concat_tag@1@AAV01@1@Z| DCD imagerel |??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@U_String_constructor_concat_tag@1@AAV01@1@Z|
	DCD	0xfd3662e9
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAXABV12@@Z| DCD imagerel |?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAXABV12@@Z|
	DCD	0x3f6045
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAXAAV12@@Z| DCD imagerel |?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAXAAV12@@Z|
	DCD	0x3f6059
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ| DCD imagerel |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
	DCD	0xfd306061
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAAAAV01@ABV01@@Z| DCD imagerel |??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAAAAV01@ABV01@@Z|
	DCD	0xfd30604d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAAAAV01@QBD@Z| DCD imagerel |??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAAAAV01@QBD@Z|
	DCD	0x316041
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAAAAV12@ABV12@@Z| DCD imagerel |?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAAAAV12@ABV12@@Z|
	DCD	0xfd30604d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAAAAV12@QBDI@Z| DCD imagerel |?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAAAAV12@QBDI@Z|
	DCD	0xfd3661c5
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAAAAV12@QBD@Z| DCD imagerel |?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAAAAV12@QBD@Z|
	DCD	0x316041
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBAPBDXZ| DCD imagerel |?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBAPBDXZ|
	DCD	0x3f603d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBAIXZ| DCD imagerel |?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBAIXZ|
	DCD	0x3f6019
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBAIXZ| DCD imagerel |?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBAIXZ|
	DCD	0x3f601d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBAIQBDI@Z| DCD imagerel |?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBAIQBDI@Z|
	DCD	0x356149
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z| DCD imagerel |?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z|
	DCD	0xfd306059
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABAII@Z| DCD imagerel |?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABAII@Z|
	DCD	0x3f605d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAXXZ| DCD imagerel |?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAXXZ|
	DCD	0x3f6029
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAXXZ| DCD imagerel |?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAXXZ|
	DCD	0xfd306061
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAXAAV12@@Z| DCD imagerel |?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAXAAV12@@Z|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAAAV?$allocator@D@2@XZ| DCD imagerel |?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAAAV?$allocator@D@2@XZ|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABAABV?$allocator@D@2@XZ| DCD imagerel |?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABAABV?$allocator@D@2@XZ|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAAAAV?$allocator@D@2@XZ| DCD imagerel |?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAAAAV?$allocator@D@2@XZ|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBAABV?$allocator@D@2@XZ| DCD imagerel |?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBAABV?$allocator@D@2@XZ|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAA@XZ| DCD imagerel |??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAA@XZ|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??0Printable@@QAA@XZ| DCD imagerel |??0Printable@@QAA@XZ|
	DCD	0x3f6029
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?GetName@Entity@@QAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ| DCD imagerel |?GetName@Entity@@QAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ|
	DCD	0xfd30606d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?GetClassName@Entity@@UBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ| DCD imagerel |?GetClassName@Entity@@UBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ|
	DCD	0xfd30606d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??0Entity@@QAA@XZ| DCD imagerel |??0Entity@@QAA@XZ|
	DCD	0x3f6051
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??0Item@@QAA@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z| DCD imagerel |??0Item@@QAA@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z|
	DCD	0xfd306049
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?GetClassName@Item@@UBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ| DCD imagerel |?GetClassName@Item@@UBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ|
	DCD	0xfd306031
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??1Item@@QAA@XZ| DCD imagerel |??1Item@@QAA@XZ|
	DCD	0xfd306061
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??_GItem@@QAAPAXI@Z| DCD imagerel |??_GItem@@QAAPAXI@Z|
	DCD	0x31608d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata4$??0Player@@QAA@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z| DCD imagerel |??0Player@@QAA@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z|
	DCD	imagerel |$unwind9$??0Player@@QAA@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z|
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata5$??0Player@@QAA@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z| DCD imagerel |__unwind$13|
	DCD	0x106041
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata6$??0Player@@QAA@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z| DCD imagerel |__unwind$16|
	DCD	0x106041
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata7$??0Player@@QAA@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z| DCD imagerel |__unwind$19|
	DCD	0x106041
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata8$??0Player@@QAA@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z| DCD imagerel |__unwind$22|
	DCD	0x106041
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind9$??0Player@@QAA@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z| DCD 0x33b00165
	DCD	0x1e81ac7
	DCD	0xe8ffdffc
	DCD	0xffdf01
	DCD	imagerel |__GSHandlerCheck_EH|
	DCD	imagerel |__ehfuncinfo$??0Player@@QAA@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z|
	DCD	0xffffffd9
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata4$??0Player@@QAA@H@Z| DCD imagerel |??0Player@@QAA@H@Z|
	DCD	imagerel |$unwind9$??0Player@@QAA@H@Z|
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata5$??0Player@@QAA@H@Z| DCD imagerel |__unwind$13|
	DCD	0x106041
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata6$??0Player@@QAA@H@Z| DCD imagerel |__unwind$16|
	DCD	0x106041
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata7$??0Player@@QAA@H@Z| DCD imagerel |__unwind$19|
	DCD	0x106041
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata8$??0Player@@QAA@H@Z| DCD imagerel |__unwind$22|
	DCD	0x106041
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind9$??0Player@@QAA@H@Z| DCD 0x33b0016e
	DCD	0x1e81ac7
	DCD	0xe8ffdffc
	DCD	0xffdf01
	DCD	imagerel |__GSHandlerCheck_EH|
	DCD	imagerel |__ehfuncinfo$??0Player@@QAA@H@Z|
	DCD	0xffffffd9
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?GetItem@Player@@QBAQBVItem@@H@Z| DCD imagerel |?GetItem@Player@@QBAQBVItem@@H@Z|
	DCD	0x3f6025
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?SetItem@Player@@QAAXHPAVItem@@@Z| DCD imagerel |?SetItem@Player@@QAAXHPAVItem@@@Z|
	DCD	0x3f6021
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?GetName@Player@@QBAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ| DCD imagerel |?GetName@Player@@QBAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ|
	DCD	0x3f6025
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?GetClassName@Player@@UBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ| DCD imagerel |?GetClassName@Player@@UBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ|
	DCD	0xfd30606d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??1Player@@QAA@XZ| DCD imagerel |??1Player@@QAA@XZ|
	DCD	0x3560ed
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??0Vector2@@QAA@MM@Z| DCD imagerel |??0Vector2@@QAA@MM@Z|
	DCD	0x3f6029
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?Add@Vector2@@QBA?AU1@ABU1@@Z| DCD imagerel |?Add@Vector2@@QBA?AU1@ABU1@@Z|
	DCD	0x3f6045
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??HVector2@@QBA?AU0@ABU0@@Z| DCD imagerel |??HVector2@@QBA?AU0@ABU0@@Z|
	DCD	0x3f6045
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??6@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV01@ABUVector2@@@Z| DCD imagerel |??6@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV01@ABUVector2@@@Z|
	DCD	0x31607d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata6$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z| DCD imagerel |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	DCD	imagerel |$unwind8$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata7$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z| DCD imagerel |__catch$20|
	DCD	imagerel |$unwind9$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind8$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z| DCD 0x333000ca
	DCD	0xdffc07c7
	DCD	0xefdbff02
	DCD	0xff03
	DCD	imagerel |__CxxFrameHandler3|
	DCD	imagerel |__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind9$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z| DCD 0x10100012
	DCD	0xffd4
	DCD	imagerel |__CxxFrameHandler3|
	DCD	imagerel |__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata4$?PrintName@@YAXPBVPrintable@@@Z| DCD imagerel |?PrintName@@YAXPBVPrintable@@@Z|
	DCD	imagerel |$unwind5$?PrintName@@YAXPBVPrintable@@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind5$?PrintName@@YAXPBVPrintable@@@Z| DCD 0x4430003e
	DCD	0x1e809c7
	DCD	0xff90a8fc
	DCD	0x90a801e8
	DCD	0xff
	DCD	imagerel |__GSHandlerCheck_EH|
	DCD	imagerel |__ehfuncinfo$?PrintName@@YAXPBVPrintable@@@Z|
	DCD	0xffffffed
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z| DCD imagerel |??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z|
	DCD	0x3f4041
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z| DCD imagerel |??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	DCD	0xfd306085
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$?Increase@@YAXPAXH@Z| DCD imagerel |?Increase@@YAXPAXH@Z|
	DCD	0x3f6045
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata4$main| DCD imagerel |main|
	DCD	imagerel |$unwind7$main|
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata5$main| DCD imagerel |__unwind$51|
	DCD	0x106041
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata6$main| DCD imagerel |__unwind$55|
	DCD	0x106041
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind7$main| DCD 0x443007c9
	DCD	0x1e866c7
	DCD	0xffdffce0
	DCD	0xe001e866
	DCD	0xffdf
	DCD	imagerel |__GSHandlerCheck_EH|
	DCD	imagerel |__ehfuncinfo$main|
	DCD	0xffffffd1
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z| DCD imagerel |??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z|
	DCD	0xfd3260a9
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z| DCD imagerel |??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z|
	DCD	0xfd306039
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??R<lambda_7dc495f0670ff1bd5bcc88730c23d999>@@QAA@XZ| DCD imagerel |??R<lambda_7dc495f0670ff1bd5bcc88730c23d999>@@QAA@XZ|
	DCD	0xfd326245
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??0<lambda_7dc495f0670ff1bd5bcc88730c23d999>@@QAA@ABQBHABH0ABQAH0@Z| DCD imagerel |??0<lambda_7dc495f0670ff1bd5bcc88730c23d999>@@QAA@ABQBHABH0ABQAH0@Z|
	DCD	0x3f6045
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z| DCD imagerel |??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z|
	DCD	0xfd306055
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata3$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| DCD imagerel |??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
	DCD	imagerel |$unwind4$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind4$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| DCD 0x20100015
	DCD	0x8ea8fcc7
	DCD	0xff
	DCD	imagerel |__CxxFrameHandler3|
	DCD	imagerel |__ehfuncinfo$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata4$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z| DCD imagerel |??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z|
	DCD	imagerel |$unwind5$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind5$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z| DCD 0x33300035
	DCD	0xbea8fcc7
	DCD	0x3efff02
	DCD	0xff
	DCD	imagerel |__CxxFrameHandler3|
	DCD	imagerel |__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z|
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata4$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| DCD imagerel |??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
	DCD	imagerel |$unwind5$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind5$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| DCD 0x20100020
	DCD	0x9ca8fcc7
	DCD	0xff
	DCD	imagerel |__CxxFrameHandler3|
	DCD	imagerel |__ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBA_NXZ| DCD imagerel |??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBA_NXZ|
	DCD	0x3f6019
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z| DCD imagerel |??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$min@I@std@@YAABIABI0@Z| DCD imagerel |??$min@I@std@@YAABIABI0@Z|
	DCD	0x3f6031
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$_Traits_find@U?$char_traits@D@std@@@std@@YAIQBDII0I@Z| DCD imagerel |??$_Traits_find@U?$char_traits@D@std@@@std@@YAIQBDII0I@Z|
	DCD	0x356101
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$_Convert_size@II@std@@YAII@Z| DCD imagerel |??$_Convert_size@II@std@@YAII@Z|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z| DCD imagerel |??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAA@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z| DCD imagerel |??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAA@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z|
	DCD	0x3f6031
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAA@U_Zero_then_variadic_args_t@1@@Z| DCD imagerel |??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAA@U_Zero_then_variadic_args_t@1@@Z|
	DCD	0x3f6031
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$_Construct@$00PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAXQBDI@Z| DCD imagerel |??$_Construct@$00PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAXQBDI@Z|
	DCD	0xfd3460f1
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$_Construct@$01PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAXQBDI@Z| DCD imagerel |??$_Construct@$01PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAXQBDI@Z|
	DCD	0x3360fd
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z| DCD imagerel |??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??R<lambda_74b639d1c0f172dc93f8166f415eb624>@@QBA@QADQBDI1I@Z| DCD imagerel |??R<lambda_74b639d1c0f172dc93f8166f415eb624>@@QBA@QADQBDI1I@Z|
	DCD	0x31605d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$_Reallocate_grow_by@V<lambda_74b639d1c0f172dc93f8166f415eb624>@@PBDI@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAAAV01@IV<lambda_74b639d1c0f172dc93f8166f415eb624>@@PBDI@Z| DCD imagerel |??$_Reallocate_grow_by@V<lambda_74b639d1c0f172dc93f8166f415eb624>@@PBDI@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAAAV01@IV<lambda_74b639d1c0f172dc93f8166f415eb624>@@PBDI@Z|
	DCD	0xfd36615d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$_Construct_in_place@PADAAPAD@std@@YAXAAPAD0@Z| DCD imagerel |??$_Construct_in_place@PADAAPAD@std@@YAXAAPAD0@Z|
	DCD	0x3f601d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$_Unfancy@D@std@@YAPADPAD@Z| DCD imagerel |??$_Unfancy@D@std@@YAPADPAD@Z|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$max@I@std@@YAABIABI0@Z| DCD imagerel |??$max@I@std@@YAABIABI0@Z|
	DCD	0x3f6031
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z| DCD imagerel |??$_Deallocate@$07$0A@@std@@YAXPAXI@Z|
	DCD	0x3f401d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z| DCD imagerel |??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z| DCD imagerel |??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata6$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z| DCD imagerel |??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z|
	DCD	imagerel |$unwind8$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z|
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata7$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z| DCD imagerel |__catch$21|
	DCD	imagerel |$unwind9$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind8$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z| DCD 0x33b000a2
	DCD	0xabfc06c7
	DCD	0x8bff04f0
	DCD	0xff05eff0
	DCD	imagerel |__CxxFrameHandler3|
	DCD	imagerel |__ehfuncinfo$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind9$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z| DCD 0x10100012
	DCD	0xffd4
	DCD	imagerel |__CxxFrameHandler3|
	DCD	imagerel |__ehfuncinfo$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z|
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z| DCD imagerel |??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z| DCD imagerel |??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z|
	DCD	0x3f601d
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$addressof@PAD@std@@YAPAPADAAPAD@Z| DCD imagerel |??$addressof@PAD@std@@YAPAPADAAPAD@Z|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$_Voidify_iter@PAPAD@std@@YAPAXPAPAD@Z| DCD imagerel |??$_Voidify_iter@PAPAD@std@@YAPAXPAPAD@Z|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$forward@AAPAD@std@@YAAAPADAAPAD@Z| DCD imagerel |??$forward@AAPAD@std@@YAAAPADAAPAD@Z|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z| DCD imagerel |??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z|
	DCD	imagerel |$unwind2$??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z|
;	COMDAT .xdata
.xdata	SEGMENT
|$unwind2$??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z| DCD 0x11a0000b
	DCD	0xfe00a8fb
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$?0AAV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAA@U_One_then_variadic_args_t@1@AAV?$allocator@D@1@@Z| DCD imagerel |??$?0AAV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAA@U_One_then_variadic_args_t@1@AAV?$allocator@D@1@@Z|
	DCD	0x3f6031
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$_Allocators_equal@V?$allocator@D@std@@@std@@YA_NABV?$allocator@D@0@0@Z| DCD imagerel |??$_Allocators_equal@V?$allocator@D@std@@@std@@YA_NABV?$allocator@D@0@0@Z|
	DCD	0x3f6019
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$_Get_size_of_n@$00@std@@YAII@Z| DCD imagerel |??$_Get_size_of_n@$00@std@@YAII@Z|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$forward@ABQAD@std@@YAABQADABQAD@Z| DCD imagerel |??$forward@ABQAD@std@@YAABQADABQAD@Z|
	DCD	0x3f6015
;	COMDAT .pdata
.pdata	SEGMENT
|$pdata1$??$forward@AAV?$allocator@D@std@@@std@@YAAAV?$allocator@D@0@AAV10@@Z| DCD imagerel |??$forward@AAV?$allocator@D@std@@@std@@YAAAV?$allocator@D@0@AAV10@@Z|
	DCD	0x3f6015
;	COMDAT ??_R1A@?0A@EA@Player@@8
.rdata$r	SEGMENT
|??_R1A@?0A@EA@Player@@8| DCD |??_R0?AVPlayer@@@8|	; Player::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DCD	0x2
	DCD	0x0
	DCD	0xffffffff
	DCD	0x0
	DCD	0x40
	DCD	|??_R3Player@@8|
;	COMDAT ??_R2Player@@8
.rdata$r	SEGMENT
|??_R2Player@@8| DCD |??_R1A@?0A@EA@Player@@8|		; Player::`RTTI Base Class Array'
	DCD	|??_R1A@?0A@EA@Entity@@8|
	DCD	|??_R1A@?0A@EA@Printable@@8|
	%	3
;	COMDAT ??_R3Player@@8
.rdata$r	SEGMENT
|??_R3Player@@8| DCD 0x0				; Player::`RTTI Class Hierarchy Descriptor'
	DCD	0x0
	DCD	0x3
	DCD	|??_R2Player@@8|
;	COMDAT ??_R0?AVPlayer@@@8
.data$rs	SEGMENT
|??_R0?AVPlayer@@@8| DCD |??_7type_info@@6B@|		; Player `RTTI Type Descriptor'
	DCD	0x0
	DCB	".?AVPlayer@@", 0x0
;	COMDAT ??_R4Player@@6B@
.rdata$r	SEGMENT
|??_R4Player@@6B@| DCD 0x0				; Player::`RTTI Complete Object Locator'
	DCD	0x0
	DCD	0x0
	DCD	|??_R0?AVPlayer@@@8|
	DCD	|??_R3Player@@8|
;	COMDAT ??_R1A@?0A@EA@Item@@8
.rdata$r	SEGMENT
|??_R1A@?0A@EA@Item@@8| DCD |??_R0?AVItem@@@8|		; Item::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DCD	0x1
	DCD	0x0
	DCD	0xffffffff
	DCD	0x0
	DCD	0x40
	DCD	|??_R3Item@@8|
;	COMDAT ??_R2Item@@8
.rdata$r	SEGMENT
|??_R2Item@@8| DCD |??_R1A@?0A@EA@Item@@8|		; Item::`RTTI Base Class Array'
	DCD	|??_R1A@?0A@EA@Printable@@8|
	%	3
;	COMDAT ??_R3Item@@8
.rdata$r	SEGMENT
|??_R3Item@@8| DCD 0x0					; Item::`RTTI Class Hierarchy Descriptor'
	DCD	0x0
	DCD	0x2
	DCD	|??_R2Item@@8|
;	COMDAT ??_R0?AVItem@@@8
.data$rs	SEGMENT
|??_R0?AVItem@@@8| DCD |??_7type_info@@6B@|		; Item `RTTI Type Descriptor'
	DCD	0x0
	DCB	".?AVItem@@", 0x0
;	COMDAT ??_R4Item@@6B@
.rdata$r	SEGMENT
|??_R4Item@@6B@| DCD 0x0				; Item::`RTTI Complete Object Locator'
	DCD	0x0
	DCD	0x0
	DCD	|??_R0?AVItem@@@8|
	DCD	|??_R3Item@@8|
;	COMDAT ??_R1A@?0A@EA@Entity@@8
.rdata$r	SEGMENT
|??_R1A@?0A@EA@Entity@@8| DCD |??_R0?AVEntity@@@8|	; Entity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DCD	0x1
	DCD	0x0
	DCD	0xffffffff
	DCD	0x0
	DCD	0x40
	DCD	|??_R3Entity@@8|
;	COMDAT ??_R2Entity@@8
.rdata$r	SEGMENT
|??_R2Entity@@8| DCD |??_R1A@?0A@EA@Entity@@8|		; Entity::`RTTI Base Class Array'
	DCD	|??_R1A@?0A@EA@Printable@@8|
	%	3
;	COMDAT ??_R3Entity@@8
.rdata$r	SEGMENT
|??_R3Entity@@8| DCD 0x0				; Entity::`RTTI Class Hierarchy Descriptor'
	DCD	0x0
	DCD	0x2
	DCD	|??_R2Entity@@8|
;	COMDAT ??_R0?AVEntity@@@8
.data$rs	SEGMENT
|??_R0?AVEntity@@@8| DCD |??_7type_info@@6B@|		; Entity `RTTI Type Descriptor'
	DCD	0x0
	DCB	".?AVEntity@@", 0x0
;	COMDAT ??_R4Entity@@6B@
.rdata$r	SEGMENT
|??_R4Entity@@6B@| DCD 0x0				; Entity::`RTTI Complete Object Locator'
	DCD	0x0
	DCD	0x0
	DCD	|??_R0?AVEntity@@@8|
	DCD	|??_R3Entity@@8|
;	COMDAT ??_R1A@?0A@EA@Printable@@8
.rdata$r	SEGMENT
|??_R1A@?0A@EA@Printable@@8| DCD |??_R0?AVPrintable@@@8| ; Printable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DCD	0x0
	DCD	0x0
	DCD	0xffffffff
	DCD	0x0
	DCD	0x40
	DCD	|??_R3Printable@@8|
;	COMDAT ??_R2Printable@@8
.rdata$r	SEGMENT
|??_R2Printable@@8| DCD |??_R1A@?0A@EA@Printable@@8|	; Printable::`RTTI Base Class Array'
	%	3
;	COMDAT ??_R3Printable@@8
.rdata$r	SEGMENT
|??_R3Printable@@8| DCD 0x0				; Printable::`RTTI Class Hierarchy Descriptor'
	DCD	0x0
	DCD	0x1
	DCD	|??_R2Printable@@8|
;	COMDAT ??_R0?AVPrintable@@@8
.data$rs	SEGMENT
|??_R0?AVPrintable@@@8| DCD |??_7type_info@@6B@|	; Printable `RTTI Type Descriptor'
	DCD	0x0
	DCB	".?AVPrintable@@", 0x0
;	COMDAT ??_R4Printable@@6B@
.rdata$r	SEGMENT
|??_R4Printable@@6B@| DCD 0x0				; Printable::`RTTI Complete Object Locator'
	DCD	0x0
	DCD	0x0
	DCD	|??_R0?AVPrintable@@@8|
	DCD	|??_R3Printable@@8|
;	COMDAT ??_C@_08LOJNBJFF@Beginner@
.rdata	SEGMENT
|??_C@_08LOJNBJFF@Beginner@| DCB "Beginner", 0x0	; `string'
;	COMDAT ??_C@_04JLLMFPGM@Bit?5@
.rdata	SEGMENT
|??_C@_04JLLMFPGM@Bit?5@| DCB "Bit ", 0x0		; `string'
;	COMDAT ??_C@_08ODGCFFKD@?5is?5set?$CB@
.rdata	SEGMENT
|??_C@_08ODGCFFKD@?5is?5set?$CB@| DCB " is set!", 0x0	; `string'
;	COMDAT ??_C@_0BA@EPHHPFAL@Size?5of?5void?$CK?3?5@
.rdata	SEGMENT
|??_C@_0BA@EPHHPFAL@Size?5of?5void?$CK?3?5@| DCB "Size of void*: ", 0x0 ; `string'
;	COMDAT ??_C@_0P@OGAHEFFC@Size?5of?5bool?3?5@
.rdata	SEGMENT
|??_C@_0P@OGAHEFFC@Size?5of?5bool?3?5@| DCB "Size of bool: ", 0x0 ; `string'
;	COMDAT ??_C@_0BG@HEODEGGH@Size?5of?5long?5double?3?5@
.rdata	SEGMENT
|??_C@_0BG@HEODEGGH@Size?5of?5long?5double?3?5@| DCB "Size of long double"
	DCB	": ", 0x0				; `string'
;	COMDAT ??_C@_0BB@KDGEGBDE@Size?5of?5double?3?5@
.rdata	SEGMENT
|??_C@_0BB@KDGEGBDE@Size?5of?5double?3?5@| DCB "Size of double: ", 0x0 ; `string'
;	COMDAT ??_C@_0BA@DHEPMKEB@Size?5of?5float?3?5@
.rdata	SEGMENT
|??_C@_0BA@DHEPMKEB@Size?5of?5float?3?5@| DCB "Size of float: ", 0x0 ; `string'
;	COMDAT ??_C@_0BE@MMCNJNKF@Size?5of?5long?5long?3?5@
.rdata	SEGMENT
|??_C@_0BE@MMCNJNKF@Size?5of?5long?5long?3?5@| DCB "Size of long long: ", 0x0 ; `string'
;	COMDAT ??_C@_0P@FMFJJALO@Size?5of?5long?3?5@
.rdata	SEGMENT
|??_C@_0P@FMFJJALO@Size?5of?5long?3?5@| DCB "Size of long: ", 0x0 ; `string'
;	COMDAT ??_C@_0BA@NABLDMEP@Size?5of?5short?3?5@
.rdata	SEGMENT
|??_C@_0BA@NABLDMEP@Size?5of?5short?3?5@| DCB "Size of short: ", 0x0 ; `string'
;	COMDAT ??_C@_0O@FHNENCLD@Size?5of?5int?3?5@
.rdata	SEGMENT
|??_C@_0O@FHNENCLD@Size?5of?5int?3?5@| DCB "Size of int: ", 0x0 ; `string'
;	COMDAT ??_C@_0BD@KKDMKIMM@Size?5of?5char32_t?3?5@
.rdata	SEGMENT
|??_C@_0BD@KKDMKIMM@Size?5of?5char32_t?3?5@| DCB "Size of char32_t: ", 0x0 ; `string'
;	COMDAT ??_C@_0BD@KGDCPLPD@Size?5of?5char16_t?3?5@
.rdata	SEGMENT
|??_C@_0BD@KGDCPLPD@Size?5of?5char16_t?3?5@| DCB "Size of char16_t: ", 0x0 ; `string'
;	COMDAT ??_C@_0BC@PAFPIJIK@Size?5of?5wchar_t?3?5@
.rdata	SEGMENT
|??_C@_0BC@PAFPIJIK@Size?5of?5wchar_t?3?5@| DCB "Size of wchar_t: ", 0x0 ; `string'
;	COMDAT ??_C@_0P@FCIDOAJD@Size?5of?5char?3?5@
.rdata	SEGMENT
|??_C@_0P@FCIDOAJD@Size?5of?5char?3?5@| DCB "Size of char: ", 0x0 ; `string'
;	COMDAT ??_C@_0DN@KBNPIBEN@?6?7Cherno?0?5asd?5asd?5ad?6?7asdasdasd@
.rdata	SEGMENT
|??_C@_0DN@KBNPIBEN@?6?7Cherno?0?5asd?5asd?5ad?6?7asdasdasd@| DCB 0xa, 0x9
	DCB	"Cherno, asd asd ad", 0xa, 0x9, "asdasdasd asd asdd", 0xa
	DCB	0x9, "asdasdasdasdasdasd", 0x0		; `string'
;	COMDAT ??_C@_03KAHMICP@asd@
.rdata	SEGMENT
|??_C@_03KAHMICP@asd@| DCB "asd", 0x0			; `string'
;	COMDAT ??_C@_0L@MELMMCHF@Lux?$AASolari@
.rdata	SEGMENT
|??_C@_0L@MELMMCHF@Lux?$AASolari@| DCB "Lux", 0x0, "Solari", 0x0 ; `string'
;	COMDAT ??_C@_02MKAICKHL@Hi@
.rdata	SEGMENT
|??_C@_02MKAICKHL@Hi@| DCB "Hi", 0x0			; `string'
;	COMDAT ??_C@_05COLMCDPH@Hello@
.rdata	SEGMENT
|??_C@_05COLMCDPH@Hello@| DCB "Hello", 0x0		; `string'
;	COMDAT ??_C@_06MNKPGELG@?5Hello@
.rdata	SEGMENT
|??_C@_06MNKPGELG@?5Hello@| DCB " Hello", 0x0		; `string'
;	COMDAT ??_C@_05CJBACGMB@hello@
.rdata	SEGMENT
|??_C@_05CJBACGMB@hello@| DCB "hello", 0x0		; `string'
;	COMDAT ??_C@_0O@JIGAJEGO@Inventory?5of?5@
.rdata	SEGMENT
|??_C@_0O@JIGAJEGO@Inventory?5of?5@| DCB "Inventory of ", 0x0 ; `string'
;	COMDAT ??_C@_06EKGNEAAL@Potion@
.rdata	SEGMENT
|??_C@_06EKGNEAAL@Potion@| DCB "Potion", 0x0		; `string'
;	COMDAT ??_C@_06MDBPMDDK@Cherno@
.rdata	SEGMENT
|??_C@_06MDBPMDDK@Cherno@| DCB "Cherno", 0x0		; `string'
;	COMDAT ??_C@_03MEDCKLLN@g?3?5@
.rdata	SEGMENT
|??_C@_03MEDCKLLN@g?3?5@| DCB "g: ", 0x0		; `string'
;	COMDAT ??_C@_03HMIOMMNI@f?3?5@
.rdata	SEGMENT
|??_C@_03HMIOMMNI@f?3?5@| DCB "f: ", 0x0		; `string'
;	COMDAT ??_C@_03GODLGDDG@e?3?5@
.rdata	SEGMENT
|??_C@_03GODLGDDG@e?3?5@| DCB "e: ", 0x0		; `string'
;	COMDAT ??_C@_03NGIHAEFD@d?3?5@
.rdata	SEGMENT
|??_C@_03NGIHAEFD@d?3?5@| DCB "d: ", 0x0		; `string'
;	COMDAT ??_C@_03ELFADMOK@c?3?5@
.rdata	SEGMENT
|??_C@_03ELFADMOK@c?3?5@| DCB "c: ", 0x0		; `string'
;	COMDAT ??_C@_03PDOMFLIP@b?3?5@
.rdata	SEGMENT
|??_C@_03PDOMFLIP@b?3?5@| DCB "b: ", 0x0		; `string'
;	COMDAT ??_C@_03OBFJPEGB@a?3?5@
.rdata	SEGMENT
|??_C@_03OBFJPEGB@a?3?5@| DCB "a: ", 0x0		; `string'
;	COMDAT ??_C@_01CLKCMJKC@?5@
.rdata	SEGMENT
|??_C@_01CLKCMJKC@?5@| DCB " ", 0x0			; `string'
;	COMDAT ??_C@_02KEGNLNML@?0?5@
.rdata	SEGMENT
|??_C@_02KEGNLNML@?0?5@| DCB ", ", 0x0			; `string'
;	COMDAT ??_C@_06NPAAKFED@Player@
.rdata	SEGMENT
|??_C@_06NPAAKFED@Player@| DCB "Player", 0x0		; `string'
;	COMDAT ??_C@_05OLOIDPAB@Arrow@
.rdata	SEGMENT
|??_C@_05OLOIDPAB@Arrow@| DCB "Arrow", 0x0		; `string'
;	COMDAT ??_C@_03MMFDNDHJ@Bow@
.rdata	SEGMENT
|??_C@_03MMFDNDHJ@Bow@| DCB "Bow", 0x0			; `string'
;	COMDAT ??_C@_06EMIPNAHG@Shield@
.rdata	SEGMENT
|??_C@_06EMIPNAHG@Shield@| DCB "Shield", 0x0		; `string'
;	COMDAT ??_C@_05LKHEONBC@Sword@
.rdata	SEGMENT
|??_C@_05LKHEONBC@Sword@| DCB "Sword", 0x0		; `string'
;	COMDAT ??_7Player@@6B@
.rdata	SEGMENT
|??_7Player@@6B@| DCD |??_R4Player@@6B@|		; Player::`vftable'
	DCD	|?GetClassName@Player@@UBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ|
;	COMDAT ??_7Item@@6B@
.rdata	SEGMENT
|??_7Item@@6B@| DCD |??_R4Item@@6B@|			; Item::`vftable'
	DCD	|?GetClassName@Item@@UBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ|
;	COMDAT ??_C@_06KBCHOIMA@Entity@
.rdata	SEGMENT
|??_C@_06KBCHOIMA@Entity@| DCB "Entity", 0x0		; `string'
;	COMDAT ??_7Entity@@6B@
.rdata	SEGMENT
|??_7Entity@@6B@| DCD |??_R4Entity@@6B@|		; Entity::`vftable'
	DCD	|?GetClassName@Entity@@UBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ|
;	COMDAT ??_7Printable@@6B@
.rdata	SEGMENT
|??_7Printable@@6B@| DCD |??_R4Printable@@6B@|		; Printable::`vftable'
	DCD	|_purecall|
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
.rdata	SEGMENT
|??_C@_0BA@JFNIOLAK@string?5too?5long@| DCB "string too long", 0x0 ; `string'
;	COMDAT .rdata
.rdata	SEGMENT
|__ehfuncinfo$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z| DCD 0x19930522
	DCD	0x5
	DCD	imagerel |__unwindtable$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z|
	DCD	0x1
	DCD	imagerel |__tryblocktable$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z|
	DCD	0xc
	DCD	imagerel |$ipstate4$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z|
	DCD	0xffffffc8
	DCD	0x0
	DCD	0x1
|__unwindtable$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z| DCD 0xffffffff
	DCD	imagerel |__unwind$22|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0xffffffff
	DCD	imagerel |__std_terminate|
	DCD	0x3
	DCD	imagerel |__std_terminate|
|__tryblocktable$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z| DCD 0x1
	DCD	0x1
	DCD	0x2
	DCD	0x1
	DCD	imagerel |__catchsym$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z$5|
|__catchsym$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z$5| DCD 0x40
	DCD	0x0
	DCD	0x0
	DCD	imagerel |__catch$21|
	%	4
|$ipstate4$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z| DCD imagerel |$M86|
	DCD	0xffffffff
	DCD	imagerel |$M87|
	DCD	0x0
	DCD	imagerel |$M88|
	DCD	0x1
	DCD	imagerel |$M89|
	DCD	0x0
	DCD	imagerel |$M90|
	DCD	0x1
	DCD	imagerel |$M91|
	DCD	0x0
	DCD	imagerel |$M92|
	DCD	0x3
	DCD	imagerel |$M93|
	DCD	0x4
	DCD	imagerel |$M94|
	DCD	0xffffffff
	DCD	imagerel |$M95|
	DCD	0x0
	DCD	imagerel |$M96|
	DCD	0x2
	DCD	imagerel |$M97|
	DCD	0x0
;	COMDAT .rdata
.rdata	SEGMENT
|__ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| DCD 0x19930522
	DCD	0x1
	DCD	imagerel |__unwindtable$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
	DCD	0x0
	DCD	0x0
	DCD	0x3
	DCD	imagerel |$ipstate3$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
	DCD	0xffffffe8
	DCD	0x0
	DCD	0x5
|__unwindtable$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| DCD 0xffffffff
	DCD	imagerel |__std_terminate|
|$ipstate3$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| DCD imagerel |$M15|
	DCD	0xffffffff
	DCD	imagerel |$M16|
	DCD	0x0
	DCD	imagerel |$M17|
	DCD	0xffffffff
;	COMDAT .rdata
.rdata	SEGMENT
|__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z| DCD 0x19930522
	DCD	0x1
	DCD	imagerel |__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z|
	DCD	0x0
	DCD	0x0
	DCD	0x3
	DCD	imagerel |$ipstate3$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z|
	DCD	0xffffffd8
	DCD	0x0
	DCD	0x1
|__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z| DCD 0xffffffff
	DCD	imagerel |__unwind$6|
|$ipstate3$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z| DCD imagerel |$M28|
	DCD	0xffffffff
	DCD	imagerel |$M29|
	DCD	0x0
	DCD	imagerel |$M30|
	DCD	0xffffffff
;	COMDAT .rdata
.rdata	SEGMENT
|__ehfuncinfo$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| DCD 0x19930522
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x1
	DCD	imagerel |$ipstate2$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
	DCD	0xffffffe8
	DCD	0x0
	DCD	0x5
|$ipstate2$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| DCD imagerel |$M7|
	DCD	0xffffffff
;	COMDAT .rdata
.rdata	SEGMENT
|__ehfuncinfo$main| DCD 0x19930522
	DCD	0x13
	DCD	imagerel |__unwindtable$main|
	DCD	0x0
	DCD	0x0
	DCD	0x60
	DCD	imagerel |$ipstate3$main|
	DCD	0xfffffe70
	DCD	0x0
	DCD	0x1
|__unwindtable$main| DCD 0xffffffff
	DCD	imagerel |__unwind$47|
	DCD	0x0
	DCD	imagerel |__unwind$48|
	DCD	0x1
	DCD	imagerel |__unwind$49|
	DCD	0x0
	DCD	imagerel |__unwind$49|
	DCD	0x3
	DCD	imagerel |__unwind$50|
	DCD	0x4
	DCD	imagerel |__unwind$51|
	DCD	0x3
	DCD	imagerel |__unwind$51|
	DCD	0x3
	DCD	imagerel |__unwind$54|
	DCD	0x7
	DCD	imagerel |__unwind$55|
	DCD	0x3
	DCD	imagerel |__unwind$55|
	DCD	0x3
	DCD	imagerel |__unwind$58|
	DCD	0x3
	DCD	imagerel |__unwind$59|
	DCD	0xb
	DCD	imagerel |__unwind$60|
	DCD	0xc
	DCD	imagerel |__unwind$61|
	DCD	0xb
	DCD	imagerel |__unwind$61|
	DCD	0xe
	DCD	imagerel |__unwind$62|
	DCD	0xf
	DCD	imagerel |__unwind$63|
	DCD	0x10
	DCD	imagerel |__unwind$64|
	DCD	0xe
	DCD	imagerel |__unwind$65|
|$ipstate3$main| DCD imagerel |$M704|
	DCD	0xffffffff
	DCD	imagerel |$M705|
	DCD	0x0
	DCD	imagerel |$M706|
	DCD	0x1
	DCD	imagerel |$M707|
	DCD	0x3
	DCD	imagerel |$M708|
	DCD	0x0
	DCD	imagerel |$M709|
	DCD	0x3
	DCD	imagerel |$M710|
	DCD	0x0
	DCD	imagerel |$M711|
	DCD	0x3
	DCD	imagerel |$M712|
	DCD	0x0
	DCD	imagerel |$M713|
	DCD	0x3
	DCD	imagerel |$M714|
	DCD	0x4
	DCD	imagerel |$M715|
	DCD	0x5
	DCD	imagerel |$M716|
	DCD	0x6
	DCD	imagerel |$M717|
	DCD	0x3
	DCD	imagerel |$M718|
	DCD	0x0
	DCD	imagerel |$M719|
	DCD	0x3
	DCD	imagerel |$M720|
	DCD	0x0
	DCD	imagerel |$M721|
	DCD	0x3
	DCD	imagerel |$M722|
	DCD	0x7
	DCD	imagerel |$M723|
	DCD	0x8
	DCD	imagerel |$M724|
	DCD	0x9
	DCD	imagerel |$M725|
	DCD	0x3
	DCD	imagerel |$M726|
	DCD	0x0
	DCD	imagerel |$M727|
	DCD	0x3
	DCD	imagerel |$M728|
	DCD	0x0
	DCD	imagerel |$M729|
	DCD	0x3
	DCD	imagerel |$M730|
	DCD	0x0
	DCD	imagerel |$M731|
	DCD	0x3
	DCD	imagerel |$M732|
	DCD	0x0
	DCD	imagerel |$M733|
	DCD	0x3
	DCD	imagerel |$M734|
	DCD	0xa
	DCD	imagerel |$M735|
	DCD	0x3
	DCD	imagerel |$M736|
	DCD	0x0
	DCD	imagerel |$M737|
	DCD	0x3
	DCD	imagerel |$M738|
	DCD	0x0
	DCD	imagerel |$M739|
	DCD	0x3
	DCD	imagerel |$M740|
	DCD	0xb
	DCD	imagerel |$M741|
	DCD	0x0
	DCD	imagerel |$M742|
	DCD	0xb
	DCD	imagerel |$M743|
	DCD	0x0
	DCD	imagerel |$M744|
	DCD	0xb
	DCD	imagerel |$M745|
	DCD	0x0
	DCD	imagerel |$M746|
	DCD	0xb
	DCD	imagerel |$M747|
	DCD	0x0
	DCD	imagerel |$M748|
	DCD	0xb
	DCD	imagerel |$M749|
	DCD	0xc
	DCD	imagerel |$M750|
	DCD	0xe
	DCD	imagerel |$M751|
	DCD	0x0
	DCD	imagerel |$M752|
	DCD	0xe
	DCD	imagerel |$M753|
	DCD	0x0
	DCD	imagerel |$M754|
	DCD	0xe
	DCD	imagerel |$M755|
	DCD	0xf
	DCD	imagerel |$M756|
	DCD	0x10
	DCD	imagerel |$M757|
	DCD	0x11
	DCD	imagerel |$M758|
	DCD	0x0
	DCD	imagerel |$M759|
	DCD	0x11
	DCD	imagerel |$M760|
	DCD	0x0
	DCD	imagerel |$M761|
	DCD	0x11
	DCD	imagerel |$M762|
	DCD	0x10
	DCD	imagerel |$M763|
	DCD	0x0
	DCD	imagerel |$M764|
	DCD	0x10
	DCD	imagerel |$M765|
	DCD	0x0
	DCD	imagerel |$M766|
	DCD	0x10
	DCD	imagerel |$M767|
	DCD	0xf
	DCD	imagerel |$M768|
	DCD	0x0
	DCD	imagerel |$M769|
	DCD	0xf
	DCD	imagerel |$M770|
	DCD	0x0
	DCD	imagerel |$M771|
	DCD	0xf
	DCD	imagerel |$M772|
	DCD	0xe
	DCD	imagerel |$M773|
	DCD	0x0
	DCD	imagerel |$M774|
	DCD	0xe
	DCD	imagerel |$M775|
	DCD	0x0
	DCD	imagerel |$M776|
	DCD	0xe
	DCD	imagerel |$M777|
	DCD	0x0
	DCD	imagerel |$M778|
	DCD	0xe
	DCD	imagerel |$M779|
	DCD	0x0
	DCD	imagerel |$M780|
	DCD	0xe
	DCD	imagerel |$M781|
	DCD	0x12
	DCD	imagerel |$M782|
	DCD	0xe
	DCD	imagerel |$M783|
	DCD	0x0
	DCD	imagerel |$M784|
	DCD	0xe
	DCD	imagerel |$M785|
	DCD	0x0
	DCD	imagerel |$M786|
	DCD	0xe
	DCD	imagerel |$M787|
	DCD	0xb
	DCD	imagerel |$M788|
	DCD	0x0
	DCD	imagerel |$M789|
	DCD	0xb
	DCD	imagerel |$M790|
	DCD	0x0
	DCD	imagerel |$M791|
	DCD	0xb
	DCD	imagerel |$M792|
	DCD	0x3
	DCD	imagerel |$M793|
	DCD	0x0
	DCD	imagerel |$M794|
	DCD	0x3
	DCD	imagerel |$M795|
	DCD	0x0
	DCD	imagerel |$M796|
	DCD	0x3
	DCD	imagerel |$M797|
	DCD	0x0
	DCD	imagerel |$M798|
	DCD	0xffffffff
	DCD	imagerel |$M799|
	DCD	0x0
;	COMDAT .rdata
.rdata	SEGMENT
|__ehfuncinfo$?PrintName@@YAXPBVPrintable@@@Z| DCD 0x19930522
	DCD	0x1
	DCD	imagerel |__unwindtable$?PrintName@@YAXPBVPrintable@@@Z|
	DCD	0x0
	DCD	0x0
	DCD	0x7
	DCD	imagerel |$ipstate3$?PrintName@@YAXPBVPrintable@@@Z|
	DCD	0xffffffc8
	DCD	0x0
	DCD	0x1
|__unwindtable$?PrintName@@YAXPBVPrintable@@@Z| DCD 0xffffffff
	DCD	imagerel |__unwind$3|
|$ipstate3$?PrintName@@YAXPBVPrintable@@@Z| DCD imagerel |$M30|
	DCD	0xffffffff
	DCD	imagerel |$M31|
	DCD	0x0
	DCD	imagerel |$M32|
	DCD	0xffffffff
	DCD	imagerel |$M33|
	DCD	0x0
	DCD	imagerel |$M34|
	DCD	0xffffffff
	DCD	imagerel |$M35|
	DCD	0x0
	DCD	imagerel |$M36|
	DCD	0xffffffff
;	COMDAT .rdata
.rdata	SEGMENT
|__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z| DCD 0x19930522
	DCD	0x5
	DCD	imagerel |__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	DCD	0x1
	DCD	imagerel |__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	DCD	0xa
	DCD	imagerel |$ipstate4$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	DCD	0xffffffc8
	DCD	0x0
	DCD	0x1
|__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z| DCD 0xffffffff
	DCD	imagerel |__unwind$21|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0xffffffff
	DCD	imagerel |__std_terminate|
	DCD	0x3
	DCD	imagerel |__std_terminate|
|__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z| DCD 0x1
	DCD	0x1
	DCD	0x2
	DCD	0x1
	DCD	imagerel |__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$5|
|__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$5| DCD 0x40
	DCD	0x0
	DCD	0x0
	DCD	imagerel |__catch$20|
	%	4
|$ipstate4$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z| DCD imagerel |$M83|
	DCD	0xffffffff
	DCD	imagerel |$M84|
	DCD	0x0
	DCD	imagerel |$M85|
	DCD	0x1
	DCD	imagerel |$M86|
	DCD	0x0
	DCD	imagerel |$M87|
	DCD	0x3
	DCD	imagerel |$M88|
	DCD	0x4
	DCD	imagerel |$M89|
	DCD	0xffffffff
	DCD	imagerel |$M90|
	DCD	0x0
	DCD	imagerel |$M91|
	DCD	0x2
	DCD	imagerel |$M92|
	DCD	0x0
;	COMDAT .rdata
.rdata	SEGMENT
|__ehfuncinfo$??0Player@@QAA@H@Z| DCD 0x19930522
	DCD	0xd
	DCD	imagerel |__unwindtable$??0Player@@QAA@H@Z|
	DCD	0x0
	DCD	0x0
	DCD	0x1f
	DCD	imagerel |$ipstate3$??0Player@@QAA@H@Z|
	DCD	0xffffff88
	DCD	0x0
	DCD	0x1
|__unwindtable$??0Player@@QAA@H@Z| DCD 0xffffffff
	DCD	imagerel |__unwind$11|
	DCD	0x0
	DCD	imagerel |__unwind$12|
	DCD	0x1
	DCD	imagerel |__unwind$13|
	DCD	0x0
	DCD	imagerel |__unwind$13|
	DCD	0x3
	DCD	imagerel |__unwind$15|
	DCD	0x4
	DCD	imagerel |__unwind$16|
	DCD	0x3
	DCD	imagerel |__unwind$16|
	DCD	0x6
	DCD	imagerel |__unwind$18|
	DCD	0x7
	DCD	imagerel |__unwind$19|
	DCD	0x6
	DCD	imagerel |__unwind$19|
	DCD	0x9
	DCD	imagerel |__unwind$21|
	DCD	0xa
	DCD	imagerel |__unwind$22|
	DCD	0x9
	DCD	imagerel |__unwind$22|
|$ipstate3$??0Player@@QAA@H@Z| DCD imagerel |$M465|
	DCD	0xffffffff
	DCD	imagerel |$M466|
	DCD	0x0
	DCD	imagerel |$M467|
	DCD	0x1
	DCD	imagerel |$M468|
	DCD	0x2
	DCD	imagerel |$M469|
	DCD	0x3
	DCD	imagerel |$M470|
	DCD	0x4
	DCD	imagerel |$M471|
	DCD	0x5
	DCD	imagerel |$M472|
	DCD	0x6
	DCD	imagerel |$M473|
	DCD	0x7
	DCD	imagerel |$M474|
	DCD	0x8
	DCD	imagerel |$M475|
	DCD	0x9
	DCD	imagerel |$M476|
	DCD	0xa
	DCD	imagerel |$M477|
	DCD	0xb
	DCD	imagerel |$M478|
	DCD	0xc
	DCD	imagerel |$M479|
	DCD	0x9
	DCD	imagerel |$M480|
	DCD	0x0
	DCD	imagerel |$M481|
	DCD	0x9
	DCD	imagerel |$M482|
	DCD	0x0
	DCD	imagerel |$M483|
	DCD	0x9
	DCD	imagerel |$M484|
	DCD	0x6
	DCD	imagerel |$M485|
	DCD	0x0
	DCD	imagerel |$M486|
	DCD	0x6
	DCD	imagerel |$M487|
	DCD	0x0
	DCD	imagerel |$M488|
	DCD	0x6
	DCD	imagerel |$M489|
	DCD	0x3
	DCD	imagerel |$M490|
	DCD	0x0
	DCD	imagerel |$M491|
	DCD	0x3
	DCD	imagerel |$M492|
	DCD	0x0
	DCD	imagerel |$M493|
	DCD	0x3
	DCD	imagerel |$M494|
	DCD	0x0
	DCD	imagerel |$M495|
	DCD	0xffffffff
;	COMDAT .rdata
.rdata	SEGMENT
|__ehfuncinfo$??0Player@@QAA@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z| DCD 0x19930522
	DCD	0xd
	DCD	imagerel |__unwindtable$??0Player@@QAA@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z|
	DCD	0x0
	DCD	0x0
	DCD	0x20
	DCD	imagerel |$ipstate3$??0Player@@QAA@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z|
	DCD	0xffffff88
	DCD	0x0
	DCD	0x1
|__unwindtable$??0Player@@QAA@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z| DCD 0xffffffff
	DCD	imagerel |__unwind$11|
	DCD	0x0
	DCD	imagerel |__unwind$12|
	DCD	0x1
	DCD	imagerel |__unwind$13|
	DCD	0x0
	DCD	imagerel |__unwind$13|
	DCD	0x3
	DCD	imagerel |__unwind$15|
	DCD	0x4
	DCD	imagerel |__unwind$16|
	DCD	0x3
	DCD	imagerel |__unwind$16|
	DCD	0x6
	DCD	imagerel |__unwind$18|
	DCD	0x7
	DCD	imagerel |__unwind$19|
	DCD	0x6
	DCD	imagerel |__unwind$19|
	DCD	0x9
	DCD	imagerel |__unwind$21|
	DCD	0xa
	DCD	imagerel |__unwind$22|
	DCD	0x9
	DCD	imagerel |__unwind$22|
|$ipstate3$??0Player@@QAA@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z| DCD imagerel |$M454|
	DCD	0xffffffff
	DCD	imagerel |$M455|
	DCD	0x0
	DCD	imagerel |$M456|
	DCD	0x1
	DCD	imagerel |$M457|
	DCD	0x2
	DCD	imagerel |$M458|
	DCD	0x3
	DCD	imagerel |$M459|
	DCD	0x4
	DCD	imagerel |$M460|
	DCD	0x5
	DCD	imagerel |$M461|
	DCD	0x6
	DCD	imagerel |$M462|
	DCD	0x7
	DCD	imagerel |$M463|
	DCD	0x8
	DCD	imagerel |$M464|
	DCD	0x9
	DCD	imagerel |$M465|
	DCD	0xa
	DCD	imagerel |$M466|
	DCD	0xb
	DCD	imagerel |$M467|
	DCD	0xc
	DCD	imagerel |$M468|
	DCD	0x9
	DCD	imagerel |$M469|
	DCD	0x0
	DCD	imagerel |$M470|
	DCD	0x9
	DCD	imagerel |$M471|
	DCD	0x0
	DCD	imagerel |$M472|
	DCD	0x9
	DCD	imagerel |$M473|
	DCD	0x6
	DCD	imagerel |$M474|
	DCD	0x0
	DCD	imagerel |$M475|
	DCD	0x6
	DCD	imagerel |$M476|
	DCD	0x0
	DCD	imagerel |$M477|
	DCD	0x6
	DCD	imagerel |$M478|
	DCD	0x3
	DCD	imagerel |$M479|
	DCD	0x0
	DCD	imagerel |$M480|
	DCD	0x3
	DCD	imagerel |$M481|
	DCD	0x0
	DCD	imagerel |$M482|
	DCD	0x3
	DCD	imagerel |$M483|
	DCD	0x0
	DCD	imagerel |$M484|
	DCD	0xffffffff
	DCD	imagerel |$M485|
	DCD	0x0
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
;	COMDAT ??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z
.text$mn	SEGMENT

|??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z| PROC ; std::_Insert_string<char,std::char_traits<char>,unsigned int>

; 506  :     basic_ostream<_Elem, _Traits>& _Ostr, const _Elem* const _Data, const _SizeT _Size) {

|$M86|
	push        {r0-r3}
	push        {r4-r9,r11,lr}
	add         r11,sp,#0x18
	sub         sp,sp,#0x18
	mov         r7,sp
|$M98|
	mvn         r3,#1
	strd        r3,r3,[r7,#0x10]

; 507  :     // insert a character-type sequence into _Ostr as if through a basic_string copy
; 508  :     using _Ostr_t                    = basic_ostream<_Elem, _Traits>;
; 509  :     typename _Ostr_t::iostate _State = _Ostr_t::goodbit;
; 510  : 
; 511  :     _SizeT _Pad;
; 512  :     if (_Ostr.width() <= 0 || static_cast<_SizeT>(_Ostr.width()) <= _Size) {

	ldr         r3,[r0]
	mov         r8,r0
	str         r0,[r7,#0x38]
	ldr         r3,[r3,#4]
	movs        r6,#0
	mov         r9,r2
	add         r0,r0,r3
	ldrd        r2,r3,[r0,#0x20]
	mov         r4,r1
	str         r6,[r7]
	cmp         r3,#0
	blt         |$LN10@Insert_str|
	bgt         |$LN77@Insert_str|
	cbz         r2,|$LN10@Insert_str|
|$LN77@Insert_str|
	ldr         r3,[r0,#0x20]
	cmp         r3,r9
	bls         |$LN10@Insert_str|

; 514  :     } else {
; 515  :         _Pad = static_cast<_SizeT>(_Ostr.width()) - _Size;

	sub         r5,r3,r9
	b           |$LN9@Insert_str|
|$LN10@Insert_str|

; 513  :         _Pad = 0;

	movs        r5,#0
|$LN9@Insert_str|

; 516  :     }
; 517  : 
; 518  :     const typename _Ostr_t::sentry _Ok(_Ostr);

	adds        r0,r7,#8
	mov         r1,r8
	bl          |??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z|
|$M87|

; 519  : 
; 520  :     if (!_Ok) {

	ldrb        r3,[r7,#0xC]
	cmp         r3,#0
	beq         |$LN65@Insert_str|
|$M88|

; 522  :     } else { // state okay, insert characters
; 523  :         _TRY_IO_BEGIN
; 524  :         if ((_Ostr.flags() & _Ostr_t::adjustfield) != _Ostr_t::left) {

	ldr         r3,[r8]
	ldr         r3,[r3,#4]
	add         r3,r3,r8
	ldr         r3,[r3,#0x14]
	and         r3,r3,#0x1C0
	cmp         r3,#0x40
	beq         |$LN81@Insert_str|
|$LL4@Insert_str|

; 525  :             for (; 0 < _Pad; --_Pad) { // pad on left

	cbz         r5,|$LN81@Insert_str|

; 526  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	ldr         r3,[r8]
	ldr         r3,[r3,#4]
	add         r3,r3,r8
	ldrsb       r1,[r3,#0x40]
	ldr         r0,[r3,#0x38]
	movw        r3,|__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAAHD@Z|
	movt        r3,|__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAAHD@Z|
	ldr         r3,[r3]
	blx         r3

; 481  :         return _Left == _Right;

	cmn         r0,#1

; 526  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	bne         |$LN2@Insert_str|

; 527  :                     _State |= _Ostr_t::badbit; // insertion failed, quit

	movs        r6,#4
	str         r6,[r7]

; 528  :                     break;

	b           |$LN81@Insert_str|
|$LN2@Insert_str|

; 525  :             for (; 0 < _Pad; --_Pad) { // pad on left

	subs        r5,r5,#1
	b           |$LL4@Insert_str|
|$LN81@Insert_str|

; 529  :                 }
; 530  :             }
; 531  :         }
; 532  : 
; 533  :         if (_State == _Ostr_t::goodbit
; 534  :             && _Ostr.rdbuf()->sputn(_Data, static_cast<streamsize>(_Size)) != static_cast<streamsize>(_Size)) {

	cbnz        r6,|$LL83@Insert_str|
	ldr         r0,[r8]
	mov         r1,r4
	movw        r4,|__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAA_JPBD_J@Z|
	movt        r4,|__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAA_JPBD_J@Z|
	ldr         r0,[r0,#4]
	mov         r2,r9
	ldr         r4,[r4]
	add         r0,r0,r8
	ldr         r0,[r0,#0x38]
	movs        r3,#0
	blx         r4
	cmp         r0,r9
	bne         |$LN78@Insert_str|
	cbnz        r1,|$LN78@Insert_str|
|$LL83@Insert_str|

; 535  :             _State |= _Ostr_t::badbit;
; 536  :         } else {
; 537  :             for (; 0 < _Pad; --_Pad) { // pad on right

	cbz         r5,|$LN6@Insert_str|

; 538  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	ldr         r3,[r8]
	ldr         r3,[r3,#4]
	add         r3,r3,r8
	ldrsb       r1,[r3,#0x40]
	ldr         r0,[r3,#0x38]
	movw        r3,|__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAAHD@Z|
	movt        r3,|__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAAHD@Z|
	ldr         r3,[r3]
	blx         r3

; 481  :         return _Left == _Right;

	cmn         r0,#1

; 538  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	beq         |$LN78@Insert_str|

; 535  :             _State |= _Ostr_t::badbit;
; 536  :         } else {
; 537  :             for (; 0 < _Pad; --_Pad) { // pad on right

	subs        r5,r5,#1
	b           |$LL83@Insert_str|
|$LN24@Insert_str|
|$M89|

; 546  :         _CATCH_IO_(_Ostr_t, _Ostr)

	ldr         r8,[r7,#0x38]
	ldr         r6,[r7]
	b           |$LN23@Insert_str|
|$LN78@Insert_str|
|$M90|

; 545  :         _Ostr.width(0);

	movs        r6,#4
|$LN6@Insert_str|
|$M91|
	ldr         r3,[r8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xiosbase

; 364  :         _Wide                      = _Newwidth;

	movs        r2,#0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 545  :         _Ostr.width(0);

	ldr         r3,[r3,#4]
	add         r3,r3,r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xiosbase

; 364  :         _Wide                      = _Newwidth;

	strd        r2,r2,[r3,#0x20]
	b           |$LN23@Insert_str|
|$LN65@Insert_str|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 521  :         _State |= _Ostr_t::badbit;

	movs        r6,#4
|$LN23@Insert_str|

; 547  :     }
; 548  : 
; 549  :     _Ostr.setstate(_State);

	ldr         r3,[r8]
	movs        r2,#0
	mov         r1,r6
	ldr         r3,[r3,#4]
	add         r0,r3,r8
	movw        r3,|__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAAXH_N@Z|
	movt        r3,|__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAAXH_N@Z|
	ldr         r3,[r3]
	blx         r3
|$M92|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream

; 112  :             const bool _Zero_uncaught_exceptions = !_STD uncaught_exception(); // TRANSITION, ArchivedOS-12000909

	bl          |?uncaught_exception@std@@YA_NXZ|
	cbnz        r0,|$LN26@Insert_str|

; 113  : #else // ^^^ _HAS_DEPRECATED_UNCAUGHT_EXCEPTION / !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION vvv
; 114  :             const bool _Zero_uncaught_exceptions = _STD uncaught_exceptions() == 0;
; 115  : #endif // !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION
; 116  : 
; 117  :             if (_Zero_uncaught_exceptions) {
; 118  :                 this->_Myostr._Osfx();

	movw        r3,|__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAXXZ|
	movt        r3,|__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAXXZ|
	ldr         r0,[r7,#8]
	ldr         r3,[r3]
	blx         r3
|$LN26@Insert_str|
|$M93|

; 78   :             const auto _Rdbuf = _Myostr.rdbuf();

	ldr         r2,[r7,#8]
	ldr         r3,[r2]
	ldr         r3,[r3,#4]
	add         r3,r3,r2
	ldr         r3,[r3,#0x38]

; 79   :             if (_Rdbuf) {

	cbz         r3,|$LN32@Insert_str|

; 80   :                 _Rdbuf->_Unlock();

	mov         r0,r3
	ldr         r3,[r3]
	ldr         r3,[r3,#8]
	blx         r3
|$LN32@Insert_str|
|$M94|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 551  : }

	mov         r0,r8
|$M84|
	add         sp,sp,#0x18
	pop         {r4-r9,r11}
	ldr         pc,[sp],#0x14
|$M99|
;	COMDAT .text$x
.text$x	SEGMENT
|__catch$21|
|$M95|

; 546  :         _CATCH_IO_(_Ostr_t, _Ostr)

	push        {r4,lr}
|$M100|
|$M96|
	ldr         r0,[r7,#0x38]
	movs        r2,#1
	movs        r1,#4
	ldr         r3,[r0]
	ldr         r3,[r3,#4]
	add         r0,r0,r3
	movw        r3,|__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAAXH_N@Z|
	movt        r3,|__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAAXH_N@Z|
	ldr         r3,[r3]
	blx         r3
|$M97|
	movw        r0,|$LN24@Insert_str|
	movt        r0,|$LN24@Insert_str|
|$M85|
	pop         {r4,pc}
|$M101|
|__unwind$22|
|$M102|
	adds        r0,r7,#8
	b.w         |??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
|$M103|

	ENDP  ; |??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z|, std::_Insert_string<char,std::char_traits<char>,unsigned int>

; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
;	COMDAT ??$_Construct@$00PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAXQBDI@Z
.text$mn	SEGMENT

|??$_Construct@$00PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAXQBDI@Z| PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>

; 2729 :     _CONSTEXPR20 void _Construct(const _Char_or_ptr _Arg, _CRT_GUARDOVERFLOW const size_type _Count) {

	push        {r3-r8,r11,lr}
	add         r11,sp,#0x18
|$M33|
	mov         r5,r2

; 2730 :         auto& _My_data = _Mypair._Myval2;
; 2731 :         _STL_INTERNAL_CHECK(!_My_data._Large_string_engaged());
; 2732 : 
; 2733 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2734 :             _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Char_or_ptr, _Elem>);
; 2735 :         } else {
; 2736 :             _STL_INTERNAL_STATIC_ASSERT(_Is_elem_cptr<_Char_or_ptr>::value);
; 2737 :         }
; 2738 : 
; 2739 :         if (_Count > max_size()) {

	mvn         r4,#0x80000000
	cmp         r5,r4
	mov         r8,r1
	mov         r7,r0
	bhi         |$LN29@Construct|

; 2741 :         }
; 2742 : 
; 2743 :         auto& _Al       = _Getal();
; 2744 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2745 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2746 : 
; 2747 :         if (_Count < _BUF_SIZE) {

	cmp         r5,#0x10
	bcs         |$LN3@Construct|

; 2748 :             _My_data._Mysize = _Count;
; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF
	strd        r5,r3,[r7,#0x10]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	bl          memmove

; 2750 :             if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2751 :                 _Traits::assign(_My_data._Bx._Buf, _Count, _Arg);
; 2752 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());
; 2753 :             } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2754 :                 _Traits::move(_My_data._Bx._Buf, _Arg, _Count);
; 2755 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	movs        r3,#0
	strb        r3,[r5,r7]
|$M31|

; 2788 :         } else { // _Strat == _Construct_strategy::_From_string
; 2789 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count + 1);
; 2790 :         }
; 2791 : 
; 2792 :         _ASAN_STRING_CREATE(*this);
; 2793 :         _Proxy._Release();
; 2794 :     }

	pop         {r3-r8,r11,pc}
|$LN3@Construct|

; 2756 :             } else { // _Strat == _Construct_strategy::_From_string
; 2757 : #ifdef _INSERT_STRING_ANNOTATION
; 2758 :                 _Traits::move(_My_data._Bx._Buf, _Arg, _Count + 1);
; 2759 : #else // ^^^ _INSERT_STRING_ANNOTATION ^^^ // vvv !_INSERT_STRING_ANNOTATION vvv
; 2760 :                 _Traits::move(_My_data._Bx._Buf, _Arg, _BUF_SIZE);
; 2761 : #endif // !_INSERT_STRING_ANNOTATION
; 2762 :             }
; 2763 : 
; 2764 :             _ASAN_STRING_CREATE(*this);
; 2765 :             _Proxy._Release();
; 2766 :             return;
; 2767 :         }
; 2768 : 
; 2769 :         _My_data._Myres               = _BUF_SIZE - 1;

	movs        r3,#0xF

; 4886 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	orr         r1,r5,r3
	cmp         r1,r4

; 2756 :             } else { // _Strat == _Construct_strategy::_From_string
; 2757 : #ifdef _INSERT_STRING_ANNOTATION
; 2758 :                 _Traits::move(_My_data._Bx._Buf, _Arg, _Count + 1);
; 2759 : #else // ^^^ _INSERT_STRING_ANNOTATION ^^^ // vvv !_INSERT_STRING_ANNOTATION vvv
; 2760 :                 _Traits::move(_My_data._Bx._Buf, _Arg, _BUF_SIZE);
; 2761 : #endif // !_INSERT_STRING_ANNOTATION
; 2762 :             }
; 2763 : 
; 2764 :             _ASAN_STRING_CREATE(*this);
; 2765 :             _Proxy._Release();
; 2766 :             return;
; 2767 :         }
; 2768 : 
; 2769 :         _My_data._Myres               = _BUF_SIZE - 1;

	str         r3,[r7,#0x14]

; 4899 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

	mov         r2,r3

; 4887 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	bhi         |$LN16@Construct|

; 4888 :             return _Max;
; 4889 :         }
; 4890 : 
; 4891 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

	sub         r3,r4,r3,lsr #1
	cmp         r2,r3
	bhi         |$LN16@Construct|

; 4892 :             return _Max;
; 4893 :         }
; 4894 : 
; 4895 :         return (_STD max)(_Masked, _Old + _Old / 2);

	add         r4,r2,r2,lsr #1
	cmp         r1,r4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

	bcc         |$LN16@Construct|
	mov         r4,r1
|$LN16@Construct|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2771 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	adds        r0,r4,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 234  :     if (_Bytes != 0) {

	beq         |$LN20@Construct|

; 77   :         return ::operator new(_Bytes);

	bl          |??2@YAPAXI@Z|
	mov         r6,r0

; 235  :         return _Traits::_Allocate(_Bytes);

	b           |$LN19@Construct|
|$LN20@Construct|

; 236  :     }
; 237  : 
; 238  :     return nullptr;

	movs        r6,#0
|$LN19@Construct|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov         r2,r5
	mov         r1,r8
	mov         r0,r6

; 2772 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	str         r6,[r7]

; 2773 : 
; 2774 : #if _HAS_CXX20
; 2775 :         if (_STD is_constant_evaluated()) { // Begin the lifetimes of the objects before copying to avoid UB
; 2776 :             _Traits::assign(_Unfancy(_New_ptr), _New_capacity + 1, _Elem());
; 2777 :         }
; 2778 : #endif // _HAS_CXX20
; 2779 : 
; 2780 :         _My_data._Mysize = _Count;

	strd        r5,r4,[r7,#0x10]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	bl          memcpy

; 2781 :         _My_data._Myres  = _New_capacity;
; 2782 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2783 :             _Traits::assign(_Unfancy(_New_ptr), _Count, _Arg);
; 2784 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2785 :         } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2786 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count);
; 2787 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

	movs        r3,#0
	strb        r3,[r6,r5]
|$M32|

; 2788 :         } else { // _Strat == _Construct_strategy::_From_string
; 2789 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count + 1);
; 2790 :         }
; 2791 : 
; 2792 :         _ASAN_STRING_CREATE(*this);
; 2793 :         _Proxy._Release();
; 2794 :     }

	pop         {r3-r8,r11,pc}
|$LN29@Construct|

; 2740 :             _Xlen_string(); // result too long

	bl          |?_Xlen_string@std@@YAXXZ|
	__debugbreak
|$LN30@Construct|
|$LN27@Construct|
|$M34|

	ENDP  ; |??$_Construct@$00PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAXQBDI@Z|, std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>

; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ
.text$mn	SEGMENT

|??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry

; 108  :         __CLR_OR_THIS_CALL ~sentry() noexcept {

|$M15|
	push        {r2-r4,r7,r11,lr}
	add         r11,sp,#0x10
	mov         r7,sp
|$M18|
	mvn         r3,#1
	strd        r3,r3,[r7]
	mov         r4,r0

; 109  : #if !_HAS_EXCEPTIONS
; 110  :             const bool _Zero_uncaught_exceptions = true;
; 111  : #elif _HAS_DEPRECATED_UNCAUGHT_EXCEPTION
; 112  :             const bool _Zero_uncaught_exceptions = !_STD uncaught_exception(); // TRANSITION, ArchivedOS-12000909

	bl          |?uncaught_exception@std@@YA_NXZ|
	cbnz        r0,|$LN2@sentry|

; 113  : #else // ^^^ _HAS_DEPRECATED_UNCAUGHT_EXCEPTION / !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION vvv
; 114  :             const bool _Zero_uncaught_exceptions = _STD uncaught_exceptions() == 0;
; 115  : #endif // !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION
; 116  : 
; 117  :             if (_Zero_uncaught_exceptions) {
; 118  :                 this->_Myostr._Osfx();

	movw        r3,|__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAXXZ|
	movt        r3,|__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAXXZ|
	ldr         r0,[r4]
	ldr         r3,[r3]
	blx         r3
|$LN2@sentry|
|$M16|

; 78   :             const auto _Rdbuf = _Myostr.rdbuf();

	ldr         r2,[r4]
	ldr         r3,[r2]
	ldr         r3,[r3,#4]
	add         r3,r3,r2
	ldr         r3,[r3,#0x38]

; 79   :             if (_Rdbuf) {

	cbz         r3,|$LN13@sentry|

; 80   :                 _Rdbuf->_Unlock();

	mov         r0,r3
	ldr         r3,[r3]
	ldr         r3,[r3,#8]
	blx         r3
|$LN13@sentry|
|$M14|
|$M17|

; 119  :             }
; 120  :         }

	pop         {r2-r4,r7,r11,pc}
|$M19|

	ENDP  ; |??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|, std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry

; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ios
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z
.text$mn	SEGMENT

|??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z| PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry

; 91   :         explicit __CLR_OR_THIS_CALL sentry(basic_ostream& _Ostr) : _Sentry_base(_Ostr) {

|$M28|
	push        {r0,r1}
	push        {r1-r5,r7,r11,lr}
	add         r11,sp,#0x18
	mov         r7,sp
|$M31|
	mov         r4,r0
	mvn         r3,#1
	str         r4,[r7,#0x20]
	mov         r5,r1
	strd        r3,r3,[r7]

; 70   :         __CLR_OR_THIS_CALL _Sentry_base(basic_ostream& _Ostr) : _Myostr(_Ostr) { // lock the stream buffer, if there

	str         r5,[r4]

; 71   :             const auto _Rdbuf = _Myostr.rdbuf();

	ldr         r3,[r5]
	ldr         r3,[r3,#4]
	add         r3,r3,r5
	ldr         r3,[r3,#0x38]

; 72   :             if (_Rdbuf) {

	cbz         r3,|$LN8@sentry|

; 73   :                 _Rdbuf->_Lock();

	mov         r0,r3
	ldr         r3,[r3]
	ldr         r3,[r3,#4]
	blx         r3
|$LN8@sentry|
|$M29|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xiosbase

; 272  :         return _Mystate;

	ldr         r3,[r5]
	ldr         r3,[r3,#4]
	adds        r2,r3,r5

; 291  :         return rdstate() == ios_base::goodbit;

	ldr         r3,[r2,#0xC]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream

; 92   :             if (!_Ostr.good()) {

	cbz         r3,|$LN2@sentry|
|$LN22@sentry|

; 105  :         }

	movs        r3,#0
	b           |$LN26@sentry|
|$LN2@sentry|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ios

; 69   :         return _Tiestr;

	ldr         r0,[r2,#0x3C]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream

; 98   :             if (!_Tied || _Tied == &_Ostr) {

	cbz         r0,|$LN4@sentry|
	cmp         r0,r5
	beq         |$LN4@sentry|

; 99   :                 _Ok = true;
; 100  :                 return;
; 101  :             }
; 102  : 
; 103  :             _Tied->flush();

	movw        r3,|__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV12@XZ|
	movt        r3,|__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV12@XZ|
	ldr         r3,[r3]
	blx         r3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xiosbase

; 272  :         return _Mystate;

	ldr         r3,[r5]

; 291  :         return rdstate() == ios_base::goodbit;

	ldr         r3,[r3,#4]
	add         r3,r3,r5
	ldr         r3,[r3,#0xC]
	cmp         r3,#0
	bne         |$LN22@sentry|
|$LN4@sentry|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream

; 105  :         }

	movs        r3,#1
|$LN26@sentry|
	strb        r3,[r4,#4]
|$M30|
	mov         r0,r4
|$M27|
	pop         {r1-r5,r7,r11}
	ldr         pc,[sp],#0xC
|$M32|
;	COMDAT .text$x
.text$x	SEGMENT
|__unwind$6|
|$M33|
	ldr         r0,[r7,#0x20]
	b.w         |??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
|$M34|

	ENDP  ; |??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z|, std::basic_ostream<char,std::char_traits<char> >::sentry::sentry

; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ios
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ
.text$mn	SEGMENT

|??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ| PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base

; 77   :         __CLR_OR_THIS_CALL ~_Sentry_base() noexcept { // destroy after unlocking

|$M7|
	push        {r1-r3,r7,r11,lr}
	add         r11,sp,#0x10
	mov         r7,sp
|$M8|
	mvn         r3,#1
	strd        r3,r3,[r7]

; 78   :             const auto _Rdbuf = _Myostr.rdbuf();

	ldr         r2,[r0]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ios

; 79   :         return _Mystrbuf;

	ldr         r3,[r2]
	ldr         r3,[r3,#4]
	add         r3,r3,r2
	ldr         r3,[r3,#0x38]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream

; 79   :             if (_Rdbuf) {

	cbz         r3,|$LN2@Sentry_bas|

; 80   :                 _Rdbuf->_Unlock();

	mov         r0,r3
	ldr         r3,[r3]
	ldr         r3,[r3,#8]
	blx         r3
|$LN2@Sentry_bas|
|$M6|

; 81   :             }
; 82   :         }

	pop         {r1-r3,r7,r11,pc}
|$M9|

	ENDP  ; |??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|, std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base

; Function compile flags: /Ogtp
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
;	COMDAT main
.text$mn	SEGMENT

|main|	PROC

; 141  : {

|$M704|
	push        {r4-r11,lr}
	add         r11,sp,#0x1C
	vpush       {d8}
	bl          __security_push_cookie
	sub         sp,sp,#0x198
	mov         r7,sp
|$M800|
	mvn         r3,#1
	strd        r3,r3,[r7,#0x38]
	movs        r3,#0

; 142  : 	Player ps = Player(200); // This is an example of implicit conversion. It is converting an integer to a Player object.

	adds        r0,r7,#0x128
	movs        r1,#0xC8
	mov         r10,r3
	str         r3,[r7,#0x2C]
	bl          |??0Player@@QAA@H@Z|
|$M705|

; 143  : 	
; 144  : 	int a = 10;

	movs        r3,#0xA
	str         r3,[r7,#4]

; 145  : 	int* b = &a; // This is a pointer. It is a variable that stores the address of another variable.

	adds        r3,r7,#4
	str         r3,[r7,#8]

; 146  : 	int c = *b; // This is dereferencing. It is getting the value of the variable that the pointer is pointing to.
; 147  : 	int** d = &b; // This is a pointer to a pointer. It is a variable that stores the address of another pointer.

	adds        r3,r7,#8
	str         r3,[r7]

; 148  : 
; 149  : 	void* e = &a; // This is a void pointer. It is a pointer that can point to any type of variable.

	adds        r3,r7,#4
	str         r3,[r7,#0xC]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0
	strd        r3,r3,[r7,#0x40]
	strd        r3,r3,[r7,#0x48]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#6

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	movw        r2,|??_C@_06NPAAKFED@Player@|
	movt        r2,|??_C@_06NPAAKFED@Player@|

; 2748 :             _My_data._Mysize = _Count;

	str         r3,[r7,#0x50]

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF
	str         r3,[r7,#0x54]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	ldr         r3,[r2]
	str         r3,[r7,#0x40]
	ldrh        r3,[r2,#4]
	strh        r3,[r7,#0x44]

; 2755 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	movs        r3,#0
	strb        r3,[r7,#0x46]
|$M706|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 162  : 	const Player p = Player("Player"); // This is a constant object. It is an object that cannot be modified.

	adds        r1,r7,#0x40
	adds        r0,r7,#0xD0
	bl          |??0Player@@QAA@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z|
|$M707|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r2,[r7,#0x54]
	cmp         r2,#0x10
|$M708|
	it          cs
|$M709|
	movcs       r3,#1
|$M710|
	it          cc
|$M711|
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN603@main|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	ldr         r0,[r7,#0x40]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	adds        r1,r2,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	bl          |??3@YAXPAXI@Z|
|$LN603@main|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 166  : 	std::cout << "a: " << a << " " << &a << std::endl;

	movw        r4,|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	movt        r4,|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|

; 70   : 		m_count++;	// This is a mutable variable. It can be modified even if the object is a constant object.

	ldr         r3,[r7,#0x124]

; 166  : 	std::cout << "a: " << a << " " << &a << std::endl;

	movw        r1,|??_C@_03OBFJPEGB@a?3?5@|
	movt        r1,|??_C@_03OBFJPEGB@a?3?5@|
	ldr         r0,[r4]

; 70   : 		m_count++;	// This is a mutable variable. It can be modified even if the object is a constant object.

	adds        r3,r3,#1
	str         r3,[r7,#0x124]

; 166  : 	std::cout << "a: " << a << " " << &a << std::endl;

	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	ldr         r1,[r7,#4]
	ldr         r3,[r3]
	blx         r3
	movw        r1,|??_C@_01CLKCMJKC@?5@|
	movt        r1,|??_C@_01CLKCMJKC@?5@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	adds        r1,r7,#4
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 167  : 	std::cout << "b: " << b << " " << &b << " " << *b << std::endl;

	movw        r1,|??_C@_03PDOMFLIP@b?3?5@|
	movt        r1,|??_C@_03PDOMFLIP@b?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	ldr         r1,[r7,#8]
	ldr         r3,[r3]
	blx         r3
	movw        r1,|??_C@_01CLKCMJKC@?5@|
	movt        r1,|??_C@_01CLKCMJKC@?5@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	adds        r1,r7,#8
	ldr         r3,[r3]
	blx         r3
	movw        r1,|??_C@_01CLKCMJKC@?5@|
	movt        r1,|??_C@_01CLKCMJKC@?5@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	ldr         r3,[r7,#8]
	ldr         r1,[r3]
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 168  : 	std::cout << "c: " << c << std::endl;

	movw        r1,|??_C@_03ELFADMOK@c?3?5@|
	movt        r1,|??_C@_03ELFADMOK@c?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movs        r1,#0xA
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 169  : 	std::cout << "d: " << d << " " << &d << " " << *d << " " << **d << std::endl;

	movw        r1,|??_C@_03NGIHAEFD@d?3?5@|
	movt        r1,|??_C@_03NGIHAEFD@d?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	ldr         r1,[r7]
	ldr         r3,[r3]
	blx         r3
	movw        r1,|??_C@_01CLKCMJKC@?5@|
	movt        r1,|??_C@_01CLKCMJKC@?5@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	mov         r1,r7
	ldr         r3,[r3]
	blx         r3
	movw        r1,|??_C@_01CLKCMJKC@?5@|
	movt        r1,|??_C@_01CLKCMJKC@?5@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	ldr         r3,[r7]
	ldr         r1,[r3]
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	ldr         r3,[r3]
	blx         r3
	movw        r1,|??_C@_01CLKCMJKC@?5@|
	movt        r1,|??_C@_01CLKCMJKC@?5@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	ldr         r3,[r7]
	ldr         r3,[r3]
	ldr         r1,[r3]
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 170  : 	std::cout << "e: " << e << " " << &e << " " << *(int*)e << std::endl;

	movw        r1,|??_C@_03GODLGDDG@e?3?5@|
	movt        r1,|??_C@_03GODLGDDG@e?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	ldr         r1,[r7,#0xC]
	ldr         r3,[r3]
	blx         r3
	movw        r1,|??_C@_01CLKCMJKC@?5@|
	movt        r1,|??_C@_01CLKCMJKC@?5@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	adds        r1,r7,#0xC
	ldr         r3,[r3]
	blx         r3
	movw        r1,|??_C@_01CLKCMJKC@?5@|
	movt        r1,|??_C@_01CLKCMJKC@?5@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	ldr         r3,[r7,#0xC]
	ldr         r1,[r3]
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 171  : 	std::cout << "f: " << f << std::endl;

	movw        r1,|??_C@_03HMIOMMNI@f?3?5@|
	movt        r1,|??_C@_03HMIOMMNI@f?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movs        r1,#0xA
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 172  : 	std::cout << "g: " << g << std::endl;

	movw        r1,|??_C@_03MEDCKLLN@g?3?5@|
	movt        r1,|??_C@_03MEDCKLLN@g?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movs        r1,#0xA
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 135  : 		++(*pint);

	ldr         r3,[r7,#4]

; 173  : 
; 174  : 	// increase a by 1
; 175  : 	Increase(&a, sizeof(a));
; 176  : 	std::cout << "a: " << a << std::endl;

	movw        r1,|??_C@_03OBFJPEGB@a?3?5@|
	movt        r1,|??_C@_03OBFJPEGB@a?3?5@|
	ldr         r0,[r4]

; 135  : 		++(*pint);

	adds        r3,r3,#1
	str         r3,[r7,#4]

; 173  : 
; 174  : 	// increase a by 1
; 175  : 	Increase(&a, sizeof(a));
; 176  : 	std::cout << "a: " << a << std::endl;

	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	ldr         r1,[r7,#4]
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 177  : 	// print variables again
; 178  : 	std::cout << "b: " << b << " " << &b << " " << *b << std::endl;

	movw        r1,|??_C@_03PDOMFLIP@b?3?5@|
	movt        r1,|??_C@_03PDOMFLIP@b?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	ldr         r1,[r7,#8]
	ldr         r3,[r3]
	blx         r3
	movw        r1,|??_C@_01CLKCMJKC@?5@|
	movt        r1,|??_C@_01CLKCMJKC@?5@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	adds        r1,r7,#8
	ldr         r3,[r3]
	blx         r3
	movw        r1,|??_C@_01CLKCMJKC@?5@|
	movt        r1,|??_C@_01CLKCMJKC@?5@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	ldr         r3,[r7,#8]
	ldr         r1,[r3]
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 179  : 	std::cout << "c: " << c << std::endl;

	movw        r1,|??_C@_03ELFADMOK@c?3?5@|
	movt        r1,|??_C@_03ELFADMOK@c?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movs        r1,#0xA
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 180  : 	std::cout << "d: " << d << " " << &d << " " << *d << " " << **d << std::endl;

	movw        r1,|??_C@_03NGIHAEFD@d?3?5@|
	movt        r1,|??_C@_03NGIHAEFD@d?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	ldr         r1,[r7]
	ldr         r3,[r3]
	blx         r3
	movw        r1,|??_C@_01CLKCMJKC@?5@|
	movt        r1,|??_C@_01CLKCMJKC@?5@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	mov         r1,r7
	ldr         r3,[r3]
	blx         r3
	movw        r1,|??_C@_01CLKCMJKC@?5@|
	movt        r1,|??_C@_01CLKCMJKC@?5@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	ldr         r3,[r7]
	ldr         r1,[r3]
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	ldr         r3,[r3]
	blx         r3
	movw        r1,|??_C@_01CLKCMJKC@?5@|
	movt        r1,|??_C@_01CLKCMJKC@?5@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	ldr         r3,[r7]
	ldr         r3,[r3]
	ldr         r1,[r3]
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 181  : 	std::cout << "e: " << e << " " << &e << " " << *(int*)e << std::endl;

	movw        r1,|??_C@_03GODLGDDG@e?3?5@|
	movt        r1,|??_C@_03GODLGDDG@e?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	ldr         r1,[r7,#0xC]
	ldr         r3,[r3]
	blx         r3
	movw        r1,|??_C@_01CLKCMJKC@?5@|
	movt        r1,|??_C@_01CLKCMJKC@?5@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	adds        r1,r7,#0xC
	ldr         r3,[r3]
	blx         r3
	movw        r1,|??_C@_01CLKCMJKC@?5@|
	movt        r1,|??_C@_01CLKCMJKC@?5@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	ldr         r3,[r7,#0xC]
	ldr         r1,[r3]
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 182  : 	std::cout << "f: " << f << std::endl;

	movw        r1,|??_C@_03HMIOMMNI@f?3?5@|
	movt        r1,|??_C@_03HMIOMMNI@f?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movs        r1,#0xA
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 183  : 	std::cout << "g: " << g << std::endl;

	movw        r1,|??_C@_03MEDCKLLN@g?3?5@|
	movt        r1,|??_C@_03MEDCKLLN@g?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movs        r1,#0xA
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 184  : 
; 185  : 	// Create a list of pointers to entities, initialize it with a player and an entity.
; 186  : 	Printable* entities[2];
; 187  : 	entities[0] = new Entity();

	movs        r0,#0x10
	bl          |??2@YAPAXI@Z|
	cbz         r0,|$LN19@main|
	vldr        s0,|$LN699@main|			; 0
	movs        r3,#0
	strd        r3,r3,[r0]
	strd        r3,r3,[r0,#8]
	movw        r3,|??_7Entity@@6B@|
	movt        r3,|??_7Entity@@6B@|
	vstr        s0,[r0,#4]
	vstr        s0,[r0,#8]
	vmov.f32    s0,#1
	str         r3,[r0]
	vstr        s0,[r0,#0xC]
	b           |$LN20@main|
|$LN700@main|
|$M701|
|$M712|
	__debugbreak
|$LN698@main|
|$LN699@main|
	DCD         0x0
|$LN19@main|
|$M713|
	movs        r0,#0
|$LN20@main|
	str         r0,[r7,#0x188]

; 188  : 	entities[1] = new Player("Cherno");

	movs        r0,#0x58
	bl          |??2@YAPAXI@Z|
	str         r0,[r7,#0x30]
|$M714|
	movw        r9,|??_C@_06MDBPMDDK@Cherno@|
	movt        r9,|??_C@_06MDBPMDDK@Cherno@|
	cbz         r0,|$LN21@main|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0
	strd        r3,r3,[r7,#0x40]
	strd        r3,r3,[r7,#0x48]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#6
	str         r3,[r7,#0x50]

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF
	str         r3,[r7,#0x54]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	ldr         r3,[r9]
	str         r3,[r7,#0x40]
	ldrh        r3,[r9,#4]
	strh        r3,[r7,#0x44]

; 2755 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	movs        r3,#0
	strb        r3,[r7,#0x46]
|$M715|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 188  : 	entities[1] = new Player("Cherno");

	mov         r10,#1
	adds        r1,r7,#0x40
	str         r10,[r7,#0x2C]
	bl          |??0Player@@QAA@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z|
	mov         r5,r0
	b           |$LN22@main|
|$LN21@main|
	movs        r5,#0
|$LN22@main|
|$M716|
	str         r5,[r7,#0x18C]
|$M717|
	tst         r10,#1
	beq         |$LN662@main|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r2,[r7,#0x54]
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 188  : 	entities[1] = new Player("Cherno");

	mov         r10,#0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	cmp         r2,#0x10
|$M718|
	it          cs
|$M719|
	movcs       r3,#1
|$M720|
	it          cc
|$M721|
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN662@main|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	ldr         r0,[r7,#0x40]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	adds        r1,r2,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	bl          |??3@YAXPAXI@Z|
|$LN662@main|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 192  : 	for (int i = 0; i < 2; i++) {

	adds        r6,r7,#0x188
	mov         r8,#2
|$LL4@main|

; 193  : 		PrintName(entities[i]);

	ldr         r0,[r6],#4
	bl          |?PrintName@@YAXPBVPrintable@@@Z|
	subs        r8,r8,#1
	bne         |$LL4@main|

; 194  : 	}
; 195  : 
; 196  : 	// add potion item to player
; 197  : 	Player* const player = (Player*) entities[1];
; 198  : 	player->SetItem(4, new Item("Potion"));

	movs        r0,#0x20
	bl          |??2@YAPAXI@Z|
	mov         r6,r0
	str         r6,[r7,#0x30]
|$M722|
	movs        r1,#2
	mov         r8,#5
	cbz         r6,|$LN23@main|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0
	strd        r3,r3,[r7,#0x40]
	strd        r3,r3,[r7,#0x48]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#6

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	movw        r2,|??_C@_06EKGNEAAL@Potion@|
	movt        r2,|??_C@_06EKGNEAAL@Potion@|

; 2748 :             _My_data._Mysize = _Count;

	str         r3,[r7,#0x50]

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF
	str         r3,[r7,#0x54]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	ldr         r3,[r2]
	str         r3,[r7,#0x40]
	ldrh        r3,[r2,#4]
	strh        r3,[r7,#0x44]

; 2755 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	movs        r3,#0
	strb        r3,[r7,#0x46]
|$M723|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 45   : 	Item(const std::string& name) : m_name(name) {}

	movw        r3,|??_7Item@@6B@|
	movt        r3,|??_7Item@@6B@|

; 194  : 	}
; 195  : 
; 196  : 	// add potion item to player
; 197  : 	Player* const player = (Player*) entities[1];
; 198  : 	player->SetItem(4, new Item("Potion"));

	orr         r10,r10,r1

; 45   : 	Item(const std::string& name) : m_name(name) {}

	adds        r1,r7,#0x40
	adds        r0,r6,#4
	str         r3,[r6]

; 194  : 	}
; 195  : 
; 196  : 	// add potion item to player
; 197  : 	Player* const player = (Player*) entities[1];
; 198  : 	player->SetItem(4, new Item("Potion"));

	str         r10,[r7,#0x2C]

; 45   : 	Item(const std::string& name) : m_name(name) {}

	bl          |??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@ABV01@@Z|

; 43   : 	Class m_itemClass = Class::CLASS_DEFAULT;

	strh        r8,[r6,#0x1C]

; 194  : 	}
; 195  : 
; 196  : 	// add potion item to player
; 197  : 	Player* const player = (Player*) entities[1];
; 198  : 	player->SetItem(4, new Item("Potion"));

	movs        r1,#2
	b           |$LN24@main|
|$LN23@main|
	movs        r6,#0
|$LN24@main|
|$M724|

; 67   : 	void SetItem(int index, Item* item) { items[index] = item; }

	str         r6,[r5,#0x3C]
|$M725|

; 194  : 	}
; 195  : 
; 196  : 	// add potion item to player
; 197  : 	Player* const player = (Player*) entities[1];
; 198  : 	player->SetItem(4, new Item("Potion"));

	tst         r10,r1
	beq         |$LN513@main|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r2,[r7,#0x54]
	cmp         r2,#0x10
|$M726|
	it          cs
|$M727|
	movcs       r3,#1
|$M728|
	it          cc
|$M729|
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN513@main|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	ldr         r0,[r7,#0x40]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	adds        r1,r2,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	bl          |??3@YAXPAXI@Z|
|$LN513@main|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 70   : 		m_count++;	// This is a mutable variable. It can be modified even if the object is a constant object.

	ldr         r3,[r5,#0x54]

; 202  : 	std::cout << "Inventory of " << player->GetName() << std::endl;

	movw        r1,|??_C@_0O@JIGAJEGO@Inventory?5of?5@|
	movt        r1,|??_C@_0O@JIGAJEGO@Inventory?5of?5@|

; 70   : 		m_count++;	// This is a mutable variable. It can be modified even if the object is a constant object.

	adds        r3,r3,#1
	str         r3,[r5,#0x54]

; 202  : 	std::cout << "Inventory of " << player->GetName() << std::endl;

	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r3,[r5,#0x24]

; 2291 :         const value_type* _Result = _Bx._Buf;

	add         r1,r5,#0x10

; 2300 :         return _BUF_SIZE <= _Myres;

	cmp         r3,#0x10
|$M730|
	it          cs
|$M731|
	movcs       r3,#1
|$M732|
	it          cc
|$M733|
	movcc       r3,#0

; 2292 :         if (_Large_string_engaged()) {

	cbz         r3,|$LN485@main|

; 2293 :             _Result = _Unfancy(_Bx._Ptr);

	ldr         r1,[r5,#0x10]
|$LN485@main|

; 5368 :     return _Insert_string(_Ostr, _Str.data(), _Str.size());

	ldr         r2,[r5,#0x20]
	bl          |??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 202  : 	std::cout << "Inventory of " << player->GetName() << std::endl;

	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5368 :     return _Insert_string(_Ostr, _Str.data(), _Str.size());

	movs        r6,#5
|$LL7@main|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 204  : 		PrintName(player->GetItem(i));

	ldr         r0,[r5,#0x2C]
	bl          |?PrintName@@YAXPBVPrintable@@@Z|
	adds        r5,r5,#4
	subs        r6,r6,#1
	bne         |$LL7@main|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0
	strd        r3,r3,[r7,#0x40]
	strd        r3,r3,[r7,#0x48]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#6

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	movw        r2,|??_C@_06KBCHOIMA@Entity@|
	movt        r2,|??_C@_06KBCHOIMA@Entity@|

; 2748 :             _My_data._Mysize = _Count;

	str         r3,[r7,#0x50]

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF
	str         r3,[r7,#0x54]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	ldr         r3,[r2]
	str         r3,[r7,#0x40]
	ldrh        r3,[r2,#4]
	strh        r3,[r7,#0x44]

; 2755 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	movs        r3,#0
	strb        r3,[r7,#0x46]
|$M734|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 209  : 	std::cout << entity->GetName() << std::endl;

	ldr         r0,[r4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5368 :     return _Insert_string(_Ostr, _Str.data(), _Str.size());

	adds        r1,r7,#0x40
	movs        r2,#6
	bl          |??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 209  : 	std::cout << entity->GetName() << std::endl;

	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3
|$M735|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r2,[r7,#0x54]
	cmp         r2,#0x10
|$M736|
	it          cs
|$M737|
	movcs       r3,#1
|$M738|
	it          cc
|$M739|
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN423@main|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	ldr         r0,[r7,#0x40]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	adds        r1,r2,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	bl          |??3@YAXPAXI@Z|
|$LN423@main|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5022 :         _My_data._Mysize = 0;

	adds        r5,r7,#0x188
	movs        r6,#2
|$LL10@main|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 213  : 		delete entities[i];

	ldr         r0,[r5],#4
	movs        r1,#4
	bl          |??3@YAXPAXI@Z|
	subs        r6,r6,#1
	bne         |$LL10@main|

; 214  : 	}
; 215  : 
; 216  : 	char name[] = "Cherno"; // This is a string literal. It is a string that is stored in the executable. It is not stored in the heap.

	ldr         r3,[r9]

; 217  : 	std::cout << name << std::endl; // This prints the string literal.

	ldr         r0,[r4]
	adds        r1,r7,#0x180
	str         r3,[r7,#0x180]
	ldrh        r3,[r9,#4]
	strh        r3,[r7,#0x184]
	ldrb        r3,[r9,#6]
	strb        r3,[r7,#0x186]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 218  : 	name[0] = 'P'; // This changes the first character of the string literal to a 'P'. This is not recommended. It is better to use a std::string.
; 219  : 	std::cout << name << std::endl;

	ldr         r0,[r4]
	movs        r3,#0x50
	adds        r1,r7,#0x180
	strb        r3,[r7,#0x180]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 220  : 
; 221  : 	const char* name2 = (char*)"hello"; // This is a string literal. It is a string that is stored in the executable. It is not stored in the heap.
; 222  : 	std::cout << name2 << std::endl;

	movw        r1,|??_C@_05CJBACGMB@hello@|
	movt        r1,|??_C@_05CJBACGMB@hello@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0
	strd        r3,r3,[r7,#0x88]
	strd        r3,r3,[r7,#0x90]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#6
	str         r3,[r7,#0x98]

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF
	str         r3,[r7,#0x9C]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	ldr         r3,[r9]
	str         r3,[r7,#0x88]
	ldrh        r3,[r9,#4]
	strh        r3,[r7,#0x8C]

; 2755 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	movs        r3,#0
	strb        r3,[r7,#0x8E]
|$M740|

; 3445 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	movw        r1,|??_C@_06MNKPGELG@?5Hello@|
	movt        r1,|??_C@_06MNKPGELG@?5Hello@|
	adds        r0,r7,#0x88
	movs        r2,#6
	bl          |?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAAAAV12@QBDI@Z|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 227  : 	bool contains = name3.find("Hello") != std::string::npos; // This checks if the string contains the substring "Hello".

	movw        r5,|??_C@_05COLMCDPH@Hello@|
	movt        r5,|??_C@_05COLMCDPH@Hello@|
	adds        r0,r7,#0x88
	movs        r2,#0
	mov         r1,r5
	bl          |?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBAIQBDI@Z|

; 228  : 	std::cout << contains << std::endl;

	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@_N@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@_N@Z|
	cmp         r0,#0xFFFFFFFF
	ldr         r0,[r4]
	ldr         r3,[r3]
|$M741|
	it          ne
|$M742|
	movne       r1,#1
|$M743|
	it          eq
|$M744|
	moveq       r1,#0
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 229  : 	contains = name3.find("Hi") != std::string::npos; // This checks if the string contains the substring "Hello".

	movw        r1,|??_C@_02MKAICKHL@Hi@|
	movt        r1,|??_C@_02MKAICKHL@Hi@|
	adds        r0,r7,#0x88
	movs        r2,#0
	bl          |?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBAIQBDI@Z|

; 230  : 	std::cout << contains << std::endl;

	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@_N@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@_N@Z|
	cmp         r0,#0xFFFFFFFF
	ldr         r0,[r4]
	ldr         r3,[r3]
|$M745|
	it          ne
|$M746|
	movne       r1,#1
|$M747|
	it          eq
|$M748|
	moveq       r1,#0
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 231  : 
; 232  : 	const char luxSolari[11] = "Lux\0Solari";

	movw        r1,|??_C@_0L@MELMMCHF@Lux?$AASolari@|
	movt        r1,|??_C@_0L@MELMMCHF@Lux?$AASolari@|
	adds        r0,r7,#0x188
	ldm         r1,{r2,r3}
	stm         r0,{r2,r3}
	ldrh        r3,[r1,#8]
	strh        r3,[r0,#8]
	ldrb        r3,[r1,#0xA]
	strb        r3,[r0,#0xA]

; 233  : 
; 234  : 	std::cout << strlen(luxSolari) << std::endl; // This prints the length of the string. It does not include the null terminator. It prints 3. It should print 10.

	adds        r0,r7,#0x188
	bl          strlen
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	mov         r1,r0
	ldr         r0,[r4]
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 235  : 	// This is because the first null terminator is not counted. And the strlen function stops counting when it reaches the null terminator.
; 236  : 
; 237  : 	std::cout << sizeof(luxSolari) << std::endl; // This prints the size of the array. It includes the null terminator. It prints 11.

	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	ldr         r0,[r4]
	movs        r1,#0xB
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0
	strd        r3,r3,[r7,#0x40]
	strd        r3,r3,[r7,#0x48]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#6
	str         r3,[r7,#0x50]

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF
	str         r3,[r7,#0x54]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	ldr         r3,[r9]
	str         r3,[r7,#0x40]
	ldrh        r3,[r9,#4]
	strh        r3,[r7,#0x44]

; 2755 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	movs        r3,#0
	strb        r3,[r7,#0x46]
|$M749|

; 3445 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	adds        r0,r7,#0x40
	movs        r2,#5
	mov         r1,r5
	bl          |?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAAAAV12@QBDI@Z|

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0
	strd        r3,r3,[r7,#0x70]
	strd        r3,r3,[r7,#0x78]

; 2348 :     size_type _Mysize = 0; // current length of string

	strd        r3,r3,[r7,#0x80]

; 3139 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	ldr         r3,[r0]

; 5001 :         _My_data._Mysize = 0;

	movs        r2,#0

; 3139 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	str         r3,[r7,#0x70]
	ldr         r3,[r0,#4]
	str         r3,[r7,#0x74]
	ldr         r3,[r0,#8]
	str         r3,[r7,#0x78]
	ldr         r3,[r0,#0xC]
	str         r3,[r7,#0x7C]
	ldr         r3,[r0,#0x10]
	str         r3,[r7,#0x80]
	ldr         r3,[r0,#0x14]
	str         r3,[r7,#0x84]

; 5002 :         _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF
	strd        r2,r3,[r0,#0x10]

; 5003 :         _My_data._Activate_SSO_buffer();
; 5004 : 
; 5005 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5006 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	strb        r2,[r0]
|$M750|

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r2,[r7,#0x54]
	cmp         r2,#0x10
|$M751|
	it          cs
|$M752|
	movcs       r3,#1
|$M753|
	it          cc
|$M754|
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN226@main|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	ldr         r0,[r7,#0x40]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	adds        r1,r2,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	bl          |??3@YAXPAXI@Z|
|$LN226@main|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5022 :         _My_data._Mysize = 0;

	movs        r3,#0
	str         r3,[r7,#0x50]

; 5023 :         _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF
	str         r3,[r7,#0x54]

; 5024 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5025 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	movs        r3,#0
	strb        r3,[r7,#0x40]

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	strd        r3,r3,[r7,#0xB8]
	strd        r3,r3,[r7,#0xC0]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#3

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	movw        r2,|??_C@_03KAHMICP@asd@|
	movt        r2,|??_C@_03KAHMICP@asd@|

; 2748 :             _My_data._Mysize = _Count;

	str         r3,[r7,#0xC8]

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF
	str         r3,[r7,#0xCC]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	ldrh        r3,[r2]
	strh        r3,[r7,#0xB8]
	ldrb        r3,[r2,#2]
	strb        r3,[r7,#0xBA]

; 2755 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	movs        r3,#0
	strb        r3,[r7,#0xBB]
|$M755|

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	strd        r3,r3,[r7,#0xA0]
	strd        r3,r3,[r7,#0xA8]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#5
	str         r3,[r7,#0xB0]

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF
	str         r3,[r7,#0xB4]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	ldr         r3,[r5]
	str         r3,[r7,#0xA0]
	ldrb        r3,[r5,#4]
	strb        r3,[r7,#0xA4]

; 2755 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	movs        r3,#0
	strb        r3,[r7,#0xA5]
|$M756|

; 5161 :     return {_String_constructor_concat_tag{}, _Left, _Right};

	ldrb        r1,[r7,#0x10]
	adds        r3,r7,#0xB8
	adds        r2,r7,#0xA0
	adds        r0,r7,#0x58
	bl          |??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@U_String_constructor_concat_tag@1@AAV01@1@Z|
|$M757|

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r3,[r7,#0x6C]

; 2291 :         const value_type* _Result = _Bx._Buf;

	adds        r1,r7,#0x58

; 2300 :         return _BUF_SIZE <= _Myres;

	cmp         r3,#0x10
|$M758|
	it          cs
|$M759|
	movcs       r3,#1
|$M760|
	it          cc
|$M761|
	movcc       r3,#0

; 2292 :         if (_Large_string_engaged()) {

	cbz         r3,|$LN277@main|

; 2293 :             _Result = _Unfancy(_Bx._Ptr);

	ldr         r1,[r7,#0x58]
|$LN277@main|

; 3394 :         return append(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	ldr         r2,[r7,#0x68]
	adds        r0,r7,#0x70
	bl          |?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAAAAV12@QBDI@Z|
|$M762|

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r2,[r7,#0x6C]
	cmp         r2,#0x10
|$M763|
	it          cs
|$M764|
	movcs       r3,#1
|$M765|
	it          cc
|$M766|
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN296@main|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	ldr         r0,[r7,#0x58]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	adds        r1,r2,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	bl          |??3@YAXPAXI@Z|
|$LN296@main|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5022 :         _My_data._Mysize = 0;

	movs        r3,#0
	str         r3,[r7,#0x68]

; 5023 :         _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF
	str         r3,[r7,#0x6C]

; 5024 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5025 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	movs        r3,#0
	strb        r3,[r7,#0x58]
|$M767|

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r2,[r7,#0xB4]
	cmp         r2,#0x10
|$M768|
	it          cs
|$M769|
	movcs       r3,#1
|$M770|
	it          cc
|$M771|
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN310@main|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	ldr         r0,[r7,#0xA0]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	adds        r1,r2,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	bl          |??3@YAXPAXI@Z|
|$LN310@main|
|$M772|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r2,[r7,#0xCC]
	cmp         r2,#0x10
|$M773|
	it          cs
|$M774|
	movcs       r3,#1
|$M775|
	it          cc
|$M776|
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN324@main|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	ldr         r0,[r7,#0xB8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	adds        r1,r2,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	bl          |??3@YAXPAXI@Z|
|$LN324@main|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 253  : 	std::cout << name5 << std::endl;

	movw        r1,|??_C@_0DN@KBNPIBEN@?6?7Cherno?0?5asd?5asd?5ad?6?7asdasdasd@|
	movt        r1,|??_C@_0DN@KBNPIBEN@?6?7Cherno?0?5asd?5asd?5ad?6?7asdasdasd@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 254  : 
; 255  : 	// Print type sizes
; 256  : 	std::cout << "Size of char: " << sizeof(char) << std::endl;

	movw        r1,|??_C@_0P@FCIDOAJD@Size?5of?5char?3?5@|
	movt        r1,|??_C@_0P@FCIDOAJD@Size?5of?5char?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movs        r1,#1
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 257  : 	std::cout << "Size of wchar_t: " << sizeof(wchar_t) << std::endl;

	movw        r1,|??_C@_0BC@PAFPIJIK@Size?5of?5wchar_t?3?5@|
	movt        r1,|??_C@_0BC@PAFPIJIK@Size?5of?5wchar_t?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movs        r1,#2
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 258  : 	std::cout << "Size of char16_t: " << sizeof(char16_t) << std::endl;

	movw        r1,|??_C@_0BD@KGDCPLPD@Size?5of?5char16_t?3?5@|
	movt        r1,|??_C@_0BD@KGDCPLPD@Size?5of?5char16_t?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movs        r1,#2
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 259  : 	std::cout << "Size of char32_t: " << sizeof(char32_t) << std::endl;

	movw        r1,|??_C@_0BD@KKDMKIMM@Size?5of?5char32_t?3?5@|
	movt        r1,|??_C@_0BD@KKDMKIMM@Size?5of?5char32_t?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movs        r1,#4
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 260  : 	std::cout << "Size of int: " << sizeof(int) << std::endl;

	movw        r1,|??_C@_0O@FHNENCLD@Size?5of?5int?3?5@|
	movt        r1,|??_C@_0O@FHNENCLD@Size?5of?5int?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movs        r1,#4
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 261  : 	std::cout << "Size of short: " << sizeof(short) << std::endl;

	movw        r1,|??_C@_0BA@NABLDMEP@Size?5of?5short?3?5@|
	movt        r1,|??_C@_0BA@NABLDMEP@Size?5of?5short?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movs        r1,#2
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 262  : 	std::cout << "Size of long: " << sizeof(long) << std::endl;

	movw        r1,|??_C@_0P@FMFJJALO@Size?5of?5long?3?5@|
	movt        r1,|??_C@_0P@FMFJJALO@Size?5of?5long?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movs        r1,#4
	ldr         r3,[r3]
	blx         r3
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	ldr         r3,[r3]
	blx         r3

; 263  : 	std::cout << "Size of long long: " << sizeof(long long) << std::endl;

	movw        r1,|??_C@_0BE@MMCNJNKF@Size?5of?5long?5long?3?5@|
	movt        r1,|??_C@_0BE@MMCNJNKF@Size?5of?5long?5long?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movs        r1,#8
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 264  : 	std::cout << "Size of float: " << sizeof(float) << std::endl;

	movw        r1,|??_C@_0BA@DHEPMKEB@Size?5of?5float?3?5@|
	movt        r1,|??_C@_0BA@DHEPMKEB@Size?5of?5float?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movs        r1,#4
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 265  : 	std::cout << "Size of double: " << sizeof(double) << std::endl;

	movw        r1,|??_C@_0BB@KDGEGBDE@Size?5of?5double?3?5@|
	movt        r1,|??_C@_0BB@KDGEGBDE@Size?5of?5double?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movs        r1,#8
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 266  : 	std::cout << "Size of long double: " << sizeof(long double) << std::endl;

	movw        r1,|??_C@_0BG@HEODEGGH@Size?5of?5long?5double?3?5@|
	movt        r1,|??_C@_0BG@HEODEGGH@Size?5of?5long?5double?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movs        r1,#8
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 267  : 	std::cout << "Size of bool: " << sizeof(bool) << std::endl;

	movw        r1,|??_C@_0P@OGAHEFFC@Size?5of?5bool?3?5@|
	movt        r1,|??_C@_0P@OGAHEFFC@Size?5of?5bool?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movs        r1,#1
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 268  : 	std::cout << "Size of void*: " << sizeof(void*) << std::endl;

	movw        r1,|??_C@_0BA@EPHHPFAL@Size?5of?5void?$CK?3?5@|
	movt        r1,|??_C@_0BA@EPHHPFAL@Size?5of?5void?$CK?3?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@I@Z|
	movs        r1,#4
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3
	movw        r6,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movt        r6,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5022 :         _My_data._Mysize = 0;

	movs        r5,#0
	mov         r9,#1
|$LL13@main|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 276  : 		std::cout << ((flags & (1 << i)) ? 1 : 0);

	lsl         r3,r9,r5
	ldr         r0,[r4]
	tst         r3,r8
	ldr         r3,[r6]
|$M777|
	it          ne
|$M778|
	movne       r1,#1
|$M779|
	it          eq
|$M780|
	moveq       r1,#0
	blx         r3
	adds        r5,r5,#1
	cmp         r5,#8
	blt         |$LL13@main|

; 277  : 	}
; 278  : 	std::cout << std::endl;

	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r0,[r4]
	ldr         r3,[r3]
	blx         r3
	movw        r6,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movt        r6,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movw        r8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r8,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movs        r5,#0
	mov         r10,#1
	mov         r9,#5
|$LL16@main|

; 281  : 		if (flags & (1 << i)) {

	lsl         r3,r10,r5
	tst         r3,r9
	beq         |$LN14@main|

; 282  : 			std::cout << "Bit " << i << " is set!" << std::endl;

	movw        r1,|??_C@_04JLLMFPGM@Bit?5@|
	movt        r1,|??_C@_04JLLMFPGM@Bit?5@|
	ldr         r0,[r4]
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	ldr         r3,[r6]
	mov         r1,r5
	blx         r3
	movw        r1,|??_C@_08ODGCFFKD@?5is?5set?$CB@|
	movt        r1,|??_C@_08ODGCFFKD@?5is?5set?$CB@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r8]
	blx         r3
|$LN14@main|

; 279  : 	// print all flag values
; 280  : 	for (int i = 0; i < 8; i++) {

	adds        r5,r5,#1
	cmp         r5,#8
	blt         |$LL16@main|

; 283  : 		}
; 284  : 	}
; 285  : 	
; 286  : 	const int MAX_ENTITIES = 100;
; 287  : 	
; 288  : 	// order of const matters when declaring a pointer.
; 289  : 	//
; 290  : 	
; 291  : 	const int* v1		= new int{MAX_ENTITIES}; // This is a pointer to a constant integer. The integer cannot be changed. The pointer can be changed.

	movs        r0,#4
	bl          |??2@YAPAXI@Z|
	mov         r9,#0x64
	cbz         r0,|$LN31@main|
	str         r9,[r0]
|$LN31@main|

; 292  : 	int const* v2		= new int{ MAX_ENTITIES }; // This is a pointer to a constant integer. The integer cannot be changed. The pointer can be changed. This is the same as the previous line.

	movs        r0,#4
	bl          |??2@YAPAXI@Z|
	mov         r5,r0
	cbz         r5,|$LN33@main|
	str         r9,[r0]
	b           |$LN34@main|
|$LN33@main|
	movs        r5,#0
|$LN34@main|

; 293  : 	
; 294  : 	int* const v3	    = new int{ MAX_ENTITIES }; // This is a constant pointer to an integer. The integer can be changed. The pointer cannot be changed.

	movs        r0,#4
	bl          |??2@YAPAXI@Z|
	mov         r6,r0
	cbz         r6,|$LN35@main|
	str         r9,[r0]
	b           |$LN36@main|
|$LN35@main|
	movs        r6,#0
|$LN36@main|

; 295  : 	
; 296  : 	int const* const v4 = new int{ MAX_ENTITIES }; // This is a constant pointer to a constant integer. The integer cannot be changed. The pointer cannot be changed.

	movs        r0,#4
	bl          |??2@YAPAXI@Z|
	mov         r8,r0
	cbz         r0,|$LN37@main|
	str         r9,[r0]
	b           |$LN38@main|
|$LN37@main|
	mov         r8,#0
|$LN38@main|

; 297  : 	const int* const v5 = new int{ MAX_ENTITIES }; // This is a constant pointer to a constant integer. The integer cannot be changed. The pointer cannot be changed.

	movs        r0,#4
	bl          |??2@YAPAXI@Z|
	cbz         r0,|$LN39@main|
	str         r9,[r0]
|$LN39@main|

; 316  : 	};

	movs        r3,#0x64
	strd        r3,r5,[r7,#0x1C]

; 302  : 		v1 = &MAX_ENTITIES; // This is allowed because v1 is a pointer to a constant integer. The pointer can be changed.

	adds        r3,r7,#0x1C
	str         r3,[r7,#0x18]

; 303  : 		std::cout << v1 << " " << *v1 << std::endl;

	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	ldr         r0,[r4]
	adds        r1,r7,#0x1C
	ldr         r3,[r3]

; 316  : 	};

	strd        r6,r8,[r7,#0x24]

; 303  : 		std::cout << v1 << " " << *v1 << std::endl;

	blx         r3
	movw        r1,|??_C@_01CLKCMJKC@?5@|
	movt        r1,|??_C@_01CLKCMJKC@?5@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	ldr         r3,[r7,#0x18]
	ldr         r1,[r3]
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 304  : 		
; 305  : 		//*(v2) = 2; // This is not allowed because v2 is a pointer to a constant integer. The integer cannot be changed.
; 306  : 		v2 = &MAX_ENTITIES; // This is allowed because v2 is a pointer to a constant integer. The pointer can be changed.

	adds        r3,r7,#0x1C
	str         r3,[r7,#0x20]

; 307  : 		std::cout << v2 << " " << *v2 << std::endl;

	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	ldr         r0,[r4]
	adds        r1,r7,#0x1C
	ldr         r3,[r3]
	blx         r3
	movw        r1,|??_C@_01CLKCMJKC@?5@|
	movt        r1,|??_C@_01CLKCMJKC@?5@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	ldr         r3,[r7,#0x20]
	ldr         r1,[r3]
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 308  : 
; 309  : 		*(v3) = 2; // This is allowed because v3 is a constant pointer to an integer. The integer can be changed.

	ldr         r3,[r7,#0x24]
	movs        r2,#2
	str         r2,[r3]

; 310  : 		//v3 = &MAX_ENTITIES; // This is not allowed because v3 is a constant pointer to an integer. The pointer cannot be changed.
; 311  : 		std::cout << v3 << " " << *v3 << std::endl;

	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	ldr         r1,[r7,#0x24]
	ldr         r0,[r4]
	ldr         r3,[r3]
	blx         r3
	movw        r1,|??_C@_01CLKCMJKC@?5@|
	movt        r1,|??_C@_01CLKCMJKC@?5@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	ldr         r3,[r7,#0x24]
	ldr         r1,[r3]
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3

; 312  : 		
; 313  : 		//*(v4) = 2; // This is not allowed because v4 is a constant pointer to a constant integer. The integer cannot be changed.
; 314  : 		//v4 = &MAX_ENTITIES; // This is not allowed because v4 is a constant pointer to a constant integer. The pointer cannot be changed.
; 315  : 		std::cout << v4 << " " << *v4 << std::endl;

	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@PBX@Z|
	ldr         r1,[r7,#0x28]
	ldr         r0,[r4]
	ldr         r3,[r3]
	blx         r3
	movw        r1,|??_C@_01CLKCMJKC@?5@|
	movt        r1,|??_C@_01CLKCMJKC@?5@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	ldr         r3,[r7,#0x28]
	ldr         r1,[r3]
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@H@Z|
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0
	strd        r3,r3,[r7,#0x58]
	strd        r3,r3,[r7,#0x60]

; 2674 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	movw        r1,|??_C@_08LOJNBJFF@Beginner@|
	movt        r1,|??_C@_08LOJNBJFF@Beginner@|
	adds        r0,r7,#0x58
	movs        r2,#8

; 2348 :     size_type _Mysize = 0; // current length of string

	strd        r3,r3,[r7,#0x68]

; 2674 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	bl          |??$_Construct@$00PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAAXQBDI@Z|
|$M781|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 114  : 	stream << other.x << ", " << other.y;

	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@M@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@M@Z|

; 317  : 
; 318  : 	func(); 
; 319  : 
; 320  : 	int s_Level = 10;
; 321  : 	// Nested ternary operator example.
; 322  : 	std::string rank = s_Level > 15 ? "Master" :
; 323  : 					   s_Level > 10 ? "Intermediate":
; 324  : 					   s_Level > 5  ? "Beginner" : 
; 325  : 									  "Noob"; 
; 326  : 
; 327  : 	//char* p3 = (char*)"Lux Solari"; // This is a bad way of doing this. This is a const cast. This is not allowed in C++.
; 328  : 	//*p3 = 'k';
; 329  : 	
; 330  : 	Vector2 vec1(1.0f, 2.0f);
; 331  : 	Vector2 vec2(3.0f, 4.0f);
; 332  : 	
; 333  : 	Vector2 vec3 = vec1 + vec2;
; 334  : 	std::cout << vec3 << std::endl;

	ldr         r4,[r4]

; 86   : 	Vector2(float x, float y) : x(x), y(y) {}

	vmov.f32    s0,#4

; 114  : 	stream << other.x << ", " << other.y;

	ldr         r3,[r3]
	mov         r0,r4

; 86   : 	Vector2(float x, float y) : x(x), y(y) {}

	vmov.f32    s16,#6

; 114  : 	stream << other.x << ", " << other.y;

	blx         r3
	movw        r1,|??_C@_02KEGNLNML@?0?5@|
	movt        r1,|??_C@_02KEGNLNML@?0?5@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@M@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@M@Z|
	vmov.f32    s0,s16
	ldr         r3,[r3]
	blx         r3

; 317  : 
; 318  : 	func(); 
; 319  : 
; 320  : 	int s_Level = 10;
; 321  : 	// Nested ternary operator example.
; 322  : 	std::string rank = s_Level > 15 ? "Master" :
; 323  : 					   s_Level > 10 ? "Intermediate":
; 324  : 					   s_Level > 5  ? "Beginner" : 
; 325  : 									  "Noob"; 
; 326  : 
; 327  : 	//char* p3 = (char*)"Lux Solari"; // This is a bad way of doing this. This is a const cast. This is not allowed in C++.
; 328  : 	//*p3 = 'k';
; 329  : 	
; 330  : 	Vector2 vec1(1.0f, 2.0f);
; 331  : 	Vector2 vec2(3.0f, 4.0f);
; 332  : 	
; 333  : 	Vector2 vec3 = vec1 + vec2;
; 334  : 	std::cout << vec3 << std::endl;

	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	mov         r0,r4
	ldr         r3,[r3]
	blx         r3
|$M782|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r2,[r7,#0x6C]
	cmp         r2,#0x10
|$M783|
	it          cs
|$M784|
	movcs       r3,#1
|$M785|
	it          cc
|$M786|
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN93@main|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	ldr         r0,[r7,#0x58]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	adds        r1,r2,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	bl          |??3@YAXPAXI@Z|
|$LN93@main|
|$M787|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r2,[r7,#0x84]
	cmp         r2,#0x10
|$M788|
	it          cs
|$M789|
	movcs       r3,#1
|$M790|
	it          cc
|$M791|
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN79@main|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	ldr         r0,[r7,#0x70]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	adds        r1,r2,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	bl          |??3@YAXPAXI@Z|
|$LN79@main|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5022 :         _My_data._Mysize = 0;

	movs        r3,#0
	str         r3,[r7,#0x80]

; 5023 :         _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF
	str         r3,[r7,#0x84]

; 5024 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5025 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	movs        r3,#0
	strb        r3,[r7,#0x70]
|$M792|

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r2,[r7,#0x9C]
	cmp         r2,#0x10
|$M793|
	it          cs
|$M794|
	movcs       r3,#1
|$M795|
	it          cc
|$M796|
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN135@main|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	ldr         r0,[r7,#0x88]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	adds        r1,r2,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	bl          |??3@YAXPAXI@Z|
|$LN135@main|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5022 :         _My_data._Mysize = 0;

	movs        r3,#0
	str         r3,[r7,#0x98]

; 5023 :         _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF
	str         r3,[r7,#0x9C]

; 5024 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5025 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	movs        r3,#0
	strb        r3,[r7,#0x88]
|$M797|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 335  : }

	adds        r0,r7,#0xD0
	bl          |??1Player@@QAA@XZ|
|$M798|
	adds        r0,r7,#0x128
	bl          |??1Player@@QAA@XZ|
	movs        r0,#0
|$M694|
	mov         sp,r7
	add         sp,sp,#0x198
	bl          __security_pop_cookie
	vpop        {d8}
	pop         {r4-r11,pc}
|$LN702@main|
|$M703|
|$M799|
	__debugbreak
|$LN697@main|
|$M801|
;	COMDAT .text$x
.text$x	SEGMENT
|__unwind$47|
|$M802|
	adds        r0,r7,#0x128
	b.w         |??1Player@@QAA@XZ|
|$M803|
|__unwind$48|
|$M804|
	adds        r0,r7,#0x40
	b.w         |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
|$M805|
|__unwind$49|
|$M806|
	adds        r0,r7,#0xD0
	b.w         |??1Player@@QAA@XZ|
|$M807|
|__unwind$50|
|$M808|
	movs        r1,#0x58
	ldr         r0,[r7,#0x30]
	b.w         |??3@YAXPAXI@Z|
|$M809|
|__unwind$51|
	push        {r4,lr}
|$M810|
	ldr         r3,[r7,#0x2C]
	and         r3,r3,#1
	cmp         r3,#0
	beq.w       |$LN52@main|
	ldr         r3,[r7,#0x2C]
	bic         r3,r3,#1
	str         r3,[r7,#0x2C]
	adds        r0,r7,#0x40
	bl          |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
|$LN52@main|
|$M695|
	pop         {r4,pc}
|$M811|
|__unwind$54|
|$M812|
	movs        r1,#0x20
	ldr         r0,[r7,#0x30]
	b.w         |??3@YAXPAXI@Z|
|$M813|
|__unwind$55|
	push        {r4,lr}
|$M814|
	ldr         r3,[r7,#0x2C]
	and         r3,r3,#2
	cmp         r3,#0
	beq.w       |$LN56@main|
	ldr         r3,[r7,#0x2C]
	bic         r3,r3,#2
	str         r3,[r7,#0x2C]
	adds        r0,r7,#0x40
	bl          |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
|$LN56@main|
|$M696|
	pop         {r4,pc}
|$M815|
|__unwind$58|
|$M816|
	adds        r0,r7,#0x40
	b.w         |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
|$M817|
|__unwind$59|
|$M818|
	adds        r0,r7,#0x88
	b.w         |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
|$M819|
|__unwind$60|
|$M820|
	adds        r0,r7,#0x40
	b.w         |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
|$M821|
|__unwind$61|
|$M822|
	adds        r0,r7,#0x70
	b.w         |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
|$M823|
|__unwind$62|
|$M824|
	adds        r0,r7,#0xB8
	b.w         |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
|$M825|
|__unwind$63|
|$M826|
	adds        r0,r7,#0xA0
	b.w         |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
|$M827|
|__unwind$64|
|$M828|
	adds        r0,r7,#0x58
	b.w         |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
|$M829|
|__unwind$65|
|$M830|
	adds        r0,r7,#0x58
	b.w         |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
|$M831|

	ENDP  ; |main|

; Function compile flags: /Ogtp
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
;	COMDAT ?Increase@@YAXPAXH@Z
.text$mn	SEGMENT

|?Increase@@YAXPAXH@Z| PROC				; Increase

; 125  : void Increase(void* data, int psize) { 

	push        {r11,lr}
	mov         r11,sp
|$M9|

; 126  : 	
; 127  : 	if (psize == sizeof(char)) {

	cmp         r1,#1
	bne         |$LN2@Increase|

; 128  : 		char* pchar;
; 129  : 		pchar = (char*)data;
; 130  : 		++(*pchar);

	ldrb        r3,[r0]
	adds        r3,r3,#1
	strb        r3,[r0]
|$M7|

; 136  : 	}
; 137  : }

	pop         {r11,pc}
|$LN2@Increase|

; 131  : 	}
; 132  : 	else if (psize == sizeof(int)) {

	cmp         r1,#4
	bne         |$LN4@Increase|

; 133  : 		int* pint;
; 134  : 		pint = (int*)data;
; 135  : 		++(*pint);

	ldr         r3,[r0]
	adds        r3,r3,#1
	str         r3,[r0]
|$LN4@Increase|
|$M8|

; 136  : 	}
; 137  : }

	pop         {r11,pc}
|$M10|

	ENDP  ; |?Increase@@YAXPAXH@Z|, Increase

; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
;	COMDAT ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z
.text$mn	SEGMENT

|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z| PROC ; std::endl<char,std::char_traits<char> >

; 1005 :     basic_ostream<_Elem, _Traits>& _Ostr) { // insert newline and flush stream

	push        {r3,r4,r11,lr}
	add         r11,sp,#8
|$M5|
	mov         r4,r0

; 1006 :     _Ostr.put(_Ostr.widen('\n'));

	ldr         r3,[r4]
	movs        r1,#0xA
	ldr         r3,[r3,#4]
	adds        r0,r3,r4
	movw        r3,|__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBADD@Z|
	movt        r3,|__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBADD@Z|
	ldr         r3,[r3]
	blx         r3
	movw        r3,|__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV12@D@Z|
	movt        r3,|__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV12@D@Z|
	mov         r1,r0
	mov         r0,r4
	ldr         r3,[r3]
	blx         r3

; 1007 :     _Ostr.flush();

	movw        r3,|__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV12@XZ|
	movt        r3,|__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV12@XZ|
	mov         r0,r4
	ldr         r3,[r3]
	blx         r3

; 1008 :     return _Ostr;
; 1009 : }

	mov         r0,r4
|$M4|
	pop         {r3,r4,r11,pc}
|$M6|

	ENDP  ; |??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|, std::endl<char,std::char_traits<char> >

; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
;	COMDAT ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
.text$mn	SEGMENT

|??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z| PROC ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >

; 5367 :     basic_ostream<_Elem, _Traits>& _Ostr, const basic_string<_Elem, _Traits, _Alloc>& _Str) {

	push        {r11,lr}
	mov         r11,sp
|$M14|

; 5368 :     return _Insert_string(_Ostr, _Str.data(), _Str.size());

	ldrd        r2,r3,[r1,#0x10]

; 2300 :         return _BUF_SIZE <= _Myres;

	cmp         r3,#0x10
	it          cs
	movcs       r3,#1
	it          cc
	movcc       r3,#0

; 2292 :         if (_Large_string_engaged()) {

	cbz         r3,|$LN6@operator|

; 2293 :             _Result = _Unfancy(_Bx._Ptr);

	ldr         r1,[r1]
|$LN6@operator|
|$M13|

; 5368 :     return _Insert_string(_Ostr, _Str.data(), _Str.size());

	pop         {r11,lr}
	b.w         |??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z|
|$M15|

	ENDP  ; |??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z|, std::operator<<<char,std::char_traits<char>,std::allocator<char> >

; Function compile flags: /Ogtp
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
;	COMDAT ?PrintName@@YAXPBVPrintable@@@Z
.text$mn	SEGMENT

|?PrintName@@YAXPBVPrintable@@@Z| PROC			; PrintName

; 118  : void PrintName(const Printable* object) {

|$M30|
	push        {r4,r7,r11,lr}
	add         r11,sp,#8
	bl          __security_push_cookie
	sub         sp,sp,#0x24
	mov         r7,sp
|$M37|
	mvn         r2,#1
	mov         r3,r0
	strd        r2,r2,[r7]

; 119  : 	std::cout << object->GetClassName() << std::endl;

	ldr         r3,[r3]
	adds        r1,r7,#8
	ldr         r3,[r3]
	blx         r3
|$M31|
	movw        r3,|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
	movt        r3,|__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5368 :     return _Insert_string(_Ostr, _Str.data(), _Str.size());

	ldr         r2,[r0,#0x10]
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 119  : 	std::cout << object->GetClassName() << std::endl;

	ldr         r4,[r3]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r3,[r0,#0x14]
	cmp         r3,#0x10
	it          cs
	movcs       r3,#1
	it          cc
	movcc       r3,#0

; 2292 :         if (_Large_string_engaged()) {

	cbz         r3,|$LN9@PrintName|

; 2293 :             _Result = _Unfancy(_Bx._Ptr);

	ldr         r0,[r0]
|$LN9@PrintName|

; 5368 :     return _Insert_string(_Ostr, _Str.data(), _Str.size());

	mov         r1,r0
	mov         r0,r4
	bl          |??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 119  : 	std::cout << object->GetClassName() << std::endl;

	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@P6AAAV01@AAV01@@Z@Z|
	movw        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	movt        r1,|??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z|
	ldr         r3,[r3]
	blx         r3
|$M32|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r2,[r7,#0x1C]
	cmp         r2,#0x10
|$M33|
	it          cs
|$M34|
	movcs       r3,#1
|$M35|
	it          cc
|$M36|
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN28@PrintName|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	ldr         r0,[r7,#8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	adds        r1,r2,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	bl          |??3@YAXPAXI@Z|
|$LN28@PrintName|
|$M29|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 120  : }

	add         sp,sp,#0x24
	bl          __security_pop_cookie
	pop         {r4,r7,r11,pc}
|$M38|
;	COMDAT .text$x
.text$x	SEGMENT
|__unwind$3|
|$M39|
	adds        r0,r7,#8
	b.w         |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
|$M40|

	ENDP  ; |?PrintName@@YAXPBVPrintable@@@Z|, PrintName

; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
.text$mn	SEGMENT

|??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z| PROC ; std::operator<<<std::char_traits<char> >

; 761  : basic_ostream<char, _Traits>& operator<<(basic_ostream<char, _Traits>& _Ostr, const char* _Val) {

|$M83|
	push        {r0,r1}
	push        {r4-r11,lr}
	add         r11,sp,#0x1C
	sub         sp,sp,#0x1C
	mov         r7,sp
|$M93|
	mov         r9,r0
	str         r0,[r7,#0x40]
	mvn         r2,#1

; 766  :     ios_base::iostate _State = ios_base::goodbit;

	mov         r8,#0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 418  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

	mov         r0,r1
	strd        r2,r2,[r7,#0x10]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream

; 766  :     ios_base::iostate _State = ios_base::goodbit;

	strd        r8,r1,[r7]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 418  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

	bl          strlen
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xiosbase

; 359  :         return _Wide;

	ldr         r3,[r9]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 418  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

	mov         r10,r0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream

; 768  :     streamsize _Pad          = _Ostr.width() <= 0 || _Ostr.width() <= _Count ? 0 : _Ostr.width() - _Count;

	ldr         r3,[r3,#4]
	add         r2,r9,r3
	ldrd        r4,r3,[r2,#0x20]
	cmp         r3,#0
	blt         |$LN17@operator|
	bgt         |$LN74@operator|
	cbz         r4,|$LN17@operator|
|$LN74@operator|
	ldrd        r1,r3,[r2,#0x20]
	cmp         r3,#0
	blt         |$LN17@operator|
	bgt         |$LN75@operator|
	cmp         r1,r10
	bls         |$LN17@operator|
|$LN75@operator|
	ldrd        r3,r2,[r2,#0x20]
	subs        r5,r3,r10
	sbc         r6,r2,#0
	b           |$LN18@operator|
|$LN17@operator|
	movs        r5,#0
	movs        r6,#0
|$LN18@operator|

; 769  :     const typename _Myos::sentry _Ok(_Ostr);

	adds        r0,r7,#8
	mov         r1,r9
	bl          |??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@AAV12@@Z|
|$M84|

; 770  : 
; 771  :     if (!_Ok) {

	ldrb        r3,[r7,#0xC]
	cmp         r3,#0
	beq         |$LN66@operator|
|$M85|

; 773  :     } else { // state okay, insert
; 774  :         _TRY_IO_BEGIN
; 775  :         if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left) {

	ldr         r3,[r9]
	ldr         r3,[r3,#4]
	add         r3,r3,r9
	ldr         r3,[r3,#0x14]
	and         r3,r3,#0x1C0
	cmp         r3,#0x40
	beq         |$LN79@operator|
|$LL4@operator|

; 776  :             for (; 0 < _Pad; --_Pad) { // pad on left

	cmp         r6,#0
	blt         |$LN79@operator|
	bgt         |$LN76@operator|
	cbz         r5,|$LN79@operator|
|$LN76@operator|

; 777  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	ldr         r3,[r9]
	ldr         r3,[r3,#4]
	add         r3,r3,r9
	ldrsb       r1,[r3,#0x40]
	ldr         r0,[r3,#0x38]
	movw        r3,|__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAAHD@Z|
	movt        r3,|__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAAHD@Z|
	ldr         r3,[r3]
	blx         r3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 481  :         return _Left == _Right;

	cmn         r0,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream

; 777  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	bne         |$LN2@operator|

; 778  :                     _State |= ios_base::badbit; // insertion failed, quit

	mov         r8,#4
	str         r8,[r7]

; 779  :                     break;

	b           |$LN79@operator|
|$LN2@operator|

; 776  :             for (; 0 < _Pad; --_Pad) { // pad on left

	subs        r5,r5,#1
	sbc         r6,r6,#0
	b           |$LL4@operator|
|$LN79@operator|

; 780  :                 }
; 781  :             }
; 782  :         }
; 783  : 
; 784  :         if (_State == ios_base::goodbit && _Ostr.rdbuf()->sputn(_Val, _Count) != _Count) {

	cmp         r8,#0
	bne         |$LN6@operator|
	ldr         r0,[r9]
	movw        r4,|__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAA_JPBD_J@Z|
	movt        r4,|__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAA_JPBD_J@Z|
	ldr         r1,[r7,#4]
	ldr         r0,[r0,#4]
	ldr         r4,[r4]
	mov         r2,r10
	add         r0,r0,r9
	ldr         r0,[r0,#0x38]
	movs        r3,#0
	blx         r4
	cmp         r0,r10
	bne         |$LN77@operator|
	cbz         r1,|$LN13@operator|
|$LN77@operator|

; 785  :             _State |= ios_base::badbit;

	mov         r8,#4
	str         r8,[r7]
|$LN13@operator|

; 786  :         }
; 787  : 
; 788  :         if (_State == ios_base::goodbit) {

	cmp         r8,#0
	bne         |$LN6@operator|
|$LL7@operator|

; 789  :             for (; 0 < _Pad; --_Pad) { // pad on right

	cmp         r6,#0
	blt         |$LN6@operator|
	bgt         |$LN78@operator|
	cbz         r5,|$LN6@operator|
|$LN78@operator|

; 790  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	ldr         r3,[r9]
	ldr         r3,[r3,#4]
	add         r3,r3,r9
	ldrsb       r1,[r3,#0x40]
	ldr         r0,[r3,#0x38]
	movw        r3,|__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAAHD@Z|
	movt        r3,|__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAAHD@Z|
	ldr         r3,[r3]
	blx         r3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 481  :         return _Left == _Right;

	cmn         r0,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream

; 790  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	bne         |$LN5@operator|

; 791  :                     _State |= ios_base::badbit; // insertion failed, quit

	mov         r8,#4

; 792  :                     break;

	b           |$LN6@operator|
|$LN5@operator|

; 789  :             for (; 0 < _Pad; --_Pad) { // pad on right

	subs        r5,r5,#1
	sbc         r6,r6,#0
	b           |$LL7@operator|
|$LN23@operator|
|$M86|

; 798  :         _CATCH_IO_(ios_base, _Ostr)

	ldr         r9,[r7,#0x40]
	ldr         r8,[r7]
	b           |$LN22@operator|
|$LN6@operator|

; 797  :         _Ostr.width(0);

	ldr         r3,[r9]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xiosbase

; 364  :         _Wide                      = _Newwidth;

	movs        r2,#0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream

; 797  :         _Ostr.width(0);

	ldr         r3,[r3,#4]
	add         r3,r3,r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xiosbase

; 364  :         _Wide                      = _Newwidth;

	strd        r2,r2,[r3,#0x20]
	b           |$LN22@operator|
|$LN66@operator|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\ostream

; 772  :         _State |= ios_base::badbit;

	mov         r8,#4
|$LN22@operator|

; 799  :     }
; 800  : 
; 801  :     _Ostr.setstate(_State);

	ldr         r3,[r9]
	movs        r2,#0
	mov         r1,r8
	ldr         r3,[r3,#4]
	add         r0,r3,r9
	movw        r3,|__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAAXH_N@Z|
	movt        r3,|__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAAXH_N@Z|
	ldr         r3,[r3]
	blx         r3
|$M87|

; 112  :             const bool _Zero_uncaught_exceptions = !_STD uncaught_exception(); // TRANSITION, ArchivedOS-12000909

	bl          |?uncaught_exception@std@@YA_NXZ|
	cbnz        r0,|$LN25@operator|

; 113  : #else // ^^^ _HAS_DEPRECATED_UNCAUGHT_EXCEPTION / !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION vvv
; 114  :             const bool _Zero_uncaught_exceptions = _STD uncaught_exceptions() == 0;
; 115  : #endif // !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION
; 116  : 
; 117  :             if (_Zero_uncaught_exceptions) {
; 118  :                 this->_Myostr._Osfx();

	movw        r3,|__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAXXZ|
	movt        r3,|__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAXXZ|
	ldr         r0,[r7,#8]
	ldr         r3,[r3]
	blx         r3
|$LN25@operator|
|$M88|

; 78   :             const auto _Rdbuf = _Myostr.rdbuf();

	ldr         r2,[r7,#8]
	ldr         r3,[r2]
	ldr         r3,[r3,#4]
	add         r3,r3,r2
	ldr         r3,[r3,#0x38]

; 79   :             if (_Rdbuf) {

	cbz         r3,|$LN31@operator|

; 80   :                 _Rdbuf->_Unlock();

	mov         r0,r3
	ldr         r3,[r3]
	ldr         r3,[r3,#8]
	blx         r3
|$LN31@operator|
|$M89|

; 802  :     return _Ostr;
; 803  : }

	mov         r0,r9
|$M81|
	add         sp,sp,#0x1C
	pop         {r4-r11}
	ldr         pc,[sp],#0xC
|$M94|
;	COMDAT .text$x
.text$x	SEGMENT
|__catch$20|
|$M90|

; 798  :         _CATCH_IO_(ios_base, _Ostr)

	push        {r4,lr}
|$M95|
|$M91|
	ldr         r0,[r7,#0x40]
	movs        r2,#1
	movs        r1,#4
	ldr         r3,[r0]
	ldr         r3,[r3,#4]
	add         r0,r0,r3
	movw        r3,|__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAAXH_N@Z|
	movt        r3,|__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAAXH_N@Z|
	ldr         r3,[r3]
	blx         r3
|$M92|
	movw        r0,|$LN23@operator|
	movt        r0,|$LN23@operator|
|$M82|
	pop         {r4,pc}
|$M96|
|__unwind$21|
|$M97|
	adds        r0,r7,#8
	b.w         |??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAA@XZ|
|$M98|

	ENDP  ; |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|, std::operator<<<std::char_traits<char> >

; Function compile flags: /Ogtp
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
;	COMDAT ??6@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV01@ABUVector2@@@Z
.text$mn	SEGMENT

|??6@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV01@ABUVector2@@@Z| PROC ; operator<<

; 113  : std::ostream& operator << (std::ostream& stream, const Vector2& other) {

	push        {r4,r5,r11,lr}
	add         r11,sp,#8
|$M5|

; 114  : 	stream << other.x << ", " << other.y;

	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@M@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@M@Z|
	vldr        s0,[r1]
	mov         r4,r1
	ldr         r3,[r3]
	mov         r5,r0
	blx         r3
	movw        r1,|??_C@_02KEGNLNML@?0?5@|
	movt        r1,|??_C@_02KEGNLNML@?0?5@|
	bl          |??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z|
	movw        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@M@Z|
	movt        r3,|__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAAAAV01@M@Z|
	vldr        s0,[r4,#4]
	ldr         r3,[r3]
	blx         r3

; 115  : 	return stream;
; 116  : }

	mov         r0,r5
|$M4|
	pop         {r4,r5,r11,pc}
|$M6|

	ENDP  ; |??6@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV01@ABUVector2@@@Z|, operator<<

; Function compile flags: /Ogtp
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
;	COMDAT ??1Player@@QAA@XZ
.text$mn	SEGMENT

|??1Player@@QAA@XZ| PROC				; Player::~Player

; 76   : 	~Player() { // This is a destructor. It is called when the object is destroyed.

	push        {r4-r9,r11,lr}
	add         r11,sp,#0x18
|$M48|
	movw        r3,|??_7Player@@6B@|
	movt        r3,|??_7Player@@6B@|
	mov         r6,r0
	mov         r5,r0
	str         r3,[r6]
	movs        r7,#0xA
	mov         r8,#0
	mov         r9,#0xF
|$LL4@Player|

; 78   : 			delete items[i];

	ldr         r4,[r5,#0x2C]
	cbz         r4,|$LN2@Player|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r3,[r4,#0x18]
	cmp         r3,#0x10
	it          cs
	movcs       r3,#1
	it          cc
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN41@Player|

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	ldr         r3,[r4,#0x18]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	ldr         r0,[r4,#4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	adds        r1,r3,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	bl          |??3@YAXPAXI@Z|
|$LN41@Player|
	movs        r1,#0x20
	mov         r0,r4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5022 :         _My_data._Mysize = 0;

	strd        r8,r9,[r4,#0x14]

; 5023 :         _My_data._Myres  = _BUF_SIZE - 1;
; 5024 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5025 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	strb        r8,[r4,#4]
	bl          |??3@YAXPAXI@Z|
|$LN2@Player|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 77   : 		for (int i = 0; i < 10; i++) {

	adds        r5,r5,#4
	subs        r7,r7,#1
	bne         |$LL4@Player|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r3,[r6,#0x24]
	cmp         r3,#0x10
	it          cs
	movcs       r3,#1
	it          cc
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN21@Player|

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	ldr         r3,[r6,#0x24]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	ldr         r0,[r6,#0x10]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	adds        r1,r3,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	bl          |??3@YAXPAXI@Z|
|$LN21@Player|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5022 :         _My_data._Mysize = 0;

	strd        r8,r9,[r6,#0x20]

; 5023 :         _My_data._Myres  = _BUF_SIZE - 1;
; 5024 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5025 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	strb        r8,[r6,#0x10]
|$M47|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 80   : 	}

	pop         {r4-r9,r11,pc}
|$M49|

	ENDP  ; |??1Player@@QAA@XZ|, Player::~Player

; Function compile flags: /Ogtp
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
;	COMDAT ?GetClassName@Player@@UBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
.text$mn	SEGMENT

|?GetClassName@Player@@UBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ| PROC ; Player::GetClassName

; 74   : 	virtual std::string GetClassName() const override { return "Player"; }

	push        {r3,r4,r11,lr}
	add         r11,sp,#8
|$M47|
	mov         r4,r1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0
	strd        r3,r3,[r4]
	strd        r3,r3,[r4,#8]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#6

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	movw        r1,|??_C@_06NPAAKFED@Player@|
	movt        r1,|??_C@_06NPAAKFED@Player@|

; 2748 :             _My_data._Mysize = _Count;

	str         r3,[r4,#0x10]

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	movs        r2,#6
	mov         r0,r4

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	str         r3,[r4,#0x14]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	bl          memmove

; 2755 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	movs        r3,#0
	strb        r3,[r4,#6]
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 74   : 	virtual std::string GetClassName() const override { return "Player"; }

	mov         r0,r4
|$M46|
	pop         {r3,r4,r11,pc}
|$M48|

	ENDP  ; |?GetClassName@Player@@UBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ|, Player::GetClassName

; Function compile flags: /Ogtp
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
;	COMDAT ??0Player@@QAA@H@Z
.text$mn	SEGMENT

|??0Player@@QAA@H@Z| PROC				; Player::Player

; 61   : 	explicit Player(const int max_health) : m_max_health(max_health) {} // This is a constructor with an initializer list. It is explicit so it cannot be used for implicit conversion.

|$M465|
	push        {r4-r11,lr}
	add         r11,sp,#0x1C
	bl          __security_push_cookie
	sub         sp,sp,#0x68
	mov         r7,sp
|$M496|
	vldr        s0,|$LN464@Player|			; 0
	mvn         r3,#1
	mov         r4,r0
	strd        r3,r3,[r7,#0x18]
	movw        r3,|??_7Player@@6B@|
	movt        r3,|??_7Player@@6B@|
	movs        r2,#0
	str         r4,[r7,#0x14]
	str         r2,[r7]
	vstr        s0,[r0,#4]
	vstr        s0,[r0,#8]
	vmov.f32    s0,#1
	str         r3,[r4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0
	vstr        s0,[r0,#0xC]
	strd        r3,r3,[r4,#0x10]
	strd        r3,r3,[r4,#0x18]

; 5002 :         _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF
	strd        r2,r3,[r4,#0x20]

; 5003 :         _My_data._Activate_SSO_buffer();
; 5004 : 
; 5005 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5006 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	strb        r2,[r4,#0x10]
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 61   : 	explicit Player(const int max_health) : m_max_health(max_health) {} // This is a constructor with an initializer list. It is explicit so it cannot be used for implicit conversion.

	mov         r5,r2
|$M466|

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	movs        r0,#0x20

; 61   : 	explicit Player(const int max_health) : m_max_health(max_health) {} // This is a constructor with an initializer list. It is explicit so it cannot be used for implicit conversion.

	str         r1,[r4,#0x28]
	bl          |??2@YAPAXI@Z|
	mov         r6,r0
	str         r6,[r7,#8]
|$M467|
	movw        r8,|??_7Item@@6B@|
	movt        r8,|??_7Item@@6B@|
	movs        r2,#5
	cbz         r6,|$LN3@Player|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0
	strd        r3,r3,[r7,#0x38]
	strd        r3,r3,[r7,#0x40]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#5
	str         r3,[r7,#0x48]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	movw        r3,|??_C@_05LKHEONBC@Sword@|
	movt        r3,|??_C@_05LKHEONBC@Sword@|

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	mov         r10,#0xF
	str         r10,[r7,#0x4C]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	ldr         r9,[r3]
	ldrb        r3,[r3,#4]
	str         r9,[r7,#8]
	strb        r3,[r7,#0x3C]

; 2755 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	movs        r3,#0
	strb        r3,[r7,#0x3D]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	str         r9,[r7,#0x38]
|$M468|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 45   : 	Item(const std::string& name) : m_name(name) {}

	str         r8,[r0]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	strd        r3,r3,[r6,#4]
	strd        r3,r3,[r6,#0xC]

; 2748 :             _My_data._Mysize = _Count;

	str         r2,[r6,#0x14]

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	movs        r5,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	movs        r2,#0x10
	adds        r1,r7,#0x38
	adds        r0,r6,#4

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	str         r3,[r6,#0x18]
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	str         r5,[r7]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	bl          memmove
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 43   : 	Class m_itemClass = Class::CLASS_DEFAULT;

	movs        r3,#5
	strh        r3,[r6,#0x1C]

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	b           |$LN4@Player|
|$LN3@Player|
	ldr         r3,[r7,#0x38]
	ldr         r10,[r7,#0x4C]
	movs        r6,#0
	str         r3,[r7,#8]
|$LN4@Player|
|$M469|
	movs        r0,#0x20
	str         r6,[r4,#0x2C]
	bl          |??2@YAPAXI@Z|
	mov         r6,r0
	str         r6,[r7,#4]
|$M470|
	movs        r2,#2
	cbz         r6,|$LN5@Player|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0
	strd        r3,r3,[r7,#0x20]
	strd        r3,r3,[r7,#0x28]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#6
	str         r3,[r7,#0x30]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	movw        r3,|??_C@_06EMIPNAHG@Shield@|
	movt        r3,|??_C@_06EMIPNAHG@Shield@|

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	mov         r8,#0xF
	str         r8,[r7,#0xC]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	ldr         r9,[r3]
	ldrh        r3,[r3,#4]

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	str         r8,[r7,#0x34]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	str         r9,[r7,#4]
	strh        r3,[r7,#0x24]

; 2755 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	movs        r3,#0
	strb        r3,[r7,#0x26]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	str         r9,[r7,#0x20]
|$M471|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 45   : 	Item(const std::string& name) : m_name(name) {}

	movw        r8,|??_7Item@@6B@|
	movt        r8,|??_7Item@@6B@|

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	orrs        r5,r5,r2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	adds        r1,r7,#0x20
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 45   : 	Item(const std::string& name) : m_name(name) {}

	str         r8,[r0]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	strd        r3,r3,[r6,#4]
	strd        r3,r3,[r6,#0xC]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#6
	str         r3,[r6,#0x14]

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	movs        r2,#0x10
	adds        r0,r6,#4

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	str         r3,[r6,#0x18]
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	str         r5,[r7]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	bl          memmove
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 43   : 	Class m_itemClass = Class::CLASS_DEFAULT;

	movs        r3,#5
	strh        r3,[r6,#0x1C]

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	b           |$LN6@Player|
|$LN5@Player|
	ldr         r3,[r7,#0x34]
	movs        r6,#0
	str         r3,[r7,#0xC]
	ldr         r3,[r7,#0x20]
	str         r3,[r7,#4]
|$LN6@Player|
|$M472|
	movs        r0,#0x20
	str         r6,[r4,#0x30]
	bl          |??2@YAPAXI@Z|
	mov         r6,r0
	str         r6,[r7,#0x10]
|$M473|
	movs        r1,#4
	cbz         r6,|$LN7@Player|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	movw        r2,|??_C@_03MMFDNDHJ@Bow@|
	movt        r2,|??_C@_03MMFDNDHJ@Bow@|

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	strd        r3,r3,[r7,#0x50]
	strd        r3,r3,[r7,#0x58]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#3
	str         r3,[r7,#0x60]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	ldrh        r3,[r2]

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	mov         r9,#0xF
	str         r9,[r7,#0x64]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	strh        r3,[r7,#0x50]
	ldrb        r3,[r2,#2]
	strb        r3,[r7,#0x52]

; 2755 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	movs        r3,#0
	strb        r3,[r7,#0x53]
|$M474|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 45   : 	Item(const std::string& name) : m_name(name) {}

	str         r8,[r0]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	strd        r3,r3,[r6,#4]
	strd        r3,r3,[r6,#0xC]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#3
	str         r3,[r6,#0x14]

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	orrs        r5,r5,r1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	adds        r1,r7,#0x50
	movs        r2,#0x10
	adds        r0,r6,#4

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	str         r3,[r6,#0x18]
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	str         r5,[r7]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	bl          memmove
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 43   : 	Class m_itemClass = Class::CLASS_DEFAULT;

	movs        r3,#5
	strh        r3,[r6,#0x1C]

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	b           |$LN8@Player|
|$LN7@Player|
	ldr         r9,[r7,#0x64]
	movs        r6,#0
|$LN8@Player|
|$M475|
	movs        r0,#0x20
	str         r6,[r4,#0x34]
	bl          |??2@YAPAXI@Z|
	mov         r6,r0
	str         r6,[r7,#0x10]
|$M476|
	movs        r1,#8
	cbz         r6,|$LN9@Player|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0
	strd        r3,r3,[r7,#0x20]
	strd        r3,r3,[r7,#0x28]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#5
	str         r3,[r7,#0x30]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	movw        r3,|??_C@_05OLOIDPAB@Arrow@|
	movt        r3,|??_C@_05OLOIDPAB@Arrow@|

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	mov         r8,#0xF
	str         r8,[r7,#0x34]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	ldr         r2,[r3]
	ldrb        r3,[r3,#4]
	str         r2,[r7]
	strb        r3,[r7,#0x24]

; 2755 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	movs        r3,#0
	strb        r3,[r7,#0x25]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	str         r2,[r7,#0x20]
|$M477|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 45   : 	Item(const std::string& name) : m_name(name) {}

	movw        r3,|??_7Item@@6B@|
	movt        r3,|??_7Item@@6B@|

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	orrs        r5,r5,r1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	adds        r1,r7,#0x20
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 45   : 	Item(const std::string& name) : m_name(name) {}

	str         r3,[r6]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0
	strd        r3,r3,[r6,#4]
	strd        r3,r3,[r6,#0xC]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#5
	str         r3,[r6,#0x14]

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	movs        r2,#0x10
	adds        r0,r6,#4

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	str         r3,[r6,#0x18]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	bl          memmove
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 43   : 	Class m_itemClass = Class::CLASS_DEFAULT;

	movs        r3,#5

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	ldr         r2,[r7]

; 43   : 	Class m_itemClass = Class::CLASS_DEFAULT;

	strh        r3,[r6,#0x1C]

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	movs        r1,#8
	b           |$LN10@Player|
|$LN9@Player|
	ldr         r8,[r7,#0x34]
	ldr         r2,[r7,#0x20]
	movs        r6,#0
|$LN10@Player|
|$M478|
	movs        r3,#0
	strd        r6,r3,[r4,#0x38]
	strd        r3,r3,[r4,#0x40]
	strd        r3,r3,[r4,#0x48]
	str         r3,[r4,#0x50]
|$M479|
	tst         r5,r1
	beq         |$LN407@Player|
	bics        r5,r5,r1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	cmp         r8,#0x10
|$M480|
	it          cs
|$M481|
	movcs       r3,#1
|$M482|
	it          cc
|$M483|
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN407@Player|

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	add         r1,r8,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	mov         r0,r2
	bl          |??3@YAXPAXI@Z|
|$LN407@Player|
|$M484|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	movs        r3,#4
	tst         r5,r3
	beq         |$LN421@Player|
	bics        r5,r5,r3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	cmp         r9,#0x10
|$M485|
	it          cs
|$M486|
	movcs       r3,#1
|$M487|
	it          cc
|$M488|
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN421@Player|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	ldr         r0,[r7,#0x50]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	add         r1,r9,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	bl          |??3@YAXPAXI@Z|
|$LN421@Player|
|$M489|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	movs        r3,#2
	tst         r5,r3
	beq         |$LN435@Player|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r2,[r7,#0xC]
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	bics        r5,r5,r3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	cmp         r2,#0x10
|$M490|
	it          cs
|$M491|
	movcs       r3,#1
|$M492|
	it          cc
|$M493|
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN435@Player|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	ldr         r0,[r7,#4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	adds        r1,r2,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	bl          |??3@YAXPAXI@Z|
|$LN435@Player|
|$M494|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	tst         r5,#1
	beq         |$LN449@Player|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	cmp         r10,#0x10
	it          cs
	movcs       r3,#1
	it          cc
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN449@Player|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	ldr         r0,[r7,#8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	add         r1,r10,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	bl          |??3@YAXPAXI@Z|
|$LN449@Player|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 57   : 	mutable int m_count = 0; // This is a mutable variable. It can be modified even if the object is a constant object.

	movs        r3,#0
	str         r3,[r4,#0x54]
|$M495|

; 61   : 	explicit Player(const int max_health) : m_max_health(max_health) {} // This is a constructor with an initializer list. It is explicit so it cannot be used for implicit conversion.

	mov         r0,r4
|$M458|
	add         sp,sp,#0x68
	bl          __security_pop_cookie
	pop         {r4-r11,pc}
|$LN463@Player|
|$LN464@Player|
	DCD         0x0
|$M497|
;	COMDAT .text$x
.text$x	SEGMENT
|__unwind$11|
|$M498|
	ldr         r3,[r7,#0x14]
	add         r0,r3,#0x10
	b.w         |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
|$M499|
|__unwind$12|
|$M500|
	movs        r1,#0x20
	ldr         r0,[r7,#8]
	b.w         |??3@YAXPAXI@Z|
|$M501|
|__unwind$13|
	push        {r4,lr}
|$M502|
	ldr         r3,[r7]
	and         r3,r3,#1
	cmp         r3,#0
	beq.w       |$LN14@Player|
	ldr         r3,[r7]
	bic         r3,r3,#1
	str         r3,[r7]
	adds        r0,r7,#0x38
	bl          |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
|$LN14@Player|
|$M459|
	pop         {r4,pc}
|$M503|
|__unwind$15|
|$M504|
	movs        r1,#0x20
	ldr         r0,[r7,#4]
	b.w         |??3@YAXPAXI@Z|
|$M505|
|__unwind$16|
	push        {r4,lr}
|$M506|
	ldr         r3,[r7]
	and         r3,r3,#2
	cmp         r3,#0
	beq.w       |$LN17@Player|
	ldr         r3,[r7]
	bic         r3,r3,#2
	str         r3,[r7]
	adds        r0,r7,#0x20
	bl          |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
|$LN17@Player|
|$M460|
	pop         {r4,pc}
|$M507|
|__unwind$18|
|$M508|
	movs        r1,#0x20
	ldr         r0,[r7,#0x10]
	b.w         |??3@YAXPAXI@Z|
|$M509|
|__unwind$19|
	push        {r4,lr}
|$M510|
	ldr         r3,[r7]
	and         r3,r3,#4
	cmp         r3,#0
	beq.w       |$LN20@Player|
	ldr         r3,[r7]
	bic         r3,r3,#4
	str         r3,[r7]
	adds        r0,r7,#0x50
	bl          |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
|$LN20@Player|
|$M461|
	pop         {r4,pc}
|$M511|
|__unwind$21|
|$M512|
	movs        r1,#0x20
	ldr         r0,[r7,#0x10]
	b.w         |??3@YAXPAXI@Z|
|$M513|
|__unwind$22|
	push        {r4,lr}
|$M514|
	ldr         r3,[r7]
	and         r3,r3,#8
	cmp         r3,#0
	beq.w       |$LN23@Player|
	ldr         r3,[r7]
	bic         r3,r3,#8
	str         r3,[r7]
	adds        r0,r7,#0x20
	bl          |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
|$LN23@Player|
|$M462|
	pop         {r4,pc}
|$M515|

	ENDP  ; |??0Player@@QAA@H@Z|, Player::Player

; Function compile flags: /Ogtp
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
;	COMDAT ??0Player@@QAA@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
.text$mn	SEGMENT

|??0Player@@QAA@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z| PROC ; Player::Player

; 60   : 	Player(const std::string& name) : m_name(name) {}  // This is a constructor with an initializer list.

|$M454|
	push        {r4-r11,lr}
	add         r11,sp,#0x1C
	bl          __security_push_cookie
	sub         sp,sp,#0x68
	mov         r7,sp
|$M486|
	vldr        s0,|$LN451@Player|			; 0
	mvn         r3,#1
	strd        r3,r3,[r7,#0x18]
	mov         r5,r0
	movs        r3,#0
	str         r5,[r7,#0x14]
	str         r3,[r7]
	vstr        s0,[r0,#4]
	vstr        s0,[r0,#8]
	vmov.f32    s0,#1
	mov         r4,r3
	movw        r3,|??_7Player@@6B@|
	movt        r3,|??_7Player@@6B@|
	vstr        s0,[r0,#0xC]
	adds        r0,r0,#0x10
	str         r3,[r5]
	bl          |??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@ABV01@@Z|
|$M455|

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	movs        r0,#0x20
	bl          |??2@YAPAXI@Z|
	mov         r6,r0
	str         r6,[r7,#8]
|$M456|
	movw        r8,|??_7Item@@6B@|
	movt        r8,|??_7Item@@6B@|
	movs        r2,#5
	movs        r1,#0xF
	cbz         r6,|$LN3@Player|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0
	strd        r3,r3,[r7,#0x38]
	strd        r3,r3,[r7,#0x40]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#5
	strd        r3,r1,[r7,#0x48]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	movw        r3,|??_C@_05LKHEONBC@Sword@|
	movt        r3,|??_C@_05LKHEONBC@Sword@|

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	mov         r10,r1

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	ldr         r9,[r3]
	ldrb        r3,[r3,#4]
	str         r9,[r7,#8]
	strb        r3,[r7,#0x3C]

; 2755 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	movs        r3,#0
	strb        r3,[r7,#0x3D]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	str         r9,[r7,#0x38]
|$M457|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 45   : 	Item(const std::string& name) : m_name(name) {}

	str         r8,[r0]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	strd        r3,r3,[r6,#4]
	strd        r3,r3,[r6,#0xC]

; 2748 :             _My_data._Mysize = _Count;

	strd        r2,r1,[r6,#0x14]
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	movs        r4,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	adds        r1,r7,#0x38
	movs        r2,#0x10
	adds        r0,r6,#4
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	str         r4,[r7]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	bl          memmove
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 43   : 	Class m_itemClass = Class::CLASS_DEFAULT;

	movs        r3,#5
	strh        r3,[r6,#0x1C]

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	b           |$LN4@Player|
|$LN3@Player|
	ldr         r3,[r7,#0x38]
	ldr         r10,[r7,#0x4C]
	movs        r6,#0
	str         r3,[r7,#8]
|$LN4@Player|
|$M458|
	movs        r0,#0x20
	str         r6,[r5,#0x2C]
	bl          |??2@YAPAXI@Z|
	mov         r6,r0
	str         r6,[r7,#4]
|$M459|
	movs        r2,#2
	cbz         r6,|$LN5@Player|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0
	strd        r3,r3,[r7,#0x20]
	strd        r3,r3,[r7,#0x28]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#6
	str         r3,[r7,#0x30]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	movw        r3,|??_C@_06EMIPNAHG@Shield@|
	movt        r3,|??_C@_06EMIPNAHG@Shield@|

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	mov         r8,#0xF
	str         r8,[r7,#0xC]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	ldr         r9,[r3]
	ldrh        r3,[r3,#4]

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	str         r8,[r7,#0x34]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	str         r9,[r7,#4]
	strh        r3,[r7,#0x24]

; 2755 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	movs        r3,#0
	strb        r3,[r7,#0x26]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	str         r9,[r7,#0x20]
|$M460|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 45   : 	Item(const std::string& name) : m_name(name) {}

	movw        r8,|??_7Item@@6B@|
	movt        r8,|??_7Item@@6B@|

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	orrs        r4,r4,r2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	adds        r1,r7,#0x20
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 45   : 	Item(const std::string& name) : m_name(name) {}

	str         r8,[r0]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	strd        r3,r3,[r6,#4]
	strd        r3,r3,[r6,#0xC]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#6
	str         r3,[r6,#0x14]

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	movs        r2,#0x10
	adds        r0,r6,#4

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	str         r3,[r6,#0x18]
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	str         r4,[r7]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	bl          memmove
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 43   : 	Class m_itemClass = Class::CLASS_DEFAULT;

	movs        r3,#5
	strh        r3,[r6,#0x1C]

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	b           |$LN6@Player|
|$LN5@Player|
	ldr         r3,[r7,#0x34]
	movs        r6,#0
	str         r3,[r7,#0xC]
	ldr         r3,[r7,#0x20]
	str         r3,[r7,#4]
|$LN6@Player|
|$M461|
	movs        r0,#0x20
	str         r6,[r5,#0x30]
	bl          |??2@YAPAXI@Z|
	mov         r6,r0
	str         r6,[r7,#0x10]
|$M462|
	movs        r1,#4
	cbz         r6,|$LN7@Player|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	movw        r2,|??_C@_03MMFDNDHJ@Bow@|
	movt        r2,|??_C@_03MMFDNDHJ@Bow@|

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	strd        r3,r3,[r7,#0x50]
	strd        r3,r3,[r7,#0x58]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#3
	str         r3,[r7,#0x60]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	ldrh        r3,[r2]

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	mov         r9,#0xF
	str         r9,[r7,#0x64]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	strh        r3,[r7,#0x50]
	ldrb        r3,[r2,#2]
	strb        r3,[r7,#0x52]

; 2755 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	movs        r3,#0
	strb        r3,[r7,#0x53]
|$M463|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 45   : 	Item(const std::string& name) : m_name(name) {}

	str         r8,[r0]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	strd        r3,r3,[r6,#4]
	strd        r3,r3,[r6,#0xC]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#3
	str         r3,[r6,#0x14]

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	orrs        r4,r4,r1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	adds        r1,r7,#0x50
	movs        r2,#0x10
	adds        r0,r6,#4

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	str         r3,[r6,#0x18]
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	str         r4,[r7]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	bl          memmove
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 43   : 	Class m_itemClass = Class::CLASS_DEFAULT;

	movs        r3,#5
	strh        r3,[r6,#0x1C]

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	b           |$LN8@Player|
|$LN7@Player|
	ldr         r9,[r7,#0x64]
	movs        r6,#0
|$LN8@Player|
|$M464|
	movs        r0,#0x20
	str         r6,[r5,#0x34]
	bl          |??2@YAPAXI@Z|
	mov         r6,r0
	str         r6,[r7,#0x10]
|$M465|
	movs        r1,#8
	cbz         r6,|$LN9@Player|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0
	strd        r3,r3,[r7,#0x20]
	strd        r3,r3,[r7,#0x28]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#5
	str         r3,[r7,#0x30]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	movw        r3,|??_C@_05OLOIDPAB@Arrow@|
	movt        r3,|??_C@_05OLOIDPAB@Arrow@|

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	mov         r8,#0xF
	str         r8,[r7,#0x34]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	ldr         r2,[r3]
	ldrb        r3,[r3,#4]
	str         r2,[r7]
	strb        r3,[r7,#0x24]

; 2755 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	movs        r3,#0
	strb        r3,[r7,#0x25]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	str         r2,[r7,#0x20]
|$M466|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 45   : 	Item(const std::string& name) : m_name(name) {}

	movw        r3,|??_7Item@@6B@|
	movt        r3,|??_7Item@@6B@|

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	orrs        r4,r4,r1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	adds        r1,r7,#0x20
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 45   : 	Item(const std::string& name) : m_name(name) {}

	str         r3,[r6]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0
	strd        r3,r3,[r6,#4]
	strd        r3,r3,[r6,#0xC]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#5
	str         r3,[r6,#0x14]

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	movs        r2,#0x10
	adds        r0,r6,#4

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	str         r3,[r6,#0x18]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	bl          memmove
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 43   : 	Class m_itemClass = Class::CLASS_DEFAULT;

	movs        r3,#5

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	ldr         r2,[r7]

; 43   : 	Class m_itemClass = Class::CLASS_DEFAULT;

	strh        r3,[r6,#0x1C]

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	movs        r1,#8
	b           |$LN10@Player|
|$LN9@Player|
	ldr         r8,[r7,#0x34]
	ldr         r2,[r7,#0x20]
	movs        r6,#0
|$LN10@Player|
|$M467|
	movs        r3,#0
	strd        r6,r3,[r5,#0x38]
	strd        r3,r3,[r5,#0x40]
	strd        r3,r3,[r5,#0x48]
	str         r3,[r5,#0x50]
|$M468|
	tst         r4,r1
	beq         |$LN394@Player|
	bics        r4,r4,r1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	cmp         r8,#0x10
|$M469|
	it          cs
|$M470|
	movcs       r3,#1
|$M471|
	it          cc
|$M472|
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN394@Player|

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	add         r1,r8,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	mov         r0,r2
	bl          |??3@YAXPAXI@Z|
|$LN394@Player|
|$M473|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	movs        r3,#4
	tst         r4,r3
	beq         |$LN408@Player|
	bics        r4,r4,r3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	cmp         r9,#0x10
|$M474|
	it          cs
|$M475|
	movcs       r3,#1
|$M476|
	it          cc
|$M477|
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN408@Player|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	ldr         r0,[r7,#0x50]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	add         r1,r9,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	bl          |??3@YAXPAXI@Z|
|$LN408@Player|
|$M478|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	movs        r3,#2
	tst         r4,r3
	beq         |$LN422@Player|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r2,[r7,#0xC]
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	bics        r4,r4,r3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	cmp         r2,#0x10
|$M479|
	it          cs
|$M480|
	movcs       r3,#1
|$M481|
	it          cc
|$M482|
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN422@Player|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	ldr         r0,[r7,#4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	adds        r1,r2,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	bl          |??3@YAXPAXI@Z|
|$LN422@Player|
|$M483|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 56   : 	Item* items[10] = { new Item("Sword"), new Item("Shield"), new Item("Bow"), new Item("Arrow") };

	tst         r4,#1
	beq         |$LN436@Player|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2300 :         return _BUF_SIZE <= _Myres;

	cmp         r10,#0x10
	it          cs
	movcs       r3,#1
	it          cc
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN436@Player|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	ldr         r0,[r7,#8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	add         r1,r10,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	bl          |??3@YAXPAXI@Z|
|$LN436@Player|
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 57   : 	mutable int m_count = 0; // This is a mutable variable. It can be modified even if the object is a constant object.

	movs        r3,#0
	str         r3,[r5,#0x54]
|$M484|

; 60   : 	Player(const std::string& name) : m_name(name) {}  // This is a constructor with an initializer list.

	mov         r0,r5
|$M445|
	add         sp,sp,#0x68
	bl          __security_pop_cookie
	pop         {r4-r11,pc}
|$LN452@Player|
|$M453|
|$M485|
	__debugbreak
|$LN450@Player|
|$LN451@Player|
	DCD         0x0
|$M487|
;	COMDAT .text$x
.text$x	SEGMENT
|__unwind$11|
|$M488|
	ldr         r3,[r7,#0x14]
	add         r0,r3,#0x10
	b.w         |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
|$M489|
|__unwind$12|
|$M490|
	movs        r1,#0x20
	ldr         r0,[r7,#8]
	b.w         |??3@YAXPAXI@Z|
|$M491|
|__unwind$13|
	push        {r4,lr}
|$M492|
	ldr         r3,[r7]
	and         r3,r3,#1
	cmp         r3,#0
	beq.w       |$LN14@Player|
	ldr         r3,[r7]
	bic         r3,r3,#1
	str         r3,[r7]
	adds        r0,r7,#0x38
	bl          |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
|$LN14@Player|
|$M446|
	pop         {r4,pc}
|$M493|
|__unwind$15|
|$M494|
	movs        r1,#0x20
	ldr         r0,[r7,#4]
	b.w         |??3@YAXPAXI@Z|
|$M495|
|__unwind$16|
	push        {r4,lr}
|$M496|
	ldr         r3,[r7]
	and         r3,r3,#2
	cmp         r3,#0
	beq.w       |$LN17@Player|
	ldr         r3,[r7]
	bic         r3,r3,#2
	str         r3,[r7]
	adds        r0,r7,#0x20
	bl          |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
|$LN17@Player|
|$M447|
	pop         {r4,pc}
|$M497|
|__unwind$18|
|$M498|
	movs        r1,#0x20
	ldr         r0,[r7,#0x10]
	b.w         |??3@YAXPAXI@Z|
|$M499|
|__unwind$19|
	push        {r4,lr}
|$M500|
	ldr         r3,[r7]
	and         r3,r3,#4
	cmp         r3,#0
	beq.w       |$LN20@Player|
	ldr         r3,[r7]
	bic         r3,r3,#4
	str         r3,[r7]
	adds        r0,r7,#0x50
	bl          |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
|$LN20@Player|
|$M448|
	pop         {r4,pc}
|$M501|
|__unwind$21|
|$M502|
	movs        r1,#0x20
	ldr         r0,[r7,#0x10]
	b.w         |??3@YAXPAXI@Z|
|$M503|
|__unwind$22|
	push        {r4,lr}
|$M504|
	ldr         r3,[r7]
	and         r3,r3,#8
	cmp         r3,#0
	beq.w       |$LN23@Player|
	ldr         r3,[r7]
	bic         r3,r3,#8
	str         r3,[r7]
	adds        r0,r7,#0x20
	bl          |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|
|$LN23@Player|
|$M449|
	pop         {r4,pc}
|$M505|

	ENDP  ; |??0Player@@QAA@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z|, Player::Player

; Function compile flags: /Ogtp
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
;	COMDAT ?GetClassName@Item@@UBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
.text$mn	SEGMENT

|?GetClassName@Item@@UBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ| PROC ; Item::GetClassName

; 49   : 	virtual std::string GetClassName() const override { return m_name; }

	push        {r3,r4,r11,lr}
	add         r11,sp,#8
|$M7|
	mov         r4,r1
	adds        r1,r0,#4
	mov         r0,r4
	bl          |??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@ABV01@@Z|
	mov         r0,r4
|$M6|
	pop         {r3,r4,r11,pc}
|$M8|

	ENDP  ; |?GetClassName@Item@@UBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ|, Item::GetClassName

; Function compile flags: /Ogtp
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp
;	COMDAT ?GetClassName@Entity@@UBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
.text$mn	SEGMENT

|?GetClassName@Entity@@UBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ| PROC ; Entity::GetClassName

; 31   : 	std::string GetClassName() const override {

	push        {r3,r4,r11,lr}
	add         r11,sp,#8
|$M47|
	mov         r4,r1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0
	strd        r3,r3,[r4]
	strd        r3,r3,[r4,#8]

; 2748 :             _My_data._Mysize = _Count;

	movs        r3,#6

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	movw        r1,|??_C@_06KBCHOIMA@Entity@|
	movt        r1,|??_C@_06KBCHOIMA@Entity@|

; 2748 :             _My_data._Mysize = _Count;

	str         r3,[r4,#0x10]

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	movs        r2,#6
	mov         r0,r4

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	str         r3,[r4,#0x14]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	bl          memmove

; 2755 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	movs        r3,#0
	strb        r3,[r4,#6]
; File D:\data\code\gaming-studio-practices\cherno-practices\NewProject\Logger\Entity.cpp

; 33   : 	}

	mov         r0,r4
|$M46|
	pop         {r3,r4,r11,pc}
|$M48|

	ENDP  ; |?GetClassName@Entity@@UBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ|, Entity::GetClassName

; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
;	COMDAT ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBAIQBDI@Z
.text$mn	SEGMENT

|?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBAIQBDI@Z| PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find

; 4529 :     /* strengthened */ {

	push        {r4-r9,r11,lr}
	add         r11,sp,#0x18
|$M43|
	mov         r4,r0

; 418  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

	mov         r0,r1

; 4529 :     /* strengthened */ {

	mov         r5,r2
	mov         r9,r1

; 418  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

	bl          strlen

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r3,[r4,#0x14]

; 418  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

	mov         r6,r0

; 2291 :         const value_type* _Result = _Bx._Buf;

	mov         r8,r4

; 2300 :         return _BUF_SIZE <= _Myres;

	cmp         r3,#0x10
	it          cs
	movcs       r3,#1
	it          cc
	movcc       r3,#0

; 2292 :         if (_Large_string_engaged()) {

	cbz         r3,|$LN6@find|

; 2293 :             _Result = _Unfancy(_Bx._Ptr);

	ldr         r8,[r4]
|$LN6@find|

; 4530 :         // look for [_Ptr, <null>) beginning at or after _Off
; 4531 :         return static_cast<size_type>(_Traits_find<_Traits>(

	ldr         r2,[r4,#0x10]

; 624  :     if (_Needle_size > _Hay_size || _Start_at > _Hay_size - _Needle_size) {

	cmp         r6,r2
	bhi         |$LN17@find|
	subs        r3,r2,r6
	cmp         r5,r3
	bhi         |$LN17@find|

; 634  :     }
; 635  : 
; 636  :     if (_Needle_size == 0) { // empty string always matches if xpos is possible

	cbnz        r6,|$LN18@find|

; 4532 :             _Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Off, _Ptr, _Traits::length(_Ptr)));
; 4533 :     }

	mov         r0,r5
|$M39|
	pop         {r4-r9,r11,pc}
|$LN18@find|

; 640  :     const auto _Possible_matches_end = _Haystack + (_Hay_size - _Needle_size) + 1;

	subs        r3,r2,r6
	add         r3,r3,r8
	adds        r7,r3,#1

; 641  :     for (auto _Match_try = _Haystack + _Start_at;; ++_Match_try) {

	add         r4,r8,r5

; 439  :         return static_cast<const _Elem*>(_CSTD memchr(_First, _Ch, _Count));

	ldrb        r5,[r9]

; 642  :         _Match_try = _Traits::find(_Match_try, static_cast<size_t>(_Possible_matches_end - _Match_try), *_Needle);

	subs        r3,r7,r4

; 439  :         return static_cast<const _Elem*>(_CSTD memchr(_First, _Ch, _Count));

	beq         |$LN34@find|
	adds        r2,r4,r3
|$LN32@find|
	ldrb        r3,[r4]
	cmp         r3,r5
	beq         |$LN33@find|
	adds        r4,r4,#1
	cmp         r4,r2
	bne         |$LN32@find|
|$LN34@find|
	movs        r4,#0
|$LN33@find|

; 643  :         if (!_Match_try) { // didn't find first character; report failure

	cbz         r4,|$LN27@find|
|$LL15@find|

; 398  :         return _CSTD memcmp(_First1, _First2, _Count);

	mov         r2,r6
	mov         r1,r9
	mov         r0,r4
	bl          memcmp

; 647  :         if (_Traits::compare(_Match_try, _Needle, _Needle_size) == 0) { // found match

	cbz         r0,|$LN28@find|

; 642  :         _Match_try = _Traits::find(_Match_try, static_cast<size_t>(_Possible_matches_end - _Match_try), *_Needle);

	adds        r4,r4,#1
	subs        r3,r7,r4

; 439  :         return static_cast<const _Elem*>(_CSTD memchr(_First, _Ch, _Count));

	mov         r2,r4
	beq         |$LN37@find|
	adds        r1,r4,r3
|$LN35@find|
	ldrb        r3,[r2]
	cmp         r3,r5
	beq         |$LN36@find|
	adds        r2,r2,#1
	cmp         r2,r1
	bne         |$LN35@find|
|$LN37@find|
	movs        r2,#0
|$LN36@find|

; 642  :         _Match_try = _Traits::find(_Match_try, static_cast<size_t>(_Possible_matches_end - _Match_try), *_Needle);

	mov         r4,r2

; 643  :         if (!_Match_try) { // didn't find first character; report failure

	cmp         r2,#0
	bne         |$LL15@find|
|$LN27@find|

; 644  :             return static_cast<size_t>(-1);

	mvn         r0,#0
|$M40|

; 4532 :             _Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Off, _Ptr, _Traits::length(_Ptr)));
; 4533 :     }

	pop         {r4-r9,r11,pc}
|$LN28@find|

; 648  :             return static_cast<size_t>(_Match_try - _Haystack);

	sub         r0,r4,r8
|$M41|

; 4532 :             _Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Off, _Ptr, _Traits::length(_Ptr)));
; 4533 :     }

	pop         {r4-r9,r11,pc}
|$LN17@find|

; 633  :         return static_cast<size_t>(-1);

	mvn         r0,#0
|$M42|

; 4532 :             _Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Off, _Ptr, _Traits::length(_Ptr)));
; 4533 :     }

	pop         {r4-r9,r11,pc}
|$M44|

	ENDP  ; |?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBAIQBDI@Z|, std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find

; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAAAAV12@QBDI@Z
.text$mn	SEGMENT

|?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAAAAV12@QBDI@Z| PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 3421 :         _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

	push        {r3-r11,lr}
	add         r11,sp,#0x20
|$M60|
	mov         r5,r0

; 3422 :         // append [_Ptr, _Ptr + _Count)
; 3423 :         const size_type _Old_size = _Mypair._Myval2._Mysize;
; 3424 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	ldr         r3,[r5,#0x14]
	mov         r6,r2
	ldr         r2,[r5,#0x10]
	str         r1,[sp]
	subs        r3,r3,r2
	cmp         r6,r3
	bhi         |$LN2@append|

; 3425 :             _ASAN_STRING_MODIFY(static_cast<difference_type>(_Count));
; 3426 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	adds        r3,r2,r6
	str         r3,[r5,#0x10]

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r3,[r5,#0x14]
	cmp         r3,#0x10
	it          cs
	movcs       r3,#1
	it          cc
	movcc       r3,#0

; 2283 :         if (_Large_string_engaged()) {

	cbz         r3,|$LN5@append|

; 2284 :             _Result = _Unfancy(_Bx._Ptr);

	ldr         r0,[r5]
|$LN5@append|

; 3427 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 3428 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

	adds        r4,r0,r2

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov         r0,r4
	mov         r2,r6
	bl          memmove

; 3429 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

	movs        r3,#0
	strb        r3,[r4,r6]

; 3440 :             },
; 3441 :             _Ptr, _Count);
; 3442 :     }

	mov         r0,r5
|$M57|
	pop         {r3-r11,pc}
|$LN2@append|

; 4941 :         const size_type _Old_size = _My_data._Mysize;

	ldr         r8,[r5,#0x10]

; 4942 :         if (max_size() - _Old_size < _Size_increase) {

	mvn         r4,#0x80000000
	sub         r3,r4,r8
	cmp         r3,r6
	bcc         |$LN55@append|

; 4944 :         }
; 4945 : 
; 4946 :         const size_type _New_size     = _Old_size + _Size_increase;
; 4947 :         const size_type _Old_capacity = _My_data._Myres;

	ldr         r10,[r5,#0x14]
	add         r9,r8,r6

; 4886 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	orr         r1,r9,#0xF

; 4899 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

	mov         r2,r10

; 4886 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	cmp         r1,r4

; 4887 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	bhi         |$LN27@append|

; 4888 :             return _Max;
; 4889 :         }
; 4890 : 
; 4891 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

	sub         r3,r4,r10,lsr #1
	cmp         r2,r3
	bhi         |$LN27@append|

; 4892 :             return _Max;
; 4893 :         }
; 4894 : 
; 4895 :         return (_STD max)(_Masked, _Old + _Old / 2);

	add         r4,r10,r10,lsr #1
	cmp         r1,r4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

	bcc         |$LN27@append|
	mov         r4,r1
|$LN27@append|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 4950 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	adds        r0,r4,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 234  :     if (_Bytes != 0) {

	beq         |$LN31@append|

; 77   :         return ::operator new(_Bytes);

	bl          |??2@YAPAXI@Z|
	mov         r7,r0

; 235  :         return _Traits::_Allocate(_Bytes);

	b           |$LN30@append|
|$LN31@append|

; 236  :     }
; 237  : 
; 238  :     return nullptr;

	movs        r7,#0
|$LN30@append|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 4959 :         _My_data._Mysize      = _New_size;

	strd        r9,r4,[r5,#0x10]

; 4960 :         _My_data._Myres       = _New_capacity;
; 4961 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

	add         r9,r7,r8

; 4962 :         if (_BUF_SIZE <= _Old_capacity) {

	cmp         r10,#0x10
	mov         r2,r8
	mov         r0,r7
	bcc         |$LN15@append|

; 4963 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

	ldr         r4,[r5]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov         r1,r4
	bl          memcpy
	ldr         r1,[sp]
	mov         r2,r6
	mov         r0,r9
	bl          memcpy

; 3439 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

	movs        r3,#0

; 4965 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

	add         r1,r10,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	mov         r0,r4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 3439 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

	strb        r3,[r9,r6]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	bl          |??3@YAXPAXI@Z|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 3433 :         return _Reallocate_grow_by(

	str         r7,[r5]

; 3440 :             },
; 3441 :             _Ptr, _Count);
; 3442 :     }

	mov         r0,r5
|$M58|
	pop         {r3-r11,pc}
|$LN15@append|

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov         r1,r5
	bl          memcpy
	ldr         r1,[sp]
	mov         r2,r6
	mov         r0,r9
	bl          memcpy

; 3439 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

	movs        r3,#0
	strb        r3,[r9,r6]

; 3433 :         return _Reallocate_grow_by(

	str         r7,[r5]

; 3440 :             },
; 3441 :             _Ptr, _Count);
; 3442 :     }

	mov         r0,r5
|$M59|
	pop         {r3-r11,pc}
|$LN55@append|

; 4943 :             _Xlen_string(); // result too long

	bl          |?_Xlen_string@std@@YAXXZ|
	__debugbreak
|$LN56@append|
|$LN53@append|
|$M61|

	ENDP  ; |?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAAAAV12@QBDI@Z|, std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ
.text$mn	SEGMENT

|??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ| PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 3269 :     _CONSTEXPR20 ~basic_string() noexcept {

	push        {r3,r4,r11,lr}
	add         r11,sp,#8
|$M16|
	mov         r4,r0

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r3,[r4,#0x14]
	cmp         r3,#0x10
	it          cs
	movcs       r3,#1
	it          cc
	movcc       r3,#0

; 5014 :         if (_My_data._Large_string_engaged()) {

	cbz         r3,|$LN13@basic_stri|

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	ldr         r3,[r4,#0x14]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	ldr         r0,[r4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5019 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	adds        r1,r3,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

	bl          |??3@YAXPAXI@Z|
|$LN13@basic_stri|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 5022 :         _My_data._Mysize = 0;

	movs        r2,#0

; 5023 :         _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF
	strd        r2,r3,[r4,#0x10]

; 5024 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5025 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	strb        r2,[r4]
|$M15|

; 3270 :         _Tidy_deallocate();
; 3271 : #if _ITERATOR_DEBUG_LEVEL != 0
; 3272 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 3273 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;
; 3274 :         _Mypair._Myval2._Myproxy = nullptr;
; 3275 :         _Delete_plain_internal(_Alproxy, _To_delete);
; 3276 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 3277 :     }

	pop         {r3,r4,r11,pc}
|$M17|

	ENDP  ; |??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@XZ|, std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@U_String_constructor_concat_tag@1@AAV01@1@Z
.text$mn	SEGMENT

|??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@U_String_constructor_concat_tag@1@AAV01@1@Z| PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 2948 :         : _Mypair(_One_then_variadic_args_t{}, _Left._Getal()) {

	push        {r3-r11,lr}
	add         r11,sp,#0x20
|$M119|
	mov         r6,r3

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0

; 2948 :         : _Mypair(_One_then_variadic_args_t{}, _Left._Getal()) {

	mov         r4,r0

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	strd        r3,r3,[r4]
	strd        r3,r3,[r4,#8]

; 2348 :     size_type _Mysize = 0; // current length of string

	movs        r0,#0

; 2948 :         : _Mypair(_One_then_variadic_args_t{}, _Left._Getal()) {

	mov         r5,r2

; 2348 :     size_type _Mysize = 0; // current length of string

	strd        r0,r0,[r4,#0x10]

; 2949 :         auto& _My_data    = _Mypair._Myval2;
; 2950 :         auto& _Left_data  = _Left._Mypair._Myval2;
; 2951 :         auto& _Right_data = _Right._Mypair._Myval2;
; 2952 :         _Left_data._Orphan_all();
; 2953 :         _Right_data._Orphan_all();
; 2954 :         const auto _Left_size  = _Left_data._Mysize;

	ldr         r8,[r2,#0x10]

; 2955 :         const auto _Right_size = _Right_data._Mysize;
; 2956 : 
; 2957 :         const auto _Left_capacity  = _Left_data._Myres;

	ldr         r1,[r5,#0x14]
	ldrd        r10,r2,[r6,#0x10]

; 2958 :         const auto _Right_capacity = _Right_data._Myres;
; 2959 :         // overflow is OK due to max_size() checks:
; 2960 :         const auto _New_size     = static_cast<size_type>(_Left_size + _Right_size);
; 2961 :         const bool _Fits_in_left = _Right_size <= _Left_capacity - _Left_size;

	sub         r3,r1,r8
	cmp         r10,r3
	add         r9,r10,r8
	bhi         |$LN2@basic_stri|

; 2962 :         if (_Fits_in_left && _Right_capacity <= _Left_capacity) {

	cmp         r2,r1
	bhi         |$LN2@basic_stri|

; 3139 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	ldr         r3,[r5]

; 2282 :         value_type* _Result = _Bx._Buf;

	mov         r1,r4

; 3139 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	str         r3,[r4]
	ldr         r3,[r5,#4]
	str         r3,[r4,#4]
	ldr         r3,[r5,#8]
	str         r3,[r4,#8]
	ldr         r3,[r5,#0xC]
	str         r3,[r4,#0xC]
	ldr         r3,[r5,#0x10]
	str         r3,[r4,#0x10]
	ldr         r3,[r5,#0x14]
	str         r3,[r4,#0x14]

; 5002 :         _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF
	strd        r0,r3,[r5,#0x10]

; 5003 :         _My_data._Activate_SSO_buffer();
; 5004 : 
; 5005 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5006 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	strb        r0,[r5]

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r3,[r4,#0x14]
	cmp         r3,#0x10
	it          cs
	movcs       r3,#1
	it          cc
	movcc       r3,#0

; 2283 :         if (_Large_string_engaged()) {

	cbz         r3,|$LN68@basic_stri|

; 2284 :             _Result = _Unfancy(_Bx._Ptr);

	ldr         r1,[r4]
|$LN68@basic_stri|

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r3,[r6,#0x14]
	cmp         r3,#0x10
	it          cs
	movcs       r3,#1
	it          cc
	movcc       r3,#0

; 2283 :         if (_Large_string_engaged()) {

	cbz         r3,|$LN75@basic_stri|

; 2284 :             _Result = _Unfancy(_Bx._Ptr);

	ldr         r6,[r6]
|$LN75@basic_stri|

; 2963 :             // take _Left's buffer, max_size() is OK because _Fits_in_left
; 2964 :             _My_data._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal())); // throws, hereafter nothrow in this block
; 2965 :             _Take_contents(_Left);
; 2966 :             const auto _Ptr = _My_data._Myptr();
; 2967 :             _ASAN_STRING_MODIFY(static_cast<difference_type>(_Right_size));
; 2968 :             _Traits::copy(_Ptr + _Left_size, _Right_data._Myptr(), _Right_size + 1);

	add         r0,r1,r8

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov         r1,r6

; 2963 :             // take _Left's buffer, max_size() is OK because _Fits_in_left
; 2964 :             _My_data._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal())); // throws, hereafter nothrow in this block
; 2965 :             _Take_contents(_Left);
; 2966 :             const auto _Ptr = _My_data._Myptr();
; 2967 :             _ASAN_STRING_MODIFY(static_cast<difference_type>(_Right_size));
; 2968 :             _Traits::copy(_Ptr + _Left_size, _Right_data._Myptr(), _Right_size + 1);

	add         r2,r10,#1

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	bl          memcpy

; 2969 :             _My_data._Mysize = _New_size;

	str         r9,[r4,#0x10]

; 3017 :         _ASAN_STRING_CREATE(*this);
; 3018 :         _Proxy._Release();
; 3019 :     }

	mov         r0,r4
|$M116|
	pop         {r3-r11,pc}
|$LN2@basic_stri|

; 2970 :             return;
; 2971 :         }
; 2972 : 
; 2973 :         const bool _Fits_in_right = _Left_size <= _Right_capacity - _Right_size;

	sub         r3,r2,r10
	cmp         r8,r3
	bhi         |$LN8@basic_stri|
	movs        r3,#1
	b           |$LN9@basic_stri|
|$LN8@basic_stri|
	movs        r3,#0
|$LN9@basic_stri|

; 2974 :         if (_Allocators_equal(_Getal(), _Right._Getal()) && _Fits_in_right) {

	cbz         r3,|$LN3@basic_stri|

; 3139 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	ldr         r3,[r6]

; 2988 :             _ASAN_STRING_MODIFY(static_cast<difference_type>(_Left_size));
; 2989 :             _Traits::move(_Ptr + _Left_size, _Ptr, _Right_size + 1);

	add         r2,r10,#1

; 3139 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	str         r3,[r4]
	ldr         r3,[r6,#4]
	str         r3,[r4,#4]
	ldr         r3,[r6,#8]
	str         r3,[r4,#8]
	ldr         r3,[r6,#0xC]
	str         r3,[r4,#0xC]
	ldr         r3,[r6,#0x10]
	str         r3,[r4,#0x10]
	ldr         r3,[r6,#0x14]
	str         r3,[r4,#0x14]

; 5002 :         _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF
	strd        r0,r3,[r6,#0x10]

; 5003 :         _My_data._Activate_SSO_buffer();
; 5004 : 
; 5005 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5006 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	strb        r0,[r6]

; 2975 :             // take _Right's buffer, max_size() is OK because _Fits_in_right
; 2976 :             // At this point, we have tested:
; 2977 :             // !(_Fits_in_left && _Right_capacity <= _Left_capacity) && _Fits_in_right
; 2978 :             // therefore: (by De Morgan's Laws)
; 2979 :             // (!_Fits_in_left || _Right_capacity > _Left_capacity) && _Fits_in_right
; 2980 :             // therefore: (by the distributive property)
; 2981 :             // (!_Fits_in_left && _Fits_in_right)  // implying _Right has more capacity
; 2982 :             //     || (_Right_capacity > _Left_capacity && _Fits_in_right)  // tests that _Right has more capacity
; 2983 :             // therefore: _Right must have more than the minimum capacity, so it must be _Large_string_engaged()
; 2984 :             _STL_INTERNAL_CHECK(_Right_data._Large_string_engaged());
; 2985 :             _My_data._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal())); // throws, hereafter nothrow in this block
; 2986 :             _Take_contents(_Right);
; 2987 :             const auto _Ptr = _Unfancy(_My_data._Bx._Ptr);

	ldr         r6,[r4]

; 2988 :             _ASAN_STRING_MODIFY(static_cast<difference_type>(_Left_size));
; 2989 :             _Traits::move(_Ptr + _Left_size, _Ptr, _Right_size + 1);

	add         r0,r6,r8

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov         r1,r6
	bl          memmove

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r3,[r5,#0x14]
	cmp         r3,#0x10
	bcc         |$LN106@basic_stri|
	movs        r3,#1
	b           |$LN107@basic_stri|
|$LN106@basic_stri|
	movs        r3,#0
|$LN107@basic_stri|

; 2283 :         if (_Large_string_engaged()) {

	cbz         r3,|$LN102@basic_stri|

; 2284 :             _Result = _Unfancy(_Bx._Ptr);

	ldr         r5,[r5]
|$LN102@basic_stri|

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov         r2,r8
	mov         r1,r5
	mov         r0,r6
	bl          memcpy

; 2990 :             _Traits::copy(_Ptr, _Left_data._Myptr(), _Left_size);
; 2991 :             _My_data._Mysize = _New_size;

	str         r9,[r4,#0x10]

; 3017 :         _ASAN_STRING_CREATE(*this);
; 3018 :         _Proxy._Release();
; 3019 :     }

	mov         r0,r4
|$M117|
	pop         {r3-r11,pc}
|$LN3@basic_stri|

; 2992 :             return;
; 2993 :         }
; 2994 : 
; 2995 :         // can't use either buffer, reallocate
; 2996 :         const auto _Max = max_size();
; 2997 :         if (_Max - _Left_size < _Right_size) { // check if max_size() is OK

	mvn         r7,#0x80000000
	sub         r3,r7,r8
	cmp         r3,r10
	bcc         |$LN114@basic_stri|

; 4886 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	orr         r3,r9,#0xF
	cmp         r3,r7

; 4887 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	bhi         |$LN25@basic_stri|

; 4888 :             return _Max;
; 4889 :         }
; 4890 : 
; 4891 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4892 :             return _Max;
; 4893 :         }
; 4894 : 
; 4895 :         return (_STD max)(_Masked, _Old + _Old / 2);

	cmp         r3,#0x16
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

	bcs         |$LN24@basic_stri|
	movs        r7,#0x16
	b           |$LN25@basic_stri|
|$LN24@basic_stri|
	mov         r7,r3
|$LN25@basic_stri|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 3004 :         const pointer _Fancyptr = _Getal().allocate(_New_capacity + 1); // throws

	adds        r0,r7,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 234  :     if (_Bytes != 0) {

	beq         |$LN29@basic_stri|

; 77   :         return ::operator new(_Bytes);

	bl          |??2@YAPAXI@Z|
	mov         r9,r0

; 235  :         return _Traits::_Allocate(_Bytes);

	b           |$LN28@basic_stri|
|$LN29@basic_stri|

; 236  :     }
; 237  : 
; 238  :     return nullptr;

	mov         r9,#0
|$LN28@basic_stri|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 3012 :         _My_data._Mysize = _New_size;

	add         r3,r10,r8
	strd        r3,r7,[r4,#0x10]
	str         r9,[r4]

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r3,[r5,#0x14]
	cmp         r3,#0x10
	bcc         |$LN38@basic_stri|
	movs        r3,#1
	b           |$LN39@basic_stri|
|$LN38@basic_stri|
	movs        r3,#0
|$LN39@basic_stri|

; 2283 :         if (_Large_string_engaged()) {

	cbz         r3,|$LN34@basic_stri|

; 2284 :             _Result = _Unfancy(_Bx._Ptr);

	ldr         r5,[r5]
|$LN34@basic_stri|

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov         r2,r8
	mov         r1,r5
	mov         r0,r9
	bl          memcpy

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r3,[r6,#0x14]
	cmp         r3,#0x10
	bcc         |$LN47@basic_stri|
	movs        r3,#1
	b           |$LN48@basic_stri|
|$LN47@basic_stri|
	movs        r3,#0
|$LN48@basic_stri|

; 2283 :         if (_Large_string_engaged()) {

	cbz         r3,|$LN43@basic_stri|

; 2284 :             _Result = _Unfancy(_Bx._Ptr);

	ldr         r6,[r6]
|$LN43@basic_stri|

; 3013 :         _My_data._Myres  = _New_capacity;
; 3014 :         const auto _Ptr  = _Unfancy(_Fancyptr);
; 3015 :         _Traits::copy(_Ptr, _Left_data._Myptr(), _Left_size);
; 3016 :         _Traits::copy(_Ptr + _Left_size, _Right_data._Myptr(), _Right_size + 1);

	add         r2,r10,#1
	add         r0,r9,r8

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov         r1,r6
	bl          memcpy

; 3017 :         _ASAN_STRING_CREATE(*this);
; 3018 :         _Proxy._Release();
; 3019 :     }

	mov         r0,r4
|$M118|
	pop         {r3-r11,pc}
|$LN114@basic_stri|

; 2998 :             _Xlen_string();

	bl          |?_Xlen_string@std@@YAXXZ|
	__debugbreak
|$LN115@basic_stri|
|$LN112@basic_stri|
|$M120|

	ENDP  ; |??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@U_String_constructor_concat_tag@1@AAV01@1@Z|, std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@ABV01@@Z
.text$mn	SEGMENT

|??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@ABV01@@Z| PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 2625 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

	push        {r4-r7,r11,lr}
	add         r11,sp,#0x10
|$M52|
	mov         r5,r0

; 2340 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movs        r3,#0
	strd        r3,r3,[r5]
	strd        r3,r3,[r5,#8]

; 2348 :     size_type _Mysize = 0; // current length of string

	strd        r3,r3,[r5,#0x10]

; 2300 :         return _BUF_SIZE <= _Myres;

	ldr         r3,[r1,#0x14]

; 2291 :         const value_type* _Result = _Bx._Buf;

	mov         r7,r1

; 2300 :         return _BUF_SIZE <= _Myres;

	cmp         r3,#0x10
	it          cs
	movcs       r3,#1
	it          cc
	movcc       r3,#0

; 2292 :         if (_Large_string_engaged()) {

	cbz         r3,|$LN12@basic_stri|

; 2293 :             _Result = _Unfancy(_Bx._Ptr);

	ldr         r7,[r1]
|$LN12@basic_stri|

; 2626 :         _Construct<_Construct_strategy::_From_string>(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	ldr         r6,[r1,#0x10]

; 2739 :         if (_Count > max_size()) {

	mvn         r4,#0x80000000
	cmp         r6,r4
	bhi         |$LN47@basic_stri|

; 2741 :         }
; 2742 : 
; 2743 :         auto& _Al       = _Getal();
; 2744 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2745 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2746 : 
; 2747 :         if (_Count < _BUF_SIZE) {

	cmp         r6,#0x10
	bcs         |$LN20@basic_stri|

; 2749 :             _My_data._Myres  = _BUF_SIZE - 1;

	movs        r3,#0xF

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	movs        r2,#0x10
	mov         r1,r7
	mov         r0,r5

; 2748 :             _My_data._Mysize = _Count;

	strd        r6,r3,[r5,#0x10]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	bl          memmove

; 2627 :     }

	mov         r0,r5
|$M49|
	pop         {r4-r7,r11,pc}
|$LN20@basic_stri|

; 2769 :         _My_data._Myres               = _BUF_SIZE - 1;

	movs        r3,#0xF

; 4886 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	orr         r1,r6,r3
	cmp         r1,r4

; 2769 :         _My_data._Myres               = _BUF_SIZE - 1;

	str         r3,[r5,#0x14]

; 4899 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

	mov         r2,r3

; 4887 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	bhi         |$LN33@basic_stri|

; 4888 :             return _Max;
; 4889 :         }
; 4890 : 
; 4891 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

	sub         r3,r4,r3,lsr #1
	cmp         r2,r3
	bhi         |$LN33@basic_stri|

; 4892 :             return _Max;
; 4893 :         }
; 4894 : 
; 4895 :         return (_STD max)(_Masked, _Old + _Old / 2);

	add         r4,r2,r2,lsr #1
	cmp         r1,r4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

	bcc         |$LN33@basic_stri|
	mov         r4,r1
|$LN33@basic_stri|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2771 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	adds        r0,r4,#1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 234  :     if (_Bytes != 0) {

	beq         |$LN37@basic_stri|

; 77   :         return ::operator new(_Bytes);

	bl          |??2@YAPAXI@Z|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2789 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count + 1);

	adds        r2,r6,#1

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov         r1,r7

; 2772 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	str         r0,[r5]

; 2773 : 
; 2774 : #if _HAS_CXX20
; 2775 :         if (_STD is_constant_evaluated()) { // Begin the lifetimes of the objects before copying to avoid UB
; 2776 :             _Traits::assign(_Unfancy(_New_ptr), _New_capacity + 1, _Elem());
; 2777 :         }
; 2778 : #endif // _HAS_CXX20
; 2779 : 
; 2780 :         _My_data._Mysize = _Count;

	strd        r6,r4,[r5,#0x10]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	bl          memcpy

; 2627 :     }

	mov         r0,r5
|$M50|
	pop         {r4-r7,r11,pc}
|$LN37@basic_stri|
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory

; 238  :     return nullptr;

	movs        r0,#0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring

; 2789 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count + 1);

	adds        r2,r6,#1

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov         r1,r7

; 2772 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	str         r0,[r5]

; 2773 : 
; 2774 : #if _HAS_CXX20
; 2775 :         if (_STD is_constant_evaluated()) { // Begin the lifetimes of the objects before copying to avoid UB
; 2776 :             _Traits::assign(_Unfancy(_New_ptr), _New_capacity + 1, _Elem());
; 2777 :         }
; 2778 : #endif // _HAS_CXX20
; 2779 : 
; 2780 :         _My_data._Mysize = _Count;

	strd        r6,r4,[r5,#0x10]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	bl          memcpy

; 2627 :     }

	mov         r0,r5
|$M51|
	pop         {r4-r7,r11,pc}
|$LN47@basic_stri|

; 2740 :             _Xlen_string(); // result too long

	bl          |?_Xlen_string@std@@YAXXZ|
	__debugbreak
|$LN48@basic_stri|
|$LN45@basic_stri|
|$M53|

	ENDP  ; |??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAA@ABV01@@Z|, std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
.text$mn	SEGMENT

|?_Xlen_string@std@@YAXXZ| PROC				; std::_Xlen_string

; 2366 : [[noreturn]] inline void _Xlen_string() {

	push        {r11,lr}
	mov         r11,sp
|$M6|

; 2367 :     _Xlength_error("string too long");

	movw        r0,|??_C@_0BA@JFNIOLAK@string?5too?5long@|
	movt        r0,|??_C@_0BA@JFNIOLAK@string?5too?5long@|
	bl          |?_Xlength_error@std@@YAXPBD@Z|
	__debugbreak
|$LN5@Xlen_strin|
|$LN4@Xlen_strin|
|$M7|

	ENDP  ; |?_Xlen_string@std@@YAXXZ|, std::_Xlen_string

	END
